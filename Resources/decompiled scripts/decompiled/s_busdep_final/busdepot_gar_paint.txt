void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    StrCopy( ref l_U52, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U60, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U68 = 0;
    l_U69 = 0;
    l_U72 = 0;
    l_U73 = 0;
    l_U74 = 0;
    l_U575 = {-49.84706000, -37.59435000, 4.97235300};
    l_U578 = 90.00000000;
    l_U581 = {-58.46000000, -23.93600000, 1.14500000};
    l_U585 = {-58.46000000, -23.93600000, 1.14500000};
    l_U614 = 0;
    l_U615 = 0;
    l_U616 = 0;
    l_U617 = 0;
    l_U618 = 0;
    l_U619 = 0;
    l_U620 = 0;
    l_U621 = 0;
    l_U622 = 0;
    l_U623 = 0;
    l_U719 = 0;
    l_U729 = 0;
    l_U730 = 0;
    l_U731 = 0;
    l_U732 = -1;
    l_U733 = -1;
    l_U735 = {-52.25000000, -33.88000000, 9.86500000};
    l_U738 = {-50.85000000, -23.13000000, 0.10000000};
    l_U741 = 220.00000000;
    l_U742 = {-52.54000000, -21.44000000, 0.10000000};
    l_U745 = 250.00000000;
    l_U746 = {-54.22000000, -23.87000000, 0.10000000};
    l_U749 = 140.00000000;
    l_U781 = {-52.35586000, -38.65434000, 6.17340300};
    l_U784 = {-4.47806500, 0.00000900, -1.80662800};
    l_U787 = 50.00000000;
    l_U788 = 100;
    l_U789 = 0;
    l_U790 = 0;
    l_U791 = 0;
    l_U792 = {-52.95000000, -37.93000000, 4.97000000};
    l_U795 = 0.00000000;
    l_U805 = 750;
    l_U815 = 1250;
    l_U825 = 3750;
    l_U835 = 1000;
    l_U863 = 3000;
    l_U873 = 6000;
    l_U883 = 0;
    l_U884 = 0;
    l_U885 = 0;
    l_U895 = 400;
    l_U896 = 1;
    l_U897 = {-52.06400000, -19.96300000, 0.00000000};
    l_U900 = 115.00000000;
    l_U901 = {-47.50000000, -16.50000000, 5.07700000};
    l_U904 = 90.00000000;
    l_U905 = 0;
    l_U906 = {-52.52500000, -21.12400000, 0.75000000};
    l_U909 = 85.00000000;
    l_U910 = 4000;
    l_U911 = 2500;
    l_U921 = 0.19500000;
    l_U922 = -4.55000000;
    l_U923 = {-57.47000000, -23.88000000, 0.00200000};
    l_U926 = 90.00000000;
    l_U927 = {-57.38000000, -23.87000000, 0.00200000};
    l_U930 = 90.00000000;
    l_U962 = {-55.67000000, -21.32000000, 4.16000000};
    l_U965 = {-40.39000000, 0.00000000, 112.04000000};
    l_U968 = 45.00000000;
    l_U969 = 1500;
    l_U970 = -43.32920000;
    l_U971 = -5.56522700;
    l_U981 = 0.00000000;
    l_U982 = -21.00000000;
    l_U983 = 0;
    l_U984 = 0;
    l_U1005 = 0;
    sub_1191( "SP", "Script busdepot_gar_paint.sc is starting...", 0 );
    l_U68 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_1260();
        if (l_U69 == 0)
        {
            sub_13829();
        }
        WAIT( 0 );
    }
    sub_7992();
    sub_62026();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "busdepot_gar_paint" );
    SET_EXITFLAG_RESPONSE();
    sub_1191( "SP", "Script busdepot_gar_paint.sc is terminating...", 0 );
    return;
}

void sub_1191(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1260()
{
    switch (l_U69)
    {
        case 0:
        if (g_U764 == 4)
        {
            if (sub_1350())
            {
                sub_1843();
                if ((IS_PED_DEAD( sub_1622() )) == 0)
                {
                    PED_ACTION_TREE_PLAY_NODE( sub_1622(), "Global/Player/PlayerRoot/PLAYER_INITIALIZE_LOCO" );
                }
                sub_5192( ref l_U864 );
                l_U69 = 4;
            }
            if (IS_PED_DEAD( sub_1622() ))
            {
                sub_1191( "SP", "Mission Failed: Player died.", 0 );
                l_U69 = 2;
                sub_1191( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                sub_1191( "SP", "Mission Failed:  Giovanna died.", 0 );
                l_U74 = 1;
                l_U69 = 1;
                sub_1191( "SP", "eFailState = FAIL_WAITING_FOR_GIOVANNA", 0 );
            }
        }
        else if ((sub_5616() == 1) || ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((IS_PED_DEAD( sub_1622() )) == 1)))
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "10_02_bus_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "10_02_bus_concat" );
            }
            sub_5742( ref g_U765[4] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
        sub_1191( "SP", "eFailState = FAIL_WAITING_FOR_GIOVANNA", 0 );
        if (sub_5847() == 1)
        {
            l_U69 = 2;
            sub_1191( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 2:
        if ((sub_6509( NOT (IS_PED_DEAD( sub_1622() )) )) == 1)
        {
            l_U69 = 3;
            sub_1191( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 3:
        sub_1191( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        if ((IS_PED_DEAD( sub_1622() )) == 0)
        {
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U69 = 4;
            sub_1191( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 4:
        sub_1191( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        sub_7992();
        sub_8191( g_U2595 );
        l_U69 = 5;
        sub_1191( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 5:
        sub_1191( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        sub_9491( ref l_U75, sub_1622() );
        sub_13510();
        l_U69 = 6;
        sub_1191( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        break;
        case 6:
        sub_1191( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
        l_U68 = 1;
        l_U69 = 0;
        sub_1191( "SP", "eFailState = FAIL_IDLE", 0 );
        break;
    }
    return;
}

int sub_1350()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1622() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1622(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1644(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1644(), 1 );
            if ((IS_PED_VISIBLE( sub_1622() )) == 0)
            {
                SET_PED_VISIBLE( sub_1622(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_1622()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1644() );
    }
    return 0;
}

void sub_1644()
{
    return GET_PLAYER_ID();
}

void sub_1843()
{
    int I;
    int iVar3;
    int iVar4;
    float fVar5;

    sub_1191( "SP", "P_GARAGE_MPM_END", 0 );
    if (((IS_PED_DEAD( sub_1622() )) == 0) AND (((IS_PLAYER_DEAD( sub_1644() )) == 0) AND ((IS_PLAYER_PLAYING( sub_1644() )) == 1)))
    {
        ISEQ_UNREGISTER_ENTITY( -1113582755, "player" );
        ISEQ_UNREGISTER_ENTITY( -1113582755, "gio" );
        ISEQ_UNREGISTER_ENTITY( -1113582755, "bus_mpm_chain" );
        ISEQ_TERMINATE( -1113582755 );
        sub_2020( -1113582755, ref g_U1272 );
        if (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((((sub_2392( ref l_U481 )) + (sub_2392( ref l_U526 ))) + (sub_2392( ref l_U558 ))) > 0))
        {
            SNAP_PLAYER_TO_COVERPOINT( sub_1644(), "GenCover", "6AD42EEC_8DA94CCC_Corner2", 0 );
        }
        SET_PLAYER_CONTROL( sub_1644(), 0, 0 );
        SET_PLAYER_CONTROL( sub_1644(), 1, 0 );
    }
    if (NOT l_U790)
    {
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
        DEACTIVATE_BULLET_TIME( 0, 0 );
    }
    ENABLE_MPM( 0 );
    ENABLE_ALL_ADRENALINE( 1 );
    sub_2643();
    sub_3009();
    for ( I = 0; I <= 2; I++ )
    {
        if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
        {
            if ((sub_3705( l_U481[I], l_U129 )) == 0)
            {
                SET_PED_HEALTH( l_U481[I], 0, 0 );
            }
            else
            {
                CLEAR_PED_TASKS( l_U481[I] );
                sub_3815( l_U481[I], sub_1622() );
                TASK_COMBAT_PED( l_U481[I], sub_1622() );
            }
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U481[I], 0 );
            SET_PED_CAN_PUSH_PLAYER( l_U481[I], 0 );
            SET_PED_RESIST_TO_OBJECT_COLLISION( l_U481[I], 0 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
        }
    }
    for ( I = 0; I <= 2; I++ )
    {
        if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
        {
            if ((sub_3705( l_U526[I], l_U129 )) == 0)
            {
                SET_PED_HEALTH( l_U526[I], 0, 0 );
            }
            else
            {
                CLEAR_PED_TASKS( l_U526[I] );
                sub_3815( l_U526[I], sub_1622() );
                TASK_COMBAT_PED( l_U526[I], sub_1622() );
            }
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U526[I], 0 );
            SET_PED_CAN_PUSH_PLAYER( l_U526[I], 0 );
            SET_PED_RESIST_TO_OBJECT_COLLISION( l_U526[I], 0 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
        }
    }
    for ( I = 0; I <= 1; I++ )
    {
        if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
        {
            if ((sub_3705( l_U558[I], l_U129 )) == 0)
            {
                SET_PED_HEALTH( l_U558[I], 0, 0 );
            }
            else
            {
                CLEAR_PED_TASKS( l_U558[I] );
                sub_3815( l_U558[I], sub_1622() );
                TASK_COMBAT_PED( l_U558[I], sub_1622() );
            }
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U558[I], 0 );
            SET_PED_CAN_PUSH_PLAYER( l_U558[I], 0 );
            SET_PED_RESIST_TO_OBJECT_COLLISION( l_U558[I], 0 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
        }
    }
    iVar3 = ((sub_2392( ref l_U481 )) + (sub_2392( ref l_U526 ))) + (sub_2392( ref l_U558 ));
    iVar4 = 8;
    fVar5 = 1.00000000 - ((TO_FLOAT( iVar3 )) / (TO_FLOAT( iVar4 + 1 )));
    sub_4517( fVar5 );
    sub_4613( ref l_U297, l_U481[0] );
    sub_4686( ref l_U298, l_U481[0], 3 );
    sub_4613( ref l_U297, l_U481[1] );
    sub_4686( ref l_U298, l_U481[1], 3 );
    sub_4613( ref l_U297, l_U481[2] );
    sub_4817( l_U481[2] );
    sub_4613( ref l_U297, l_U526[0] );
    sub_4686( ref l_U302, l_U526[0], 3 );
    sub_4613( ref l_U297, l_U526[1] );
    sub_4817( l_U526[1] );
    sub_4613( ref l_U297, l_U526[2] );
    sub_4686( ref l_U299, l_U526[2], 3 );
    sub_4613( ref l_U297, l_U558[0] );
    sub_4817( l_U558[0] );
    sub_4613( ref l_U297, l_U558[1] );
    sub_4817( l_U558[1] );
    return;
}

void sub_2020(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_2132( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_2132(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_2392(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_2643()
{
    sub_1191( "SP", "P_TERMINATE_MPM_ENEMY_ISEQUENCES", 0 );
    ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_a1_pstl" );
    ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_b1_rifle" );
    ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_c1_pstl" );
    ISEQ_TERMINATE( -145301993 );
    sub_2020( -145301993, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_d1" );
    ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_e1" );
    ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_f1" );
    ISEQ_TERMINATE( 1800455693 );
    sub_2020( 1800455693, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 1504518854, "bus_vcpf_g1" );
    ISEQ_UNREGISTER_ENTITY( 1504518854, "bus_vcpf_h1" );
    ISEQ_TERMINATE( 1504518854 );
    sub_2020( 1504518854, ref g_U1272 );
    return;
}

void sub_3009()
{
    sub_1191( "SP", "P_CREATE_PAINT_BALCONY_DOORS", 0 );
    l_U609 = sub_3094( g_U2190._fU0, g_U2190._fU4, 0.00000000, 0.00000000, 180.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U610 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U609, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U609, ref g_U1808 );
    }
    l_U610 = sub_3094( g_U2183._fU0, g_U2183._fU4, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U610 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U610, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U610, ref g_U1808 );
    }
    return;
}

void sub_3094(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_3204( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_3204(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_3309( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3309(unknown uParam0)
{
    return;
}

int sub_3705(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_3815(unknown uParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND (((DOES_PED_EXIST( uParam0 )) == 1) AND (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))))
    {
        CLEAR_LOCKED_TARGET( uParam0 );
        REGISTER_TARGET( uParam0, uParam1 );
        SET_LOCKED_TARGET( uParam0, uParam1 );
    }
    return;
}

void sub_4517(unknown uParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_1622() )))
    {
        iVar3 = (ROUND( ((GET_PED_MAX_HEALTH( sub_1622() )) - 100) * uParam0 )) + 100;
        SET_PED_HEALTH( sub_1622(), iVar3, 0 );
    }
    return;
}

void sub_4613(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

void sub_4686(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_4817(unknown uParam0)
{
    sub_1191( "SP", "P_GARAGE_PAINTROOM_TETHER_PED", 0 );
    sub_4686( ref l_U298, uParam0, 3 );
    sub_4686( ref l_U299, uParam0, 3 );
    sub_4686( ref l_U300, uParam0, 3 );
    sub_4686( ref l_U301, uParam0, 3 );
    sub_4686( ref l_U302, uParam0, 3 );
    return;
}

void sub_5192(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5616()
{
    return g_U648;
}

void sub_5742(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_5847()
{
    switch (l_U74)
    {
        case 0: break;
        case 1:
        sub_1191( "SP", "eGioDeathCamState = DEATHCAM_SETUP", 0 );
        sub_5958( 1, 0, 0, 1 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
        l_U74 = 2;
        sub_1191( "SP", "eGioDeathCamState = DEATHCAM_WAITING_FOR_BULLETCAM", 0 );
        case 2:
        if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
        {
            DO_SCREEN_FADE_OUT( 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
            l_U74 = 3;
            sub_1191( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        }
        break;
        case 3:
        sub_1191( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        l_U74 = 0;
        sub_1191( "SP", "eGioDeathCamState = DEATHCAM_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

void sub_5958(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1622() )))
        {
            SET_PLAYER_CONTROL( sub_1644(), 0, uParam2 );
            SET_PED_DUCKING( sub_1622(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1622() );
            }
            SET_PED_INVINCIBLE( sub_1622(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

int sub_6509(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_6570( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1622() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_6680( ref l_U43, l_U42, 1, 1 );
            sub_6816( ref l_U43 );
        }
        if (sub_6936( ref l_U43 ))
        {
            sub_1191( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1622() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1644() )))
            {
                SET_PLAYER_CONTROL( sub_1644(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_1191( "NS", "Player will QUIT", 0 );
        sub_7423();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1191( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_7423();
        return 1;
        break;
    }
    return 0;
}

int sub_6570(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_6680(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_6816(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_6936(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_7423()
{
    sub_1191( "NS", "P_PostFailRetryCleanup", 0 );
    sub_5192( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1644() )))
    {
        SET_PLAYER_CONTROL( sub_1644(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_7992()
{
    sub_1191( "SP", "P_CLEANUP_GARAGE", 0 );
    sub_2643();
    ISEQ_UNREGISTER_ENTITY( -1113582755, "player" );
    ISEQ_UNREGISTER_ENTITY( -1113582755, "gio" );
    ISEQ_UNREGISTER_ENTITY( -1113582755, "bus_mpm_chain" );
    sub_2020( -1113582755, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 529194724, "player" );
    sub_2020( 529194724, ref g_U1272 );
    sub_8157( ref l_U430 );
    sub_8157( ref l_U481 );
    sub_8157( ref l_U526 );
    sub_8157( ref l_U558 );
    sub_8316( l_U588 );
    sub_8316( l_U589 );
    sub_8316( l_U734 );
    sub_8316( l_U579 );
    sub_8316( g_U2626 );
    sub_8316( l_U580 );
    sub_8316( l_U584 );
    if (l_U732 != -1)
    {
        STOP_SOUND( l_U732, 0 );
        RELEASE_SOUND_ID( l_U732 );
        l_U732 = -1;
    }
    if (l_U733 != -1)
    {
        STOP_SOUND( l_U733, 0 );
        RELEASE_SOUND_ID( l_U733 );
        l_U733 = -1;
    }
    sub_8316( l_U609 );
    sub_8316( l_U610 );
    sub_8527( l_U611 );
    sub_8527( l_U612 );
    sub_8527( l_U613 );
    sub_8609( "S_BUSDEP_MPM", ref g_U1704 );
    sub_8933( "S_BUSDEP_MPM", ref g_U1704 );
    sub_8527( g_U739._fU0 );
    sub_9114();
    return;
}

void sub_8157(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_8191( (uParam0^)[I] );
    }
    return;
}

void sub_8191(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_8316(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_8527(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_8609(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_8626( uParam0, uParam1 ))
    {
        iVar4 = sub_8725( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_8626(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_8725(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_8933(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_2132( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_9114()
{
    sub_1191( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_1191( "CCB", "Stopping the Bus_Depot_Garage_Paint_MPM context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Paint_MPM" );
    sub_1191( "CCB", "Stopping the Bus_Depot_Garage_Paint context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Paint" );
    return;
}

void sub_9491(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1191( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_9675( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_10752( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_11044( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_11391( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_11044( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_11391( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_11044( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_11391( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_11676( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_11391( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_11676( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_11391( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_12169( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_12330( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1622(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1191( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_9675(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_9707( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_9707(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_10752(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_11044(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_3309( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_11391(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_11676(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_3309( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_12169(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_12330(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_9707( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_12402( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_12402(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_13510()
{
    sub_1191( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", 0 );
    if ((IS_PED_DEAD( sub_1622() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_1622(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_1622(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_1622(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_1622(), 0, 7 );
    }
    return;
}

void sub_13829()
{
    int I;
    unknown uVar3;
    vector vVar4;
    float fVar7;
    vector vVar8;
    float fVar11;
    vector vVar12;
    float fVar15;
    vector vVar16;
    float fVar19;
    vector vVar20;
    float fVar23;

    vVar4 = {-49.15000000, -11.38000000, 0.04000000};
    fVar7 = 90.00000000;
    vVar8 = {-49.59000000, -11.95000000, 0.04000000};
    fVar11 = 90.00000000;
    vVar12 = {-57.69000000, -12.16000000, 0.04000000};
    fVar15 = -90.00000000;
    vVar16 = {-58.90000000, -9.89000000, 0.04000000};
    fVar19 = -180.00000000;
    vVar20 = {-59.56000000, -10.08000000, 0.04000000};
    fVar23 = -180.00000000;
    sub_13985();
    sub_14193();
    switch (l_U68)
    {
        case 0: break;
        case 1:
        sub_1191( "SP", "eCheckpointState = CP_INIT_SCRIPT_DATA", 0 );
        sub_14788();
        sub_15140();
        sub_14276( 0 );
        sub_17581( ref l_U306, 1.00000000, 0 );
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U68 = 2;
        sub_1191( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_1191( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_17898( -1204387800, ref g_U910 );
        sub_17898( g_U2102, ref g_U910 );
        sub_17898( g_U2110, ref g_U910 );
        sub_17898( g_U2123, ref g_U910 );
        sub_17898( g_U2124, ref g_U910 );
        sub_17898( g_U2112, ref g_U910 );
        sub_17898( g_U2113, ref g_U910 );
        sub_17898( g_U2114, ref g_U910 );
        sub_17898( g_U2111, ref g_U910 );
        sub_17898( g_U2116, ref g_U910 );
        sub_17898( g_U2117, ref g_U910 );
        sub_17898( -2023675653, ref g_U910 );
        sub_17898( 948292876, ref g_U910 );
        sub_17898( -783139352, ref g_U910 );
        sub_17898( g_U762, ref g_U910 );
        sub_19449( g_U2854, ref g_U1211 );
        sub_19449( g_U2855, ref g_U1211 );
        sub_19449( g_U2857, ref g_U1211 );
        sub_20424( -1113582755, ref g_U1272 );
        sub_20424( -145301993, ref g_U1272 );
        sub_20424( 1800455693, ref g_U1272 );
        sub_20424( 1504518854, ref g_U1272 );
        sub_22421( "SCRIPT_MISSION\GARAGE_DOOR", ref g_U1757 );
        sub_23427( "S_BUSDEP_MPM", ref g_U1704 );
        if (g_U764 < 4)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "10_02_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 0))
            {
                PRE_STREAM_SEAMLESS_CUTSCENE( "10_02_bus_concat" );
            }
        }
        l_U68 = 3;
        sub_1191( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (sub_24681( ref g_U910, ref g_U1211, ref g_U1272, ref g_U1369, ref g_U1474, ref g_U1535, ref g_U1704, ref g_U1757 ))
        {
            l_U68 = 4;
            sub_1191( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
        sub_1191( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
        if (g_U764 < 4)
        {
            l_U68 = 6;
            sub_1191( "SP", "eCheckpointState = CP_CREATE_CUTSCENE_ENEMIES", 0 );
        }
        else if (g_U764 == 4)
        {
            sub_26001();
            sub_27176();
            sub_29569();
            if ((l_U615 == 0) AND (g_U763 == 4))
            {
                l_U615 = 1;
                if ((sub_32504( ref l_U75 )) == 0)
                {
                    sub_11676( sub_1622(), g_U2854, 50, 0, 0 );
                    sub_11044( sub_1622(), g_U2855, 0, 150, 0 );
                }
                l_U68 = 5;
                sub_1191( "SP", "eCheckpointState = CP_WAIT_FOR_PLAYER_WEAPON", 0 );
            }
            else
            {
                l_U68 = 9;
                sub_1191( "SP", "eCheckpointState = CP_START_CHAIN_MPM_BLEND_OUT", 0 );
            }
        }
        break;
        case 5:
        if ((IS_PED_DEAD( sub_1622() )) == 0)
        {
            uVar3 = GET_WEAPON_FROM_HAND( sub_1622(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
            {
                l_U68 = 9;
                sub_1191( "SP", "eCheckpointState = CP_START_CHAIN_MPM_BLEND_OUT", 0 );
            }
        }
        break;
        case 6:
        sub_1191( "SP", "eCheckpointState = CP_CREATE_CUTSCENE_ENEMIES", 0 );
        if (sub_33051() == 1)
        {
            l_U68 = 7;
            sub_1191( "SP", "eCheckpointState = CP_WAIT_FOR_FUEL_DEPOT_TO_HANDOFF", 0 );
        }
        break;
        case 7:
        if (g_U2866 == 1)
        {
            l_U70 = 1;
            l_U68 = 8;
            sub_1191( "SP", "eCheckpointState = CP_HANDLE_FIRE_ESCAPE_CUTSCENE", 0 );
            break;
        }
        return;
        case 8:
        if (sub_33859() == 1)
        {
            if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                SET_PED_KEEP_TASK( g_U2595, 0 );
            }
            l_U68 = 9;
            sub_1191( "SP", "eCheckpointState = CP_START_CHAIN_MPM_BLEND_OUT", 0 );
            break;
        }
        return;
        case 9:
        sub_1191( "SP", "eCheckpointState = CP_START_CHAIN_MPM_BLEND_OUT", 0 );
        CAMERA_POINT_AT_COORD( -51.97000000, -21.09000000, -2.00000000, 0 );
        if ((DOES_CAM_EXIST( l_U750._fU0 )) == 0)
        {
            sub_38508( ref l_U750, l_U781, l_U784, l_U787, l_U788 );
            sub_38719( ref l_U750 );
        }
        if ((IS_PED_DEAD( sub_1622() )) == 0)
        {
            CLEAR_PED_TASKS( sub_1622() );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
            SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1808 );
            CLEAR_PED_TASKS_IMMEDIATELY( g_U2595 );
        }
        if ((ISEQ_QUERY_STATE( -1113582755, 3 )) == 0)
        {
            sub_38223( sub_1622(), l_U792, l_U795 );
            sub_38223( g_U2595, l_U562._fU0, l_U562._fU12 );
            ISEQ_REGISTER_ENTITY( -1113582755, "player", sub_1622(), 0 );
            ISEQ_REGISTER_ENTITY( -1113582755, "gio", g_U2595, 0 );
            ISEQ_REGISTER_ENTITY( -1113582755, "bus_mpm_chain", l_U734, 1 );
            ISEQ_START( -1113582755 );
        }
        for ( I = 0; I <= 2; I++ )
        {
            if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
            {
                CLEAR_PED_TASKS( l_U481[I] );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U481[I], 0 );
                FREEZE_PED_POSITION( l_U481[I], 0 );
                SET_PED_VISIBLE( l_U481[I], 1 );
            }
        }
        if ((ISEQ_QUERY_STATE( -145301993, 3 )) == 0)
        {
            sub_38223( l_U481[0], l_U738, l_U741 );
            sub_38223( l_U481[1], l_U742, l_U745 );
            sub_38223( l_U481[2], l_U746, l_U749 );
            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_a1_pstl", l_U481[0], 0 );
            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_b1_rifle", l_U481[1], 0 );
            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_c1_pstl", l_U481[2], 0 );
            ISEQ_START( -145301993 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U981, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U982, 1065353216, 0 );
        SET_CAM_VIEW_MODE( 0 );
        sub_6680( ref l_U796, l_U805, 1, 0 );
        sub_6816( ref l_U796 );
        sub_6680( ref l_U806, l_U815, 1, 0 );
        sub_6816( ref l_U806 );
        sub_6680( ref l_U826, l_U835, 1, 0 );
        sub_6816( ref l_U826 );
        sub_6680( ref l_U854, l_U863, 1, 0 );
        sub_6816( ref l_U854 );
        sub_6680( ref l_U816, l_U825, 1, 0 );
        sub_6816( ref l_U816 );
        sub_6680( ref l_U864, l_U873, 1, 0 );
        sub_6816( ref l_U864 );
        sub_40860();
        l_U68 = 10;
        sub_1191( "SP", "eCheckpointState = CP_FIRST_FRAME_MPM_BLEND_OUT", 0 );
        break;
        case 10:
        sub_1191( "SP", "eCheckpointState = CP_FIRST_FRAME_MPM_BLEND_OUT", 0 );
        CAMERA_ENABLE_SHOULDER_MODE( 0 );
        ENABLE_HIT_DETECTION( 0 );
        ENABLE_MPM( 1 );
        ENABLE_ALL_ADRENALINE( 0 );
        SET_SILHOUETTE_ACTIVE( 0 );
        sub_41300( "S_BUSDEP_MPM", ref g_U1704 );
        for ( I = 0; I < l_U481; I++ )
        {
            if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
            {
                SET_PED_ALERTNESS( l_U481[I], 2 );
            }
        }
        for ( I = 0; I < l_U526; I++ )
        {
            if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U526[I], 0 );
                SET_PED_ALERTNESS( l_U526[I], 2 );
            }
        }
        for ( I = 0; I < l_U558; I++ )
        {
            if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U558[I], 0 );
                SET_PED_ALERTNESS( l_U558[I], 2 );
            }
        }
        if ((l_U75._fU0 == 0) || (g_U764 < 4))
        {
            g_U764 = 4;
            sub_41893( ref l_U75, g_U764, sub_1622(), g_U2339[4], g_U2466[4], g_U2509[4], g_U2552[4], 1 );
        }
        sub_45508( 1 );
        sub_45962( 1000, 1, 0, l_U981, l_U982, 0 );
        l_U68 = 11;
        sub_1191( "SP", "eCheckpointState = CP_HANDLE_CHAIN_MPM", 0 );
        break;
        case 11:
        sub_46122();
        sub_46318();
        if ((sub_6936( ref l_U796 )) == 1)
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if ((sub_6936( ref l_U806 )) == 1)
        {
            sub_46981( 1, 1 );
            sub_47245();
            CAMERA_CLEAR_POINT_AT_TARGET();
            DISPLAY_HUD( 0 );
            ENABLE_CROSSHAIR( 1 );
            SET_CROSSHAIR_PULSE();
            SET_CAM_VIEW_MODE( 0 );
            if ((IS_PED_DEAD( sub_1622() )) == 0)
            {
                SET_PED_NUM_CHARGERS_OVERRIDE( sub_1622(), -1 );
            }
            if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
            {
                SET_PED_INVINCIBLE( sub_1622(), 1 );
                SET_PED_PROOFS( sub_1622(), 1, 1, 1, 1, 1 );
                SET_PED_CONSUMING_AMMO( sub_1622(), 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1644(), 0 );
                if (GET_ADRENALINE_AMT() < 0.10000000)
                {
                    SET_ADRENALINE_AMT( 0.10000000 );
                }
                SET_PED_CAN_SWITCH_WEAPON( sub_1622(), 0 );
            }
            for ( I = 0; I < 3; I++ )
            {
                if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
                {
                    SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U481[I], 0 );
                }
            }
            if (l_U790 == 0)
            {
                SET_CAMERA_OVERRIDE( "BUS_DEPOT_MPM_AIM_CAMERA", "BUS_DEPOT_MPM_AIM_CAMERA", 0, 1, 1 );
                ACTIVATE_BULLET_TIME( 0, 1065353216, 1 );
            }
            AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_4_5", "", 0.00000000, 1000, 5000, -1082130432, 0 );
        }
        if (l_U789 == 0)
        {
            if ((sub_6936( ref l_U826 )) == 1)
            {
                for ( I = 0; I < l_U526; I++ )
                {
                    if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
                    {
                        CLEAR_PED_TASKS_IMMEDIATELY( l_U526[I] );
                        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U526[I], 0 );
                        FREEZE_PED_POSITION( l_U526[I], 0 );
                    }
                }
                sub_38223( l_U526[0], vVar4, fVar7 );
                sub_38223( l_U526[1], vVar8, fVar11 );
                sub_38223( l_U526[2], vVar12, fVar15 );
                ISEQ_REGISTER_ENTITY( 1800455693, "bus_vcpf_d1", l_U526[0], 0 );
                ISEQ_REGISTER_ENTITY( 1800455693, "bus_vcpf_e1", l_U526[1], 0 );
                ISEQ_REGISTER_ENTITY( 1800455693, "bus_vcpf_f1", l_U526[2], 0 );
                ISEQ_START( 1800455693 );
                sub_6680( ref l_U836, 66, 1, 0 );
                sub_6816( ref l_U836 );
            }
            if ((sub_6936( ref l_U836 )) == 1)
            {
                for ( I = 0; I < l_U526; I++ )
                {
                    if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
                    {
                        SET_PED_VISIBLE( l_U526[I], 1 );
                    }
                }
            }
            if ((sub_6936( ref l_U854 )) == 1)
            {
                for ( I = 0; I < l_U558; I++ )
                {
                    if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
                    {
                        CLEAR_PED_TASKS_IMMEDIATELY( l_U558[I] );
                        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U558[I], 0 );
                        SET_PED_VISIBLE( l_U558[I], 0 );
                        FREEZE_PED_POSITION( l_U558[I], 0 );
                    }
                }
                sub_38223( l_U558[0], vVar16, fVar19 );
                sub_38223( l_U558[1], vVar20, fVar23 );
                ISEQ_REGISTER_ENTITY( 1504518854, "bus_vcpf_g1", l_U558[0], 0 );
                ISEQ_REGISTER_ENTITY( 1504518854, "bus_vcpf_h1", l_U558[1], 0 );
                ISEQ_START( 1504518854 );
                for ( I = 0; I < l_U558; I++ )
                {
                    if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
                    {
                        SET_PED_VISIBLE( l_U558[I], 0 );
                    }
                }
                sub_6680( ref l_U845, 132, 1, 0 );
                sub_6816( ref l_U845 );
            }
            if ((sub_6936( ref l_U845 )) == 1)
            {
                for ( I = 0; I < l_U558; I++ )
                {
                    if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
                    {
                        SET_PED_VISIBLE( l_U558[I], 1 );
                    }
                }
            }
        }
        if ((sub_6936( ref l_U816 )) == 1)
        {
            sub_48796();
        }
        if ((sub_6936( ref l_U864 )) == 1)
        {
            sub_1843();
            sub_6680( ref l_U886, l_U895, 1, 0 );
            sub_6816( ref l_U886 );
            sub_6680( ref l_U874, 1500, 1, 0 );
            sub_6816( ref l_U874 );
            l_U883 = 1;
        }
        if (l_U884 == 0)
        {
            if ((IS_BULLET_CAMERA_ACTIVE() == 0) AND (l_U883 == 1))
            {
                sub_49239();
                l_U884 = 1;
            }
        }
        if ((sub_6936( ref l_U886 )) == 1)
        {
            if (IS_BULLET_CAMERA_ACTIVE() == 0)
            {
                SHAKE_GAMEPLAY_CAM( sub_49701(), 0.14000000 );
            }
        }
        if (l_U791 == 0)
        {
            if (IS_BULLET_CAMERA_ACTIVE() == 1)
            {
                sub_8609( "S_BUSDEP_MPM", ref g_U1704 );
                sub_8933( "S_BUSDEP_MPM", ref g_U1704 );
                l_U791 = 1;
            }
        }
        if ((sub_6936( ref l_U874 )) == 1)
        {
            ENABLE_CROSSHAIR( 0 );
            DISPLAY_HUD( 1 );
            ENABLE_HIT_DETECTION( 1 );
            SET_SILHOUETTE_ACTIVE( 1 );
            CAMERA_ENABLE_SHOULDER_MODE( 1 );
            SET_CAM_VIEW_MODE( 1 );
            if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
            {
                SET_PED_INVINCIBLE( sub_1622(), 0 );
                SET_PED_PROOFS( sub_1622(), 0, 0, 0, 0, 0 );
                SET_PED_CONSUMING_AMMO( sub_1622(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1644(), 1 );
                SET_PED_CAN_SWITCH_WEAPON( sub_1622(), 1 );
            }
            if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
            {
                SET_OBJECT_COLLIDE_WITH_NON_PLAYER_CHARACTER( g_U2624, 1 );
            }
            sub_50034();
            l_U68 = 12;
            sub_1191( "SP", "eCheckpointState = CP_CHAIN_MPM_FINISHED", 0 );
        }
        break;
        case 12:
        sub_46122();
        sub_46318();
        if (l_U791 == 0)
        {
            sub_8609( "S_BUSDEP_MPM", ref g_U1704 );
            sub_8933( "S_BUSDEP_MPM", ref g_U1704 );
            l_U791 = 1;
        }
        if (l_U884 == 0)
        {
            if ((IS_BULLET_CAMERA_ACTIVE() == 0) AND (l_U883 == 1))
            {
                sub_49239();
                l_U884 = 1;
            }
        }
        if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
        {
            if (IS_ROBO_TESTING() == 1)
            {
                if (sub_50431( ref l_U276, 0 ))
                {
                    sub_50536( ref l_U481 );
                    sub_50536( ref l_U526 );
                    sub_50536( ref l_U558 );
                    sub_1191( "MRB", "RoboTester is killing your waves!", 0 );
                }
            }
            if (l_U885 == 0)
            {
                if (sub_50729() == 0)
                {
                    AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_1", "", 0.00000000, 10000, 5000, -1082130432, 0 );
                    AUDIO_MUSIC_REQUEST_ONESHOT( "BUSDEPOT_ONESHOT_06", 0 );
                    l_U885 = 1;
                }
            }
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND (sub_50729() == 0)))
            {
                sub_1191( "SP", "All peds dead, starting cutscene...", 0 );
                if (((CUTSCENE_NAMED_IS_LOADING( "10_02_bus_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 1))
                {
                    CLEAR_NAMED_CUTSCENE( "10_02_bus_concat" );
                }
                ISEQ_UNREGISTER_ENTITY( -1113582755, "player" );
                ISEQ_UNREGISTER_ENTITY( -1113582755, "gio" );
                ISEQ_UNREGISTER_ENTITY( -1113582755, "bus_mpm_chain" );
                ISEQ_TERMINATE( -1113582755 );
                sub_2020( -1113582755, ref g_U1272 );
                l_U71 = 1;
                l_U68 = 13;
                sub_1191( "SP", "eCheckpointState = CP_HANDLE_TALK_TO_GIO_CUTSCENE", 0 );
            }
        }
        break;
        case 13:
        sub_46122();
        if (sub_51348() == 1)
        {
            l_U73 = 1;
            l_U68 = 14;
            sub_1191( "SP", "eCheckpointState = CP_HANDLE_TALK_TO_GIO_BLENDOUT", 0 );
            break;
        }
        return;
        case 14:
        sub_46122();
        if (sub_54053() == 1)
        {
            ISEQ_UNREGISTER_ENTITY( -1113582755, "player" );
            ISEQ_UNREGISTER_ENTITY( -1113582755, "gio" );
            ISEQ_UNREGISTER_ENTITY( -1113582755, "bus_mpm_chain" );
            ISEQ_TERMINATE( -1113582755 );
            sub_2020( -1113582755, ref g_U1272 );
            ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_a1_pstl" );
            ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_b1_rifle" );
            ISEQ_UNREGISTER_ENTITY( -145301993, "bus_gmed_c1_pstl" );
            ISEQ_TERMINATE( -145301993 );
            sub_2020( -145301993, ref g_U1272 );
            ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_d1" );
            ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_e1" );
            ISEQ_UNREGISTER_ENTITY( 1800455693, "bus_vcpf_f1" );
            ISEQ_TERMINATE( 1800455693 );
            sub_2020( 1800455693, ref g_U1272 );
            ISEQ_UNREGISTER_ENTITY( 1504518854, "bus_vcpf_g1" );
            ISEQ_UNREGISTER_ENTITY( 1504518854, "bus_vcpf_h1" );
            ISEQ_TERMINATE( 1504518854 );
            sub_2020( 1504518854, ref g_U1272 );
            sub_55957( ref g_U765[5] );
            sub_20424( 529194724, ref g_U1272 );
            sub_56002( ref g_U2218, 0 );
            sub_56002( ref g_U2225, 0 );
            l_U68 = 15;
            sub_1191( "SP", "eCheckpointState = CP_HANDLE_EXITING_PAINTROOM", 0 );
        }
        break;
        case 15:
        if (l_U1005 == 0)
        {
            if ((sub_56248() == 0) AND ((IS_PED_DEAD( sub_1622() )) == 0))
            {
                if (((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1622() ), -75.20000000, -27.66000000, 0.00000000, 1 )) < 3.50000000) || ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1622() ), -59.77600000, -37.13300000, 0.00000000, 1 )) < 3.50000000))
                {
                    sub_56412( ref l_U995 );
                    sub_56494( 0, sub_1622(), "MAX", ref l_U995, 2, 0 );
                    sub_56494( 1, sub_1622(), "MAX", ref l_U995, 2, 0 );
                    sub_56736( "SBUS_MJDBPBA", ref l_U995, 7, 1 );
                    l_U1005 = 1;
                }
            }
        }
        if (((sub_3705( sub_1622(), l_U150 )) == 1) AND (l_U624._fU0 == 1))
        {
            if ((sub_57559( ref l_U624 )) == 1)
            {
                sub_8316( l_U584 );
                l_U72 = 1;
            }
        }
        sub_59349();
        sub_46122();
        sub_61471();
        if ((l_U616 == 0) AND ((sub_61671( l_U255 )) == 1))
        {
            if ((GET_IS_PED_FORCED_TO_WALK( sub_1622() )) == 0)
            {
                SET_PED_FORCED_TO_WALK( sub_1622(), 1 );
                l_U616 = 1;
            }
        }
        else if ((l_U616 == 1) AND ((sub_61671( l_U255 )) == 0))
        {
            if ((GET_IS_PED_FORCED_TO_WALK( sub_1622() )) == 1)
            {
                SET_PED_FORCED_TO_WALK( sub_1622(), 0 );
                l_U616 = 0;
            }
        }
        if (g_U764 > 4)
        {
            l_U68 = 16;
            sub_1191( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 16:
        sub_1191( "SP", "eCheckpointState = CP_FINISHED", 0 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        l_U68 = 0;
        sub_1191( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
    }
    return;
}

void sub_13985()
{
    sub_14006( ref l_U481, 0.00000000, 1, 1 );
    sub_14006( ref l_U526, 0.00000000, 1, 1 );
    sub_14006( ref l_U558, 0.00000000, 1, 1 );
    return;
}

void sub_14006(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_14043( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_14043(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_8191( uParam0 );
            }
        }
    }
    return;
}

void sub_14193()
{
    if (l_U623 == 0)
    {
        if ((HAS_SOMETHING_EXPLODED_IN_AREA( g_U2630, 3.00000000 )) == 1)
        {
            sub_1191( "sk", "FORKLIFT HAS EXPLODED", 0 );
            sub_14276( 1 );
            l_U623 = 1;
        }
    }
    return;
}

void sub_14276(int iParam0)
{
    sub_1191( "sk", "P_ENABLE_FORKLIFT_COVERPOINT_ARRAY", 0 );
    if (iParam0 == 0)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "PaintGarage" ), GET_HASH_KEY( "GrabSpline72" ), 0 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "PaintGarage" ), GET_HASH_KEY( "GrabSpline01" ), 1 );
    }
    else if (iParam0 == 1)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "PaintGarage" ), GET_HASH_KEY( "GrabSpline72" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "PaintGarage" ), GET_HASH_KEY( "GrabSpline01" ), 0 );
    }
    return;
}

void sub_14788()
{
    sub_1191( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U440 = 0;
    l_U485 = 0;
    l_U530 = 0;
    l_U561 = 0;
    l_U616 = 0;
    l_U617 = 0;
    l_U618 = 0;
    l_U619 = 0;
    l_U620 = 0;
    l_U621 = 0;
    l_U622 = 0;
    l_U623 = 0;
    l_U791 = 0;
    l_U614 = 0;
    l_U883 = 0;
    l_U884 = 0;
    l_U885 = 0;
    l_U905 = 0;
    l_U729 = 0;
    l_U719 = 0;
    l_U730 = 0;
    l_U731 = 0;
    l_U983 = 0;
    l_U984 = 0;
    l_U1005 = 0;
    sub_5192( ref l_U864 );
    sub_5192( ref l_U816 );
    sub_5192( ref l_U826 );
    sub_5192( ref l_U836 );
    sub_5192( ref l_U854 );
    sub_5192( ref l_U845 );
    sub_5192( ref l_U806 );
    sub_5192( ref l_U874 );
    sub_5192( ref l_U886 );
    sub_5192( ref l_U912 );
    sub_5192( ref l_U710 );
    sub_5192( ref l_U720 );
    sub_5192( ref l_U972 );
    l_U70 = 0;
    l_U71 = 0;
    l_U73 = 0;
    l_U72 = 0;
    l_U74 = 0;
    return;
}

void sub_15140()
{
    sub_1191( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_15226( ref l_U312[0], -52.02000000, -11.70000000, 0.00000000, 180.00000000, -1288221433, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U312[1], -51.37000000, -11.20000000, 0.00000000, 180.00000000, -1093014823, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U312[2], -52.50000000, -11.26000000, 0.00000000, 180.00000000, -779842028, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U312[3], -90.46487000, -66.32333000, 0.01582100, 270.00000000, -771784984, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U312[4], -90.46487000, -67.82333000, 0.01582100, 270.00000000, -214778089, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U312[5], -90.46487000, -69.32333000, 0.01582100, 270.00000000, -563478033, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U312[6], -90.46487000, -70.82333000, 0.01582100, 270.00000000, -563478033, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U312[7], -90.46487000, -72.32333000, 0.01582100, 270.00000000, -87019350, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U312[8], -90.46487000, -73.82333000, 0.01582100, 270.00000000, -214778089, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U562, l_U575, l_U578, -1257669444, 26, 6, 0, 0, 1 );
    sub_15226( ref l_U441[0], -50.85000000, -23.13000000, 0.10000000, 180.00000000, -779842028, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U441[1], -52.54000000, -21.44000000, 0.10000000, 180.00000000, 1004606177, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U441[2], -54.22000000, -23.87000000, 0.10000000, 180.00000000, -1530806661, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U486[0], -46.97979000, -10.59078000, 0.00183600, 180.00000000, 1839156730, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U486[1], -47.97979000, -10.59078000, 0.00183600, 180.00000000, -2057158510, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U486[2], -59.97775000, -9.13687200, 0.00158400, 180.00000000, -1582768006, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U531[0], -59.97775000, -9.13687200, 0.00158400, 180.00000000, 2128162006, 7, 3, 2, 0, 0 );
    sub_15226( ref l_U531[1], -60.97775000, -9.13687200, 0.00158400, 180.00000000, 344222721, 7, 3, 2, 0, 0 );
    sub_16144( ref l_U129, "TRIG_GARAGE_PAINTROOM", -56.16000000, -26.57000000, -0.07000000, 39.53000000, 26.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16144( ref l_U192, "TRIG_DELETE_MPM_REPAIR_WEAPONS", -52.60000000, -9.95000000, -1.16000000, 12.00000000, 6.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16144( ref l_U150, "TRIG_AREANEAR", -55.67000000, -23.90000000, 0.00000000, 6.00000000, 12.00000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16144( ref l_U213, "TRIG_HIDE_ENEMIES", -52.49000000, -17.24000000, -0.32000000, 4.00000000, 9.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16144( ref l_U234, "TRIG_CLEAN_ENEMIES", -52.07000000, -19.97000000, 0.00000000, 2.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16144( ref l_U255, "TRIG_REPAIR_CUTSCENE_WALK", -63.71000000, -11.16000000, -0.18000000, 10.00000000, 10.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16144( ref l_U276, "For the good of Robo", -56.70000000, -33.64000000, 0.00000000, 6.00000000, 6.00000000, 3.24000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16788( ref l_U297, "TETH_GARAGE_PAINT_MID", -51.56000000, -24.43000000, -0.14000000, 12.20000000, 8.05000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16788( ref l_U298, "TETH_GARAGE_PAINTROOM_00", -48.23000000, -33.73000000, -0.07000000, 23.00000000, 11.07000000, 3.22000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16788( ref l_U299, "TETH_GARAGE_PAINTROOM_01", -66.93000000, -30.63000000, -0.04000000, 17.00000000, 11.70000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16788( ref l_U300, "TETH_GARAGE_PAINTROOM_02", -53.33000000, -20.74000000, -0.08000000, 10.46000000, 15.23000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16788( ref l_U301, "TETH_GARAGE_PAINTROOM_03", -46.58000000, -22.19000000, -0.02000000, 3.18000000, 12.25000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_16788( ref l_U302, "TETH_GARAGE_PAINTROOM_04", -40.70000000, -25.00000000, -0.07000000, 8.60000000, 5.82000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17341( ref l_U303, "TRIG_PAINT_FLEE_01", -53.06000000, -15.28000000, -0.69000000, 8.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_17341( ref l_U304, "TRIG_PAINT_FLEE_03", -65.83000000, -28.36000000, -0.69000000, 12.00000000, 3.04000000, 4.00000000, -0.67905800, 0.03153210, -1.68001000, 1 );
    sub_17341( ref l_U305, "TRIG_PAINT_FLEE_03", -65.83000000, -28.36000000, -0.69000000, 12.00000000, 3.04000000, 4.00000000, -0.67905800, 0.03153210, -1.68001000, 1 );
    return;
}

void sub_15226(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_16144(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_16788(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_17341(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 3, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_17581(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_17898(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_17933( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_18064( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_17933(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_18064( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_18064( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_18064( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18712( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_18064( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_18064( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18064(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18084( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_18084(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_18712(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_19449(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19470( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_19602( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19470(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_19602( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_19602( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_19602( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18712( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_19602( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_19602( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19602(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18084( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20424(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_20459( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_20611( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_20459(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_20611( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_20611( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_20611( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_20611( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18712( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18712( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_20611( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_20611( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20611(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18084( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22421(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_22442( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_22580( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_22442(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_22580( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_22580( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_22580( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_18712( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_22580( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_22580( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22580(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18084( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23427(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23448( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_23589( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23448(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_23589( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_23589( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_23589( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_18712( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_23589( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_23589( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_23589( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23589(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18084( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_24681(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (sub_24693( uParam0 ))
    {
        if (sub_24816( uParam1 ))
        {
            if (sub_24939( uParam2 ))
            {
                if (sub_25132( uParam3 ))
                {
                    if (sub_25261( uParam4 ))
                    {
                        if (sub_25384( uParam5 ))
                        {
                            if (sub_25513( uParam6 ))
                            {
                                if (sub_25642( uParam7 ))
                                {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

int sub_24693(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24816(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24939(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_25132(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25261(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25384(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25513(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25642(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

void sub_26001()
{
    sub_1191( "SP", "P_SETUP_GIOVANNA", 0 );
    if ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((DOES_PED_EXIST( g_U2595 )) == 0))
    {
        sub_8191( g_U2595 );
        g_U2595 = sub_26104( ref l_U562 );
        sub_26760();
    }
    return;
}

void sub_26104(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_3204( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_26583( iParam0->_fU40 );
    sub_26663( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_26583(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_26663(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_26760()
{
    sub_1191( "SP", "P_SETUP_GIO_ATTRIBUTES", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U2595, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U2595, 1 );
        SET_PED_CAN_PUSH_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_NPC( g_U2595, 0 );
        SET_PED_CAN_BE_TARGETTED( g_U2595, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2595, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 1 );
        SET_BULLET_CAM_PREF( g_U2595, "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        if ((IS_PED_DEAD( sub_1622() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( g_U2595, sub_1622() );
            SET_PED_DEFAULT_AIM_AT_PED( g_U2595, sub_1622() );
        }
    }
    return;
}

void sub_27176()
{
    sub_1191( "SP", "P_QUICK_SPAWN_PAINT_ENEMIES", 0 );
    if (l_U620 == 0)
    {
        while (sub_27239() == 0)
        {
            ;
        }
        l_U620 = 1;
    }
    if (l_U621 == 0)
    {
        while (sub_28232() == 0)
        {
            ;
        }
        l_U621 = 1;
    }
    if (l_U622 == 0)
    {
        while (sub_28932() == 0)
        {
            ;
        }
        l_U622 = 1;
    }
    return;
}

int sub_27239()
{
    int iVar2;
    char[32] cVar3;

    iVar2 = l_U485;
    sub_8191( l_U481[iVar2] );
    l_U481[iVar2] = sub_26104( ref l_U441[iVar2] );
    sub_27305( l_U481[iVar2], ref l_U306 );
    sub_4686( ref l_U297, l_U481[iVar2], 3 );
    sub_27599( ref l_U303, l_U481[iVar2], 5 );
    sub_27599( ref l_U304, l_U481[iVar2], 5 );
    sub_27599( ref l_U305, l_U481[iVar2], 5 );
    if (((IS_PED_DEAD( l_U481[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U481[iVar2] )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U481[iVar2], ref g_U1808 );
        SET_PED_VISIBLE( l_U481[iVar2], 0 );
        FREEZE_PED_POSITION( l_U481[iVar2], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U481[iVar2], 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U481[iVar2], 1 );
        SET_PED_COMBAT_RANGE_MIN( l_U481[iVar2], 5.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U481[iVar2], 10.00000000 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U481[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U481[iVar2], 0 );
        if (iVar2 == 0)
        {
            SET_PED_AI_TEMPLATE( l_U481[iVar2], ref g_U2088 );
            sub_11676( l_U481[iVar2], g_U2855, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_AI_TEMPLATE( l_U481[iVar2], ref g_U2088 );
            sub_11676( l_U481[iVar2], g_U2857, 25000, 0, 0 );
            sub_11044( l_U481[iVar2], g_U2854, 0, 25000, 0 );
        }
        else if (iVar2 == 2)
        {
            SET_PED_AI_TEMPLATE( l_U481[iVar2], ref g_U2088 );
            sub_11676( l_U481[iVar2], g_U2854, 25000, 0, 0 );
        };;;
        StrCopy( ref cVar3, "PaintEnemiesWave01 ", 32 );
        ConcatString(ref cVar3, " ", 32);
        ConcatString(ref cVar3, iVar2, 32);
        SET_PED_NAME_DEBUG( l_U481[iVar2], ref cVar3 );
        l_U485++;
    }
    if (l_U485 == 3)
    {
        return 1;
    }
    return 0;
}

void sub_27305(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_3309( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_17581( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_17581( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_27599(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_FLEEZONE_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_FLEEZONE_OPTION( uParam1, uParam2 );
    }
    return;
}

int sub_28232()
{
    int iVar2;
    char[32] cVar3;

    iVar2 = l_U530;
    sub_8191( l_U526[iVar2] );
    l_U526[iVar2] = sub_26104( ref l_U486[iVar2] );
    sub_27305( l_U526[iVar2], ref l_U306 );
    sub_4686( ref l_U297, l_U526[iVar2], 3 );
    sub_27599( ref l_U303, l_U526[iVar2], 5 );
    sub_27599( ref l_U304, l_U526[iVar2], 5 );
    sub_27599( ref l_U305, l_U526[iVar2], 5 );
    if (((IS_PED_DEAD( l_U526[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U526[iVar2] )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U526[iVar2], ref g_U1816 );
        SET_PED_VISIBLE( l_U526[iVar2], 0 );
        FREEZE_PED_POSITION( l_U526[iVar2], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U526[iVar2], 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U526[iVar2], 1 );
        SET_PED_COMBAT_RANGE_MIN( l_U526[iVar2], 5.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U526[iVar2], 10.00000000 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U526[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U526[iVar2], 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U526[iVar2], 1 );
        SET_PED_CAN_PUSH_PLAYER( l_U526[iVar2], 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( l_U526[iVar2], 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        if (iVar2 == 0)
        {
            SET_PED_AI_TEMPLATE( l_U526[iVar2], ref g_U2088 );
            sub_11676( l_U526[iVar2], g_U2855, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_AI_TEMPLATE( l_U526[iVar2], ref g_U2088 );
            sub_11676( l_U526[iVar2], g_U2854, 25000, 0, 0 );
        }
        else if (iVar2 == 2)
        {
            SET_PED_AI_TEMPLATE( l_U526[iVar2], ref g_U2088 );
            sub_11676( l_U526[iVar2], g_U2855, 25000, 0, 0 );
        };;;
        StrCopy( ref cVar3, "PaintEnemiesWave02 ", 32 );
        ConcatString(ref cVar3, " ", 32);
        ConcatString(ref cVar3, iVar2, 32);
        SET_PED_NAME_DEBUG( l_U526[iVar2], ref cVar3 );
        l_U530++;
    }
    if (l_U530 == 3)
    {
        return 1;
    }
    return 0;
}

int sub_28932()
{
    int iVar2;
    char[32] cVar3;

    iVar2 = l_U561;
    sub_8191( l_U558[iVar2] );
    l_U558[iVar2] = sub_26104( ref l_U531[iVar2] );
    sub_27305( l_U558[iVar2], ref l_U306 );
    sub_4686( ref l_U297, l_U558[iVar2], 3 );
    sub_27599( ref l_U303, l_U558[iVar2], 5 );
    sub_27599( ref l_U304, l_U558[iVar2], 5 );
    sub_27599( ref l_U305, l_U558[iVar2], 5 );
    if (((IS_PED_DEAD( l_U558[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U558[iVar2] )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U558[iVar2], ref g_U1816 );
        SET_PED_VISIBLE( l_U558[iVar2], 0 );
        FREEZE_PED_POSITION( l_U558[iVar2], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U558[iVar2], 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U558[iVar2], 1 );
        SET_PED_COMBAT_RANGE_MIN( l_U558[iVar2], 5.00000000 );
        SET_PED_COMBAT_RANGE_MAX( l_U558[iVar2], 10.00000000 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U558[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U558[iVar2], 0 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( l_U558[iVar2], 1 );
        SET_PED_CAN_PUSH_PLAYER( l_U558[iVar2], 1 );
        SET_PED_RESIST_TO_OBJECT_COLLISION( l_U558[iVar2], 1 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        if (iVar2 == 0)
        {
            SET_PED_AI_TEMPLATE( l_U558[iVar2], ref g_U2088 );
            sub_11676( l_U558[iVar2], g_U2855, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_AI_TEMPLATE( l_U558[iVar2], ref g_U2088 );
            sub_11676( l_U558[iVar2], g_U2857, 25000, 0, 0 );
        }
        StrCopy( ref cVar3, "PaintEnemiesWave03 ", 32 );
        ConcatString(ref cVar3, " ", 32);
        ConcatString(ref cVar3, iVar2, 32);
        SET_PED_NAME_DEBUG( l_U558[iVar2], ref cVar3 );
        l_U561++;
    }
    if (l_U561 == 2)
    {
        return 1;
    }
    return 0;
}

void sub_29569()
{
    sub_1191( "SP", "P_CREATE_PAINTROOM_OBJECTS", 0 );
    sub_29619();
    sub_29941();
    sub_31410();
    sub_31678();
    return;
}

void sub_29619()
{
    sub_1191( "SP", "P_CREATE_PAINTROOM_OBJECTS_01", 0 );
    if ((DOES_OBJECT_EXIST( l_U734 )) == 0)
    {
        sub_29691();
    }
    sub_8316( g_U2626 );
    g_U2626 = sub_3094( g_U2112, -58.65000000, -18.04200000, 2.71200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U2626 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2626, ref g_U1808 );
    }
    return;
}

void sub_29691()
{
    sub_1191( "SP", "P_CREATE_MPM_CHAIN", 0 );
    sub_8316( l_U734 );
    l_U734 = sub_3094( g_U2110, l_U735, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
    if ((DOES_OBJECT_EXIST( l_U734 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U734, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U734, ref g_U1808 );
    }
    return;
}

void sub_29941()
{
    sub_1191( "SP", "P_CREATE_PAINTROOM_OBJECTS_02", 0 );
    sub_8316( l_U579 );
    l_U579 = sub_3094( g_U2111, -58.47100000, -23.87200000, 1.30000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U579 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U579, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U579, ref g_U1808 );
    }
    sub_8316( l_U580 );
    l_U580 = sub_3094( g_U2117, l_U581, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( l_U580 )) == 1)
    {
        FREEZE_OBJECT_POSITION( l_U580, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U580, ref g_U1808 );
    }
    sub_30240( ref l_U624, 1, -58.42500000, -23.87500000, 1.30000000, l_U579, 1, 0, 1.50000000, 3.00000000, 0, 0 );
    sub_31246( ref l_U624, 30, "POI_BUSPAINT" );
    return;
}

void sub_30240(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;

    sub_30255( iParam0, uParam10 );
    if ((DOES_OBJECT_EXIST( uParam5 )) == 1)
    {
        uVar14 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( uParam5 )};
        iParam0->_fU4 = uParam1;
        iParam0->_fU308 = uParam7;
        if (iParam0->_fU308 == 0)
        {
            iParam0->_fU100 = {uVar14};
            iParam0->_fU200 = {uVar14};
        }
        iParam0->_fU112 = uParam8;
        iParam0->_fU212 = uParam9;
        iParam0->_fU300 = uParam6;
        iParam0->_fU312 = uParam5;
        iParam0->_fU320 = uParam11;
        iParam0->_fU20 = {uParam2};
        sub_30694( iParam0 );
    }
    else
    {
        SCRIPT_ASSERT( "[SP]### WARNING!!! (P_CreateObjectPOIStruct): Object doesn't exist! ###", 0 );
    }
    return;
}

void sub_30255(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_30694(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_30773( iParam0 );
    return;
}

void sub_30773(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_30832( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_30832( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_30832( iParam0, 1 );
            }
            else
            {
                sub_30832( iParam0, 0 );
            };;;
        }
        else
        {
            sub_30832( iParam0, 0 );
        }
    }
    else
    {
        sub_30832( iParam0, 0 );
    }
    return;
}

void sub_30832(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_31246(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_31277( iParam0 );
    return;
}

void sub_31277(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_31410()
{
    sub_1191( "SP", "P_CREATE_FORKLIFT", 0 );
    sub_8316( l_U588 );
    l_U588 = sub_3094( g_U2123, g_U2630, g_U2633, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U588 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U588, ref g_U1808 );
        SET_OBJECT_PROOFS( l_U588, 1, 0, 0, 1, 1 );
    }
    sub_8316( l_U589 );
    l_U589 = sub_3094( g_U2124, g_U2630, g_U2633, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U589 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U589, ref g_U1808 );
        SET_OBJECT_PROOFS( l_U589, 1, 1, 1, 1, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U589 );
        SET_OBJECT_TARGETTABLE( l_U589, 1 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( l_U589, 1 );
    }
    return;
}

void sub_31678()
{
    sub_1191( "CO", "P_CREATE_S_BUS_GG_M4_03", 0 );
    sub_31789( ref g_U739, g_U762, -1569399164, 390675167, -38.85000000, -25.01000000, 0.02000000, 1.50000000, 0.00000000, 5.00000000, "Room_Paint" );
    sub_31918( ref g_U739 );
    return;
}

void sub_31789(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1191( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_31918(int iParam0)
{
    sub_1191( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_31979( iParam0->_fU12 )) == 1)
        {
            sub_1191( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1191( "CO", "has never been collected.", 0 );
        }
        if ((sub_31979( iParam0->_fU12 )) == 0)
        {
            sub_8527( iParam0->_fU0 );
            iParam0->_fU0 = sub_32214( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1191( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1191( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_31979(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_32214(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

int sub_32504(unknown uParam0)
{
    sub_1191( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_9491( uParam0, sub_1622() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_33051()
{
    int iVar2;

    sub_1191( "SP", "F_HANDLE_SPAWN_CUTSCENE_ENEMIES", 0 );
    iVar2 = l_U440;
    sub_8191( l_U430[iVar2] );
    l_U430[iVar2] = sub_26104( ref l_U312[iVar2] );
    if (((IS_PED_DEAD( l_U430[iVar2] )) == 0) AND ((DOES_PED_EXIST( l_U430[iVar2] )) == 1))
    {
        SET_PED_VISIBLE( l_U430[iVar2], 0 );
        SET_PED_PROOFS( l_U430[iVar2], 1, 1, 1, 1, 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U430[iVar2], 1 );
        FREEZE_PED_POSITION( l_U430[iVar2], 1 );
        SET_PED_FREEZE_PROCESSING( l_U430[iVar2], 1 );
        if (iVar2 < 3)
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U430[iVar2], ref g_U1808 );
        }
        if (iVar2 == 0)
        {
            sub_11676( l_U430[0], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 1)
        {
            sub_11676( l_U430[1], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 2)
        {
            sub_11676( l_U430[2], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 3)
        {
            sub_11676( l_U430[3], g_U2854, 25000, 0, 0 );
        }
        else if (iVar2 == 4)
        {
            sub_11676( l_U430[4], g_U2854, 25000, 0, 0 );
        }
        else if (iVar2 == 5)
        {
            sub_11676( l_U430[5], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 6)
        {
            sub_11676( l_U430[6], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 7)
        {
            sub_11676( l_U430[7], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 8)
        {
            sub_11676( l_U430[8], g_U2857, 25000, 0, 0 );
        };;;;;;;;;
        l_U440++;
    }
    if (iVar2 == 8)
    {
        return 1;
    }
    return 0;
}

int sub_33859()
{
    unknown uVar2;
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int I;

    switch (l_U70)
    {
        case 0: break;
        case 1:
        sub_1191( "SP", "eFireEscapeCutsceneState = CUTSCENE_SETUP", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "10_02_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "10_02_bus_concat" );
        }
        sub_17898( g_U2110, ref g_U910 );
        sub_20424( -1113582755, ref g_U1272 );
        l_U70 = 2;
        sub_1191( "SP", "eFireEscapeCutsceneState = CUTSCENE_LOADING", 0 );
        break;
        case 2:
        if (((sub_24939( ref g_U1272 )) == 1) AND (((sub_24693( ref g_U910 )) == 1) AND ((CUTSCENE_IS_LOADED( "10_02_bus_concat" )) == 1)))
        {
            sub_29691();
            l_U70 = 3;
            sub_1191( "SP", "eFireEscapeCutsceneState = CUTSCENE_START", 0 );
        }
        break;
        case 3:
        sub_1191( "SP", "eFireEscapeCutsceneState = CUTSCENE_START", 0 );
        CAMERA_CLEAR_POINT_AT_TARGET();
        sub_5958( 1, 0, 0, 0 );
        if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
        {
            CUTSCENE_REGISTER_PED_TELEPORT( sub_1622(), l_U792, l_U795 );
            iVar3 = sub_34429();
            if ((GET_DOES_WEAPON_EXIST( iVar3 )) == 1)
            {
                CUTSCENE_REGISTER_PED_WEAPON_HAND( sub_1622(), iVar3, 0 );
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( iVar3, "W_PI_PT92_Aa_H", 0 );
            }
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2595, -49.84706000, -37.59435000, 4.97235300, 90.00000000 );
        }
        for ( I = 0; I < l_U430; I++ )
        {
            if (((IS_PED_DEAD( l_U430[I] )) == 0) AND ((DOES_PED_EXIST( l_U430[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U430[I], 1 );
                SET_PED_PROOFS( l_U430[I], 0, 0, 0, 0, 0 );
                FREEZE_PED_POSITION( l_U430[I], 0 );
                SET_PED_FREEZE_PROCESSING( l_U430[I], 0 );
            }
        }
        if (((IS_PED_DEAD( l_U430[0] )) == 0) AND ((DOES_PED_EXIST( l_U430[0] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[0], "M_Crac_Sold_JY", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[0], 0, 0 ), "W_AR_FAL_Aa_H^1", 0 );
        }
        if (((IS_PED_DEAD( l_U430[1] )) == 0) AND ((DOES_PED_EXIST( l_U430[1] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[1], "M_Crac_Sold_JY^1", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[1], 0, 0 ), "W_AR_FAL_Aa_H", 0 );
        }
        if (((IS_PED_DEAD( l_U430[2] )) == 0) AND ((DOES_PED_EXIST( l_U430[2] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[2], "M_Crac_Sold_JY^2", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[2], 0, 0 ), "W_AR_FAL_Aa_H^2", 0 );
        }
        if (((IS_PED_DEAD( l_U430[3] )) == 0) AND ((DOES_PED_EXIST( l_U430[3] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[3], "M_Crac_Sold_JY^3", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[3], 0, 0 ), "W_PI_PT92_Aa_H^1", 0 );
        }
        if (((IS_PED_DEAD( l_U430[4] )) == 0) AND ((DOES_PED_EXIST( l_U430[4] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[4], "M_Crac_Sold_JY^4", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[4], 0, 0 ), "W_PI_PT92_Aa_H^2", 0 );
        }
        if (((IS_PED_DEAD( l_U430[5] )) == 0) AND ((DOES_PED_EXIST( l_U430[5] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[5], "M_Crac_Sold_JY^5", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[5], 0, 0 ), "W_AR_FAL_Aa_H^5", 0 );
        }
        if (((IS_PED_DEAD( l_U430[6] )) == 0) AND ((DOES_PED_EXIST( l_U430[6] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[6], "M_Crac_Sold_JY^6", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[6], 0, 0 ), "W_AR_FAL_Aa_H^6", 0 );
        }
        if (((IS_PED_DEAD( l_U430[7] )) == 0) AND ((DOES_PED_EXIST( l_U430[7] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[7], "M_Crac_Sold_JY^7", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[7], 0, 0 ), "W_AR_FAL_Aa_H^4", 0 );
        }
        if (((IS_PED_DEAD( l_U430[8] )) == 0) AND ((DOES_PED_EXIST( l_U430[8] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U430[8], "M_Crac_Sold_JY^8", 0 );
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( GET_WEAPON_FROM_HAND( l_U430[8], 0, 0 ), "W_AR_FAL_Aa_H^3", 0 );
        }
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U2190._fU0, g_U2190._fU4 );
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U2183._fU0, g_U2183._fU4 );
        ISEQ_REGISTER_ENTITY( -1113582755, "player", sub_1622(), 0 );
        ISEQ_REGISTER_ENTITY( -1113582755, "gio", g_U2595, 0 );
        ISEQ_REGISTER_ENTITY( -1113582755, "bus_mpm_chain", l_U734, 1 );
        CUTSCENE_REGISTER_ISEQ( -1113582755 );
        CUTSCENE_ENABLE_SKIP( 0 );
        START_SEAMLESS_CUTSCENE();
        l_U70 = 4;
        sub_1191( "SP", "eFireEscapeCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 4:
        sub_1191( "SP", "eFireEscapeCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        sub_36472( ref l_U590, 1, 1 );
        iVar3 = sub_34429();
        if ((GET_DOES_WEAPON_EXIST( iVar3 )) == 1)
        {
            SELECT_WEAPON_TO_HAND( sub_1622(), iVar3, 0, 1 );
            if (iVar3 == (GET_WEAPON_FROM_SLOT( sub_1622(), 0 )))
            {
                SET_WEAPON_SLOT( sub_1622(), iVar3, 1 );
            }
        }
        uVar4 = sub_37622();
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            sub_37767( uVar4 );
        }
        REMOVE_ALL_ENVIRONMENT_BLOOD_AT_COORD( -59.92599000, -53.47547000, 0.27182000, 30.00000000 );
        sub_8316( g_U2604 );
        l_U70 = 5;
        sub_1191( "SP", "eFireEscapeCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 5:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (l_U617 == 1)
            {
                sub_1191( "SP", "Cutscene was Skipped!!!", 0 );
                sub_38223( sub_1622(), g_U2339[4], g_U2466[4] );
                if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
                {
                    FREEZE_PED_POSITION( sub_1622(), 1 );
                }
                uVar6 = GET_HASH_KEY( ref g_U1816 );
                uVar7 = GET_INTERIOR_FROM_NAME( ref g_U1864, 0 );
                SET_INTERIOR_ACTIVE( uVar7, 1, 0 );
                LOAD_SCENE_FOR_ROOM_BY_KEY( uVar7, uVar6 );
                uVar6 = GET_HASH_KEY( ref g_U1808 );
                uVar7 = GET_INTERIOR_FROM_NAME( ref g_U1856, 0 );
                SET_INTERIOR_ACTIVE( uVar7, 1, 0 );
                LOAD_SCENE_FOR_ROOM_BY_KEY( uVar7, uVar6 );
                if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
                {
                    FREEZE_PED_POSITION( sub_1622(), 0 );
                }
                sub_27176();
                sub_29569();
            }
            sub_38508( ref l_U750, l_U781, l_U784, l_U787, l_U788 );
            sub_38719( ref l_U750 );
            if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
            {
                SET_PED_FORCED_TO_WALK( sub_1622(), 0 );
            }
            sub_8157( ref l_U430 );
            l_U70 = 0;
            sub_1191( "SP", "eFireEscapeCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar8 = GET_CUTSCENE_SECTION_PLAYING();
            iVar9 = GET_CUTSCENE_TIME();
            iVar10 = GET_CUTSCENE_TIME_MS();
            if (l_U617 == 0)
            {
                if ((IS_SCREEN_FADED_OUT() == 1) || (IS_SCREEN_FADING_OUT() == 1))
                {
                    sub_1191( "SP", "Cutscene was Skipped!!!", 0 );
                    CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
                    l_U617 = 1;
                }
            }
            if (l_U983 == 0)
            {
                if (iVar10 >= 68000)
                {
                    AUDIO_MUSIC_REQUEST_ONESHOT( "BUSDEPOT_ONESHOT_07", 0 );
                    l_U983 = 1;
                }
            }
            if (l_U984 == 0)
            {
                if (iVar10 >= 72200)
                {
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U984 = 1;
                }
            }
            if (l_U618 == 0)
            {
                if (iVar9 > 73)
                {
                    AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_4", "", 0.00000000, 15000, 5000, -1082130432, 0 );
                    l_U618 = 1;
                }
            }
            if (l_U619 == 0)
            {
                if (iVar9 > 79)
                {
                    sub_29569();
                    l_U619 = 1;
                }
            }
            if (l_U619 == 1)
            {
                if ((l_U622 == 0) AND ((l_U621 == 1) AND (l_U620 == 1)))
                {
                    if (sub_28932() == 1)
                    {
                        l_U622 = 1;
                    }
                }
                if ((l_U621 == 0) AND (l_U620 == 1))
                {
                    if (sub_28232() == 1)
                    {
                        l_U621 = 1;
                    }
                }
                if (l_U620 == 0)
                {
                    if (sub_27239() == 1)
                    {
                        if (((IS_PED_DEAD( l_U481[0] )) == 0) AND ((DOES_PED_EXIST( l_U481[0] )) == 1))
                        {
                            CUTSCENE_REGISTER_PED_TELEPORT( l_U481[0], l_U738, l_U741 );
                            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_a1_pstl", l_U481[0], 0 );
                        }
                        if (((IS_PED_DEAD( l_U481[1] )) == 0) AND ((DOES_PED_EXIST( l_U481[1] )) == 1))
                        {
                            CUTSCENE_REGISTER_PED_TELEPORT( l_U481[1], l_U742, l_U745 );
                            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_b1_rifle", l_U481[1], 0 );
                        }
                        if (((IS_PED_DEAD( l_U481[2] )) == 0) AND ((DOES_PED_EXIST( l_U481[2] )) == 1))
                        {
                            CUTSCENE_REGISTER_PED_TELEPORT( l_U481[2], l_U746, l_U749 );
                            ISEQ_REGISTER_ENTITY( -145301993, "bus_gmed_c1_pstl", l_U481[2], 0 );
                        }
                        CUTSCENE_REGISTER_ISEQ( -145301993 );
                        l_U620 = 1;
                    }
                }
            }
        }
        break;
    }
    return 0;
}

int sub_34429()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1622() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_1622(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_34492( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1622(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_1622(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1622(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_34492(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_36472(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_36484( iParam0 );
    if ((IS_PED_DEAD( sub_1622() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_1622(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_34492( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_36707( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_1622(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_1622(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_1622(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_1622(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_1622() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_1622(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1622(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_1622(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1622(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_1622() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_1622(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_36707( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_1622(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_1622(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1622(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_36484(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_36707(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_37622()
{
    unknown Result;
    unknown uVar3;

    if ((IS_PED_DEAD( sub_1622() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_1622(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_36707( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1622(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
    }
    return 0;
}

void sub_37767(unknown uParam0)
{
    vector vVar3;
    vector vVar6;
    unknown uVar9;

    sub_1191( "SP", "P_SETUP_WEAPON_AS_PICKUP_NEAR_COVER", 0 );
    vVar3 = {-51.23000000, -31.92000000, 0.04000000};
    vVar6 = {90.00000000, 0.00000000, 70.00000000};
    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        sub_8527( l_U608 );
        l_U608 = sub_32214( GET_PICKUP_TYPE_FROM_WEAPON_TYPE( GET_WEAPON_TYPE( uParam0 ) ), vVar3, vVar6, 1, 0, 0, 1119092736 );
        if ((DOES_PLACEMENT_EXIST( l_U608 )) == 1)
        {
            ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U608, ref g_U1808 );
            uVar9 = GET_PICKUP_FROM_PLACEMENT( l_U608 );
            if ((DOES_PICKUP_EXIST( uVar9 )) == 1)
            {
                SET_PICKUP_WEAPON_DATA_FROM_WEAPON( uVar9, uParam0 );
            }
        }
        REMOVE_PED_WEAPON( sub_1622(), uParam0 );
    }
    return;
}

void sub_38223(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_38508(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_6680( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U52, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_38719(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_6816( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

void sub_40860()
{
    sub_1191( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_1191( "CCB", "Starting the Bus_Depot_Garage_Paint context...", 0 );
    START_CONTEXT( "Bus_Depot_Garage_Paint" );
    sub_1191( "CCB", "Starting the Bus_Depot_Garage_Paint_MPM context...", 0 );
    START_CONTEXT( "Bus_Depot_Garage_Paint_MPM" );
    return;
}

void sub_41300(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_8626( uParam0, uParam1 ))
    {
        iVar4 = sub_8725( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_41893(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1191( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1191( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_12330( iParam1 );
        sub_42152( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_42603( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_42603( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_42603( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_42603( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_42603( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_42835( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_44393( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1191( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_42152(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_9707( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1191( "TEH", "Ending context", 0 );
        sub_1191( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_42603(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_42835(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_44393(int iParam0)
{
    sub_3309( "CHECKPOINT DATA" );
    sub_44432( iParam0->_fU4 );
    sub_44455( iParam0->_fU16 );
    sub_44455( iParam0->_fU20 );
    sub_44455( iParam0->_fU24 );
    sub_44498( iParam0->_fU28 );
    sub_44498( iParam0->_fU56 );
    sub_44498( iParam0->_fU60 );
    sub_44498( iParam0->_fU64 );
    sub_44498( iParam0->_fU68 );
    sub_44498( iParam0->_fU72 );
    sub_44498( iParam0->_fU76 );
    sub_44498( iParam0->_fU80 );
    sub_44498( iParam0->_fU84 );
    sub_44498( iParam0->_fU88 );
    sub_44498( iParam0->_fU92 );
    sub_44455( iParam0->_fU32 );
    sub_44498( iParam0->_fU36 );
    sub_44498( iParam0->_fU40 );
    sub_44498( iParam0->_fU44 );
    sub_44455( iParam0->_fU136 );
    sub_44703( iParam0->_fU140 );
    sub_44498( iParam0->_fU52 );
    sub_3309( "---nRightHolsterAttachmentEnabled: " );
    sub_44498( iParam0->_fU96 );
    sub_3309( "---nRightHolsterAttachmentToggled: " );
    sub_44498( iParam0->_fU100 );
    sub_3309( "---nLeftHolsterAttachmentEnabled: " );
    sub_44498( iParam0->_fU104 );
    sub_3309( "---nLeftHolsterAttachmentToggled: " );
    sub_44498( iParam0->_fU108 );
    sub_3309( "---nRifleHolsterAttachmentEnabled: " );
    sub_44498( iParam0->_fU112 );
    sub_3309( "---nRifleHolsterAttachmentToggled: " );
    sub_44498( iParam0->_fU116 );
    sub_3309( "---nRightHandAttachmentEnabled: " );
    sub_44498( iParam0->_fU120 );
    sub_3309( "---nRightHandAttachmentToggled: " );
    sub_44498( iParam0->_fU124 );
    sub_3309( "---nLeftHandAttachmentEnabled: " );
    sub_44498( iParam0->_fU128 );
    sub_3309( "---nLeftHandAttachmentToggled: " );
    sub_44498( iParam0->_fU132 );
    sub_44498( l_U1 );
    sub_44498( 144 );
    return;
}

void sub_44432(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_44455(unknown uParam0)
{
    return;
}

void sub_44498(unknown uParam0)
{
    return;
}

void sub_44703(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_45508(boolean bParam0)
{
    vector vVar3;
    vector vVar6;
    vector vVar9;
    vector vVar12;

    sub_1191( "SP", "P_GLOBAL_CREATE_PAINT_GARAGE_DOOR", 0 );
    vVar3 = {-54.00200000, -11.19500000, 1.50100000};
    vVar6 = {0.00000000, 0.00000000, 0.00000000};
    sub_8316( g_U2624 );
    g_U2624 = sub_3094( g_U2113, vVar3, vVar6, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2624, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2624, ref g_U1816 );
        if (bParam0)
        {
            PLAY_OBJECT_ANIM( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1.00000000 );
        }
    }
    vVar9 = {-54.00200000, -12.82000000, 0.00000000};
    vVar12 = {0.00000000, 0.00000000, 0.00000000};
    sub_8316( g_U2625 );
    g_U2625 = sub_3094( g_U2114, vVar9, vVar12, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U2625 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2625, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2625, ref g_U1816 );
        SET_OBJECT_COLLIDE_WITH_NON_PLAYER_CHARACTER( g_U2625, 0 );
    }
    return;
}

void sub_45962(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_46122()
{
    if (l_U731 == 1)
    {
        if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
        {
            if ((IS_OBJECT_PLAYING_ANIM( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels" )) == 0)
            {
                sub_1191( "SP", "Stopping garage door sound...", 0 );
                if (l_U733 != -1)
                {
                    STOP_SOUND( l_U733, 0 );
                    RELEASE_SOUND_ID( l_U733 );
                    l_U733 = -1;
                }
                l_U731 = 0;
            }
        }
    }
    return;
}

void sub_46318()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (l_U614 == 0)
    {
        if ((sub_46345( ref l_U558, 1 )) == 1)
        {
            if ((((sub_2392( ref l_U481 )) + (sub_2392( ref l_U526 ))) + (sub_2392( ref l_U558 ))) <= 1)
            {
                sub_1191( "SP", "Assigning Paintroom bullet cam.", 0 );
                uVar2 = sub_46529( ref l_U481 );
                uVar3 = sub_46529( ref l_U526 );
                uVar4 = sub_46529( ref l_U558 );
                if (((IS_PED_DEAD( uVar2 )) == 0) AND ((DOES_PED_EXIST( uVar2 )) == 1))
                {
                    uVar5 = uVar2;
                }
                else if (((IS_PED_DEAD( uVar3 )) == 0) AND ((DOES_PED_EXIST( uVar3 )) == 1))
                {
                    uVar5 = uVar3;
                }
                else if (((IS_PED_DEAD( uVar4 )) == 0) AND ((DOES_PED_EXIST( uVar4 )) == 1))
                {
                    uVar5 = uVar4;
                };;;
                if (((IS_PED_DEAD( uVar5 )) == 0) AND ((DOES_PED_EXIST( uVar5 )) == 1))
                {
                    SET_PED_AS_ONE_SHOT_KILL( uVar5, 0 );
                    SET_BULLET_CAM_PREF( uVar5, "PIST_CUSTOM_06_BUS_MPM", "PIST_CUSTOM_06_BUS_MPM", "PIST_CUSTOM_06_BUS_MPM", 0, 1, 0, 0, 0, 0, 0, 0, 0 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                }
                l_U614 = 1;
            }
        }
    }
    return;
}

void sub_46345(unknown uParam0, boolean bParam1)
{
    int I;
    int Result;

    Result = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((DOES_PED_EXIST( (uParam0^)[I] )) == 1)
        {
            Result = 1;
            if (NOT bParam1)
            {
                return 1;
            }
        }
        else
        {
            Result = 0;
        }
    }
    return Result;
}

void sub_46529(unknown uParam0)
{
    int I;

    if ((sub_2392( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_46981(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1622() )))
    {
        SET_PLAYER_CONTROL( sub_1644(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1622(), 0 );
        if (bParam0)
        {
            sub_47062();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_47062()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1622() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1622(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1622(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1622(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1622(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_47245()
{
    sub_1191( "SP", "P_LIMIT_PLAYER_ACTIONS", 0 );
    if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
    {
        SET_PLAYER_CONTROL( sub_1644(), 0, 0 );
        REENABLE_PLAYER_INPUT( 14 );
        REENABLE_PLAYER_INPUT( 15 );
        REENABLE_PLAYER_INPUT( 16 );
        REENABLE_PLAYER_INPUT( 17 );
        REENABLE_PLAYER_INPUT( 6 );
        REENABLE_PLAYER_INPUT( 4 );
    }
    return;
}

void sub_48796()
{
    sub_1191( "Reggie", "P_CLOSE_PAINT_GARAGE_DOOR", 0 );
    if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
    {
        PLAY_OBJECT_ANIM( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1000.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1.00000000 );
        SET_OBJECT_ANIM_SPEED( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", -0.50000000 );
        l_U733 = GET_SOUND_ID();
        PLAY_SOUND_FROM_OBJECT( l_U733, "GARAGE_DOOR", g_U2624 );
        sub_1191( "SP", "Playing garage door sound...", 0 );
        l_U731 = 1;
    }
    return;
}

void sub_49239()
{
    int I;

    sub_1191( "SP", "P_ONE_SHOT_KILL_END", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (((IS_PED_DEAD( l_U481[I] )) == 0) AND ((DOES_PED_EXIST( l_U481[I] )) == 1))
        {
            if (IS_PED_INJURED( l_U481[I] ))
            {
                SET_PED_CORPSE( l_U481[I], 1 );
            }
            else
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U481[I], 0 );
            }
        }
    }
    for ( I = 0; I < 3; I++ )
    {
        if (((IS_PED_DEAD( l_U526[I] )) == 0) AND ((DOES_PED_EXIST( l_U526[I] )) == 1))
        {
            if (IS_PED_INJURED( l_U526[I] ))
            {
                SET_PED_CORPSE( l_U526[I], 1 );
            }
            else
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U526[I], 0 );
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (((IS_PED_DEAD( l_U558[I] )) == 0) AND ((DOES_PED_EXIST( l_U558[I] )) == 1))
        {
            if (IS_PED_INJURED( l_U558[I] ))
            {
                SET_PED_CORPSE( l_U558[I], 1 );
            }
            else
            {
                SET_PED_AS_ONE_SHOT_KILL( l_U558[I], 0 );
            }
        }
    }
    return;
}

string sub_49701()
{
    return "SMALL_EXPLOSION_SHAKE";
}

void sub_50034()
{
    sub_1191( "CCB", "P_STOP_SP_CHALLENGES_MPM", 0 );
    sub_1191( "CCB", "Stopping the Bus_Depot_Garage_Paint_MPM context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Paint_MPM" );
    return;
}

void sub_50431(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_3705( sub_1622(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_50536(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_50567( (uParam0^)[I] );
    }
    return;
}

void sub_50567(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_50729()
{
    int Result;

    Result = 0;
    Result += sub_50748( ref l_U481 );
    Result += sub_50748( ref l_U526 );
    Result += sub_50748( ref l_U558 );
    return Result;
}

void sub_50748(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (((IS_PED_DEAD( (uParam0^)[I] )) == 0) AND ((DOES_PED_EXIST( (uParam0^)[I] )) == 1))
        {
            Result++;
        }
    }
    return Result;
}

int sub_51348()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    switch (l_U71)
    {
        case 0:
        sub_1191( "SP", "eTalkToGioCutsceneState = CUTSCENE_IDLE", 0 );
        break;
        case 1:
        sub_1191( "SP", "eTalkToGioCutsceneState = CUTSCENE_SETUP", 0 );
        sub_5958( 0, 0, 0, 1 );
        if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
        {
            SET_PLAYER_CONTROL( sub_1644(), 0, 0 );
        }
        if (((CUTSCENE_NAMED_IS_LOADING( "mid_05_bus" )) == 0) || ((CUTSCENE_IS_LOADED( "mid_05_bus" )) == 0))
        {
            PRE_STREAM_SEAMLESS_CUTSCENE( "mid_05_bus" );
        }
        sub_20424( 651988550, ref g_U1272 );
        l_U71 = 2;
        sub_1191( "SP", "eTalkToGioCutsceneState = CUTSCENE_LOADING", 0 );
        case 2:
        if (((sub_24939( ref g_U1272 )) == 1) AND ((CUTSCENE_IS_LOADED( "mid_05_bus" )) == 1))
        {
            l_U71 = 3;
            sub_1191( "SP", "eTalkToGioCutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 3:
        sub_1191( "SP", "eTalkToGioCutsceneState = CUTSCENE_START", 0 );
        sub_26001();
        if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((DOES_PED_EXIST( sub_1622() )) == 1))
        {
            CLEAR_PED_TASKS( sub_1622() );
            CUTSCENE_REGISTER_PED_TELEPORT( sub_1622(), l_U897, l_U900 );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2595, l_U901, l_U904 );
        }
        ISEQ_REGISTER_ENTITY( 651988550, "player", sub_1622(), 0 );
        ISEQ_REGISTER_ENTITY( 651988550, "gio", g_U2595, 0 );
        CUTSCENE_REGISTER_ISEQ( 651988550 );
        START_SEAMLESS_CUTSCENE();
        l_U71 = 4;
        sub_1191( "SP", "eTalkToGioCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 4:
        sub_1191( "SP", "eTalkToGioCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        sub_36472( ref l_U111, 0, 1 );
        sub_52271( l_U111, 0 );
        sub_52369();
        sub_52821();
        sub_53198();
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        AUDIO_MUSIC_PLAY_ONESHOT();
        l_U71 = 5;
        sub_1191( "SP", "eTalkToGioCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 5:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_05_bus" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_05_bus" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_05_bus" );
            }
            if ((IS_PED_DEAD( sub_1622() )) == 0)
            {
                SET_PED_INVINCIBLE( sub_1622(), 0 );
            }
            sub_53508();
            l_U71 = 0;
            sub_1191( "SP", "eTalkToGioCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_52271(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18)
{
    unknown uVar21;
    unknown uVar22;

    uVar21 = uParam0._fU24._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar21 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar21, uParam18 );
    }
    uVar22 = uParam0._fU60._fU0;
    if ((GET_DOES_WEAPON_EXIST( uVar22 )) == 1)
    {
        SET_WEAPON_VISIBLE( uVar22, uParam18 );
    }
    return;
}

void sub_52369()
{
    int I;

    sub_1191( "SP", "P_HIDE_ENEMIES_FOR_SCENE", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if ((DOES_PED_EXIST( l_U481[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U481[I] )) == 0) || ((IS_PED_DEAD( l_U481[I] )) == 1))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U481[I], ref l_U213._fU0 ))
                {
                    SET_PED_VISIBLE( l_U481[I], 0 );
                }
            }
        }
    }
    for ( I = 0; I < 3; I++ )
    {
        if ((DOES_PED_EXIST( l_U526[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U526[I] )) == 0) || ((IS_PED_DEAD( l_U526[I] )) == 1))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U526[I], ref l_U213._fU0 ))
                {
                    SET_PED_VISIBLE( l_U526[I], 0 );
                }
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if ((DOES_PED_EXIST( l_U558[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U558[I] )) == 0) || ((IS_PED_DEAD( l_U558[I] )) == 1))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U558[I], ref l_U213._fU0 ))
                {
                    SET_PED_VISIBLE( l_U558[I], 0 );
                }
            }
        }
    }
    return;
}

void sub_52821()
{
    int I;

    sub_1191( "NS", "P_CLEAN_ENEMIES_FOR_SCENE()", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if (((IS_PED_DEAD( l_U481[I] )) == 0) || ((IS_PED_DEAD( l_U481[I] )) == 1))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U481[I], ref l_U234._fU0 ))
            {
                sub_8191( l_U481[I] );
            }
        }
    }
    for ( I = 0; I < 3; I++ )
    {
        if (((IS_PED_DEAD( l_U526[I] )) == 0) || ((IS_PED_DEAD( l_U526[I] )) == 1))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U526[I], ref l_U234._fU0 ))
            {
                sub_8191( l_U526[I] );
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if (((IS_PED_DEAD( l_U558[I] )) == 0) || ((IS_PED_DEAD( l_U558[I] )) == 1))
        {
            if (IS_PED_IN_GAMEPLAY_HELPER_BOX( l_U558[I], ref l_U234._fU0 ))
            {
                sub_8191( l_U558[I] );
            }
        }
    }
    return;
}

void sub_53198()
{
    sub_1191( "SP", "P_GATE_PED_WEAPON_CLEANUP", 0 );
    REMOVE_PICKUPS_OF_TYPE_IN_GAMEPLAY_HELPER_BOX( 39142315, ref l_U192._fU0 );
    REMOVE_PICKUPS_OF_TYPE_IN_GAMEPLAY_HELPER_BOX( 843762214, ref l_U192._fU0 );
    REMOVE_PICKUPS_OF_TYPE_IN_GAMEPLAY_HELPER_BOX( -46756431, ref l_U192._fU0 );
    return;
}

void sub_53508()
{
    int I;

    sub_1191( "SP", "P_UNHIDE_ENEMIES_FOR_SCENE", 0 );
    for ( I = 0; I < 3; I++ )
    {
        if ((DOES_PED_EXIST( l_U481[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U481[I] )) == 0) || ((IS_PED_DEAD( l_U481[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U481[I], 1 );
            }
        }
    }
    for ( I = 0; I < 3; I++ )
    {
        if ((DOES_PED_EXIST( l_U526[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U526[I] )) == 0) || ((IS_PED_DEAD( l_U526[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U526[I], 1 );
            }
        }
    }
    for ( I = 0; I < 2; I++ )
    {
        if ((DOES_PED_EXIST( l_U558[I] )) == 1)
        {
            if (((IS_PED_DEAD( l_U558[I] )) == 0) || ((IS_PED_DEAD( l_U558[I] )) == 1))
            {
                SET_PED_VISIBLE( l_U558[I], 1 );
            }
        }
    }
    return;
}

int sub_54053()
{
    int iVar2;
    int iVar3;
    unknown uVar4;

    iVar2 = 0;
    iVar3 = 0;
    switch (l_U73)
    {
        case 0: break;
        case 1:
        sub_1191( "SP", "eTalkToGioBlendState = BLENDOUT_SETUP", 0 );
        sub_5958( 0, 0, 0, 1 );
        if ((IS_PED_DEAD( sub_1622() )) == 0)
        {
            SET_PLAYER_CONTROL( sub_1644(), 0, 0 );
        }
        CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_03", "MID_05_BUS_BLEND_OUT_MAX_CAM", 1, l_U906, l_U909, 0, 0 );
        if ((IS_PED_DEAD( sub_1622() )) == 0)
        {
            uVar4 = sub_34429();
            if (GET_DOES_WEAPON_EXIST( uVar4 ))
            {
                SELECT_WEAPON_TO_HAND( sub_1622(), uVar4, 0, 1 );
            }
        }
        sub_52271( l_U111, 1 );
        sub_6680( ref l_U710, 4500, 1, 0 );
        sub_6816( ref l_U710 );
        l_U73 = 2;
        sub_1191( "SP", "eTalkToGioBlendState = BLENDOUT_PLAYING", 0 );
        break;
        case 2:
        if ((sub_6936( ref l_U710 )) == 1)
        {
            sub_54451( ref l_U624, 1 );
            sub_8316( l_U584 );
            l_U584 = sub_3094( -2023675653, -58.44500000, -23.87800000, 1.30000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
            if ((DOES_OBJECT_EXIST( l_U584 )) == 1)
            {
                FREEZE_OBJECT_POSITION( l_U584, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U584, ref g_U1808 );
            }
        }
        if (l_U905 == 0)
        {
            if (IS_ANIMATED_CAMERA_PLAYING() == 1)
            {
                if (CAMERA_ANIMATED_CURRENT_TIME() >= l_U910)
                {
                    SET_CAM_VIEW_MODE( 1 );
                    SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U921, 1065353216, 0 );
                    SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U922, 1065353216, 0 );
                    CAMERA_ANIMATED_STOP( l_U911, 1 );
                    sub_6680( ref l_U912, l_U911, 1, 0 );
                    sub_6816( ref l_U912 );
                    l_U905 = 1;
                }
            }
        }
        if ((sub_6936( ref l_U912 )) == 1)
        {
            ISEQ_UNREGISTER_ENTITY( 651988550, "player" );
            ISEQ_UNREGISTER_ENTITY( 651988550, "gio" );
            sub_2020( 651988550, ref g_U1272 );
            sub_46981( 1, 1 );
            l_U73 = 0;
            sub_1191( "SP", "eTalkToGioBlendState = BLENDOUT_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_54451(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_30832( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_30832( iParam0, 0 );
        sub_54522( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1622() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1622() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1622(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_54522(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_54673( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_54673(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_54734( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_54734( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_54734(int iParam0)
{
    if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1622() )) == 1) || (((IS_PED_GETTING_UP( sub_1622() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1622() )) == 1) || (((IS_PED_IN_COVER( sub_1622() )) == 1) || (((IS_PED_DUCKING( sub_1622() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1622() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_55957(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_56002(int iParam0, unknown uParam1)
{
    if ((sub_56014( iParam0 )) == 0)
    {
        sub_56080( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

int sub_56014(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_56080(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_56248()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_56412(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_56494(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_56736(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_56760( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_56760(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_56815( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_56815(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_56850( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_57344( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_56850(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_57344(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_57559(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1622() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1622() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_3705( sub_1622(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_3705( sub_1622(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_54673( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_54734( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_58441() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_54451( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_30832( iParam0, 0 );
                            sub_54522( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_30832( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1622() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1622(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_30832( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_54522( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1622(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1622() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1622(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1622() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1622(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_30832( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_54522( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1622() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1622() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1622() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1622(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_54522( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_58441()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_59349()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    switch (l_U72)
    {
        case 0: break;
        case 1:
        sub_1191( "SP", "eNISFoldingDoorState = NIS_SETUP", 0 );
        sub_5958( 1, 0, 0, 1 );
        sub_38508( ref l_U931, l_U962, l_U965, l_U968, l_U969 );
        SET_CAM_VIEW_MODE( 0 );
        sub_20424( 529194724, ref g_U1272 );
        l_U72 = 2;
        sub_1191( "SP", "eNISFoldingDoorState = NIS_LOADING", 0 );
        case 2:
        sub_1191( "SP", "eNISFoldingDoorState = NIS_LOADING", 0 );
        if ((sub_24939( ref g_U1272 )) == 1)
        {
            l_U72 = 3;
            sub_1191( "SP", "eNISFoldingDoorState = NIS_START", 0 );
            break;
        }
        return;
        case 3:
        sub_1191( "SP", "eNISFoldingDoorState = NIS_START", 0 );
        if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
        {
            CLEAR_PED_DEFAULT_AIM( sub_1622() );
            SET_PED_EMOTION_STATE( sub_1622(), 3 );
            if (sub_59823() == 1)
            {
                PED_SET_ACTION_INTENTION( sub_1622(), 47, -1, 0.00000000, 0.00000000, 0.00000000 );
            }
            else
            {
                PED_SET_ACTION_INTENTION( sub_1622(), 48, -1, 0.00000000, 0.00000000, 0.00000000 );
            }
            ISEQ_REGISTER_ENTITY( 529194724, "player", sub_1622(), 0 );
            ISEQ_START( 529194724 );
        }
        l_U719 = 1;
        if (sub_59823() == 1)
        {
            sub_6680( ref l_U972, 1100, 1, 0 );
        }
        else
        {
            sub_6680( ref l_U972, 1200, 1, 0 );
        }
        sub_6816( ref l_U972 );
        sub_6680( ref l_U720, 1300, 1, 0 );
        sub_6816( ref l_U720 );
        l_U72 = 5;
        sub_1191( "SP", "eNISFoldingDoorState = NIS_FIRST_FRAME", 0 );
        break;
        case 5:
        sub_1191( "SP", "NIS_FIRST_FRAME = NIS_FIRST_FRAME", 0 );
        sub_38719( ref l_U931 );
        if (sub_59823() == 1)
        {
            sub_38223( sub_1622(), l_U923, l_U926 );
        }
        else
        {
            sub_38223( sub_1622(), l_U927, l_U930 );
        }
        if (((IS_PED_DEAD( sub_1622() )) == 0) AND ((IS_PLAYER_DEAD( sub_1644() )) == 0))
        {
            FREEZE_PED_POSITION( sub_1622(), 1 );
        }
        l_U72 = 4;
        sub_1191( "SP", "eNISFoldingDoorState = NIS_PLAYING", 0 );
        break;
        case 4:
        if ((sub_6936( ref l_U972 )) == 1)
        {
            sub_60408();
            if ((DOES_OBJECT_EXIST( l_U579 )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "GARAGE_DOOR_VERTICAL_BUTTON_PRESS_1", l_U579 );
            }
        }
        if ((sub_6936( ref l_U720 )) == 1)
        {
            sub_60549();
            l_U719 = 0;
        }
        if ((sub_6936( ref l_U931._fU48 )) == 1)
        {
            if ((IS_PED_DEAD( sub_1622() )) == 0)
            {
                FREEZE_PED_POSITION( sub_1622(), 0 );
            }
            sub_45962( 0, 0, 0, l_U970, l_U971, 0 );
            sub_56412( ref l_U985 );
            sub_56494( 0, sub_1622(), "MAX", ref l_U985, 2, 0 );
            sub_56494( 1, sub_1622(), "MAX", ref l_U985, 2, 0 );
            sub_56736( "SBUS_MPDSDRA", ref l_U985, 7, 1 );
            sub_46981( 1, 1 );
        }
        if ((DOES_OBJECT_EXIST( g_U2626 )) == 1)
        {
            if ((IS_OBJECT_PLAYING_ANIM( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels" )) == 0)
            {
                if (((sub_3705( sub_1622(), l_U150 )) == 1) AND ((l_U719 == 0) AND (l_U624._fU0 == 0)))
                {
                    l_U72 = 6;
                    sub_1191( "SP", "eNISFoldingDoorState = NIS_FINISHED", 0 );
                }
            }
            else
            {
                WAKE_RESTING_OBJECTS_AROUND( g_U2626 );
            }
        }
        break;
        case 6:
        sub_1191( "SP", "eNISFoldingDoorState = NIS_FINISHED", 0 );
        SET_CAM_VIEW_MODE( 1 );
        sub_1191( "GA", "Paint bay door button re-enabled.", 0 );
        l_U72 = 0;
        break;
    }
    return;
}

int sub_59823()
{
    unknown uVar2;

    if ((IS_PED_DEAD( sub_1622() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1622(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            if ((sub_34492( uVar2 )) == 1)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_60408()
{
    PLAY_IMAGEFX( "Triple_image_blur_down_2", 4, 0 );
    return;
}

void sub_60549()
{
    sub_1191( "SP", "P_TOGGLE_PAINTBAY_GARAGE_DOOR", 0 );
    if ((DOES_OBJECT_EXIST( g_U2626 )) == 1)
    {
        if (l_U729 == 0)
        {
            PLAY_OBJECT_ANIM( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels", 0 );
            SET_OBJECT_ANIM_SPEED( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels", 0.20000000 );
            sub_8316( l_U580 );
            l_U580 = sub_3094( g_U2116, l_U581, 0.00000000, 0.00000000, 0.00000000, 0, 1, 0 );
            if ((DOES_OBJECT_EXIST( l_U580 )) == 1)
            {
                FREEZE_OBJECT_POSITION( l_U580, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U580, ref g_U1808 );
            }
            sub_31246( ref l_U624, 30, "POI_BUSPAINT2" );
            sub_54451( ref l_U624, 0 );
            l_U729 = 1;
        }
        l_U732 = GET_SOUND_ID();
        PLAY_SOUND_FROM_OBJECT( l_U732, "GARAGE_DOOR_VERTICAL", g_U2626 );
        l_U730 = 1;
    }
    return;
}

void sub_61471()
{
    if (l_U730 == 1)
    {
        if ((DOES_OBJECT_EXIST( g_U2626 )) == 1)
        {
            if ((IS_OBJECT_PLAYING_ANIM( g_U2626, "BD_ROLLER_HINGE", "bd_objmodels" )) == 0)
            {
                sub_1191( "SP", "Stopping Folding door sound...", 0 );
                if (l_U732 != -1)
                {
                    STOP_SOUND( l_U732, 0 );
                    RELEASE_SOUND_ID( l_U732 );
                    l_U732 = -1;
                }
                l_U730 = 0;
            }
        }
    }
    return;
}

void sub_61671(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_3705( sub_1622(), uParam0 );
}

void sub_62026()
{
    sub_1191( "SP", "P_UNLOAD_GARAGE_ASSETS", 0 );
    sub_62081( g_U2123, ref g_U910 );
    sub_62081( g_U2124, ref g_U910 );
    sub_62081( g_U2110, ref g_U910 );
    sub_62081( g_U2111, ref g_U910 );
    sub_62081( g_U2116, ref g_U910 );
    sub_62081( g_U2117, ref g_U910 );
    sub_62081( -2023675653, ref g_U910 );
    sub_62081( 948292876, ref g_U910 );
    sub_62081( -783139352, ref g_U910 );
    sub_62081( g_U762, ref g_U910 );
    sub_62456( "SCRIPT_MISSION\GARAGE_DOOR", ref g_U1757 );
    return;
}

void sub_62081(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_2132( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_62456(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_2132( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    StrCopy( ref l_U52, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U60, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U68 = {-48.86700000, -3.21700000, 0.28500000};
    l_U71 = {-62.95700000, 22.56530000, 0.28500000};
    l_U92 = 300;
    l_U93 = 0.41000000;
    l_U94 = 0.43000000;
    l_U389 = {-48.40881000, 30.16530000, 4.95247200};
    l_U392 = {-55.23871000, 28.67000000, 4.79310800};
    l_U395 = {-49.52864000, 28.60562000, 4.79182700};
    l_U398 = {-62.09500000, 1.07200000, 7.60000000};
    l_U401 = 300.00000000;
    l_U402 = {-49.41200000, 17.53000000, 7.60000000};
    l_U405 = 120.00000000;
    l_U406 = {-48.48600000, -2.24900000, 0.25200000};
    l_U409 = {-90.00000000, 0.00000000, 0.00000000};
    l_U412 = {-64.10700000, 20.34100000, 0.25200000};
    l_U415 = {90.00000000, 0.00000000, 0.00000000};
    l_U418 = 3.50000000;
    l_U438 = 0;
    l_U439 = 0;
    l_U440 = 0;
    l_U441 = 0;
    l_U460 = 0;
    l_U514 = 0;
    l_U515 = 0;
    l_U516 = 0;
    l_U517 = 0;
    l_U518 = 0;
    l_U519 = 0;
    l_U522 = 0;
    l_U559 = 0;
    l_U760 = 0;
    l_U775 = {-47.49000000, 30.50000000, 5.01000000};
    l_U778 = {-64.33868000, 2.84600500, 0.00178600};
    l_U781 = 174.86370000;
    l_U782 = {-68.35880000, 14.30261000, 0.00193000};
    l_U785 = 185.48050000;
    l_U786 = {-65.93787000, 2.83953500, 0.00130500};
    l_U789 = 181.84380000;
    l_U821 = {-63.56208000, -7.74529100, 1.75596200};
    l_U824 = {-5.28579500, -0.00000100, -2.80119100};
    l_U827 = 45.00000000;
    l_U828 = 1500;
    l_U860 = {-63.52976000, -5.88280500, 1.58292500};
    l_U863 = {-5.27370900, -0.00000000, 2.39205300};
    l_U866 = 45.00000000;
    l_U867 = 500;
    l_U868 = -72.80306000;
    l_U869 = -5.33890600;
    l_U870 = 2.00000000;
    l_U871 = 5.00000000;
    l_U872 = 1.00000000;
    l_U873 = 5.00000000;
    l_U874 = 1;
    l_U921 = 0;
    l_U922 = 0;
    l_U923 = 0;
    l_U924 = 0;
    l_U925 = 0;
    l_U926 = 0;
    l_U927 = 0;
    l_U928 = 0;
    l_U929 = 0;
    sub_1092( "SP", "Script busdepot_gar_repair.sc is starting...", 0 );
    l_U518 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_1161();
        if (l_U519 == 0)
        {
            sub_10714();
        }
        WAIT( 0 );
    }
    sub_60756();
    sub_61356();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "busdepot_gar_repair" );
    SET_EXITFLAG_RESPONSE();
    sub_1092( "SP", "Script busdepot_gar_repair.sc is terminating...", 0 );
    return;
}

void sub_1092(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_1161()
{
    switch (l_U519)
    {
        case 0:
        if (g_U764 == 5)
        {
            if (sub_1251())
            {
                l_U519 = 5;
            }
            if (((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                sub_1092( "SP", "Mission Failed: Giovanna died.", 0 );
                if (((IS_PED_DEAD( sub_1523() )) == 0) || ((IS_PED_DEAD( sub_1523() )) == 1))
                {
                    if ((HAS_PED_BEEN_DAMAGED_BY_PED( g_U2595, sub_1523(), 0 )) == 1)
                    {
                        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                        l_U522 = 1;
                        l_U519 = 1;
                        sub_1092( "SP", "eFailState = FAIL_HANDLE_GIO_DEATH_CAM", 0 );
                    }
                }
            }
            else if ((sub_1987() == 1) || ((IS_PED_DEAD( sub_1523() )) == 1))
            {
                sub_1092( "SP", "Mission Failed: Player died.", 0 );
                if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
                {
                    SET_PED_INVINCIBLE( sub_1523(), 1 );
                    SET_PED_PROOFS( sub_1523(), 1, 1, 1, 1, 1 );
                }
                l_U519 = 3;
                sub_1092( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (l_U440 == 1)
            {
                sub_1092( "SP", "Mission Failed: Player crushed by bus.", 0 );
                l_U519 = 2;
                sub_1092( "SP", "eFailState = FAIL_HANDLE_PLAYER_CRUSHED", 0 );
            }
        }
        else if ((sub_1987() == 1) || ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((IS_PED_DEAD( sub_1523() )) == 1)))
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_06_bus_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_06_bus_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_06_bus_concat" );
            }
            sub_2463( ref g_U765[5] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
        if (sub_2516() == 1)
        {
            l_U519 = 3;
            sub_1092( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 2:
        if ((sub_3158( ref l_U428 )) == 1)
        {
            l_U519 = 3;
            sub_1092( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 3:
        if (sub_1987() == 1)
        {
            l_U519 = 5;
            sub_1092( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        else if ((sub_3758( 0 )) == 1)
        {
            l_U519 = 4;
            sub_1092( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 4:
        sub_1092( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        if (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_PED_DEAD( sub_1523() )) == 0)))
        {
            DO_SCREEN_FADE_OUT( 0 );
            sub_4849( 0 );
            sub_4942( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            DISPLAY_HUD( 0 );
            if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
            {
                SET_PLAYER_CAN_CANCEL_SHOOTDODGE( 1 );
                SET_PED_VISIBLE( sub_1523(), 1 );
                FREEZE_PED_POSITION( sub_1523(), 0 );
            }
            if (IS_PLAYER_SHOOTDODGING() == 1)
            {
                SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 3 );
            }
            DEACTIVATE_BULLET_TIME( 0, 0 );
            DEACTIVATE_BULLET_TIME( 0, 1 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            DEACTIVATE_BULLET_TIME( 1, 1 );
            if ((IS_PLAYER_DEAD( sub_1545() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
                if ((GET_IS_PED_FORCED_TO_WALK( sub_1523() )) == 1)
                {
                    SET_PED_FORCED_TO_WALK( sub_1523(), 0 );
                }
            }
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U519 = 5;
            sub_1092( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 5:
        sub_1092( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        sub_5360();
        l_U519 = 6;
        sub_1092( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 6:
        sub_1092( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        sub_6474( ref l_U523, sub_1523() );
        sub_10506();
        l_U518 = 1;
        l_U519 = 0;
        sub_1092( "SP", "eFailState = FAIL_IDLE", 0 );
        break;
    }
    return;
}

int sub_1251()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1523() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1523(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1545(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1545(), 1 );
            if ((IS_PED_VISIBLE( sub_1523() )) == 0)
            {
                SET_PED_VISIBLE( sub_1523(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

int sub_1523()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1545() );
    }
    return 0;
}

void sub_1545()
{
    return GET_PLAYER_ID();
}

void sub_1987()
{
    return g_U648;
}

void sub_2463(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_2516()
{
    switch (l_U522)
    {
        case 0: break;
        case 1:
        sub_1092( "SP", "eGioDeathCamState = DEATHCAM_SETUP", 0 );
        sub_2627( 1, 0, 0, 1 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
        BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
        AUDIO_MUSIC_SUSPEND( 5000 );
        sub_2822( ref l_U885, 2250, 1, 0 );
        sub_2958( ref l_U885 );
        l_U522 = 2;
        sub_1092( "SP", "eGioDeathCamState = DEATHCAM_WAITING_FOR_BULLETCAM", 0 );
        case 2:
        if (((l_U885._fU16 == 1) || ((sub_3158( ref l_U885 )) == 1)) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            DO_SCREEN_FADE_OUT( 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
            l_U522 = 3;
            sub_1092( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        }
        break;
        case 3:
        sub_1092( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        l_U522 = 0;
        sub_1092( "SP", "eGioDeathCamState = DEATHCAM_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

void sub_2627(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1523() )))
        {
            SET_PLAYER_CONTROL( sub_1545(), 0, uParam2 );
            SET_PED_DUCKING( sub_1523(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1523() );
            }
            SET_PED_INVINCIBLE( sub_1523(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_2822(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2958(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_3158(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

int sub_3758(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_3819( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1523() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2822( ref l_U43, l_U42, 1, 1 );
            sub_2958( ref l_U43 );
        }
        if (sub_3158( ref l_U43 ))
        {
            sub_1092( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1523() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1545() )))
            {
                SET_PLAYER_CONTROL( sub_1545(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_1092( "NS", "Player will QUIT", 0 );
        sub_4278();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_1092( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4278();
        return 1;
        break;
    }
    return 0;
}

int sub_3819(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4278()
{
    sub_1092( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4328( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1545() )))
    {
        SET_PLAYER_CONTROL( sub_1545(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_4328(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_4849(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_4942(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_5360()
{
    int I;

    sub_1092( "SP", "P_DEATH_CLEANUP", 0 );
    ISEQ_UNREGISTER_ENTITY( -1315874166, "mid06blend_player" );
    ISEQ_TERMINATE( -1315874166 );
    sub_5452( -1315874166, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 2072811238, "gio" );
    ISEQ_TERMINATE( 2072811238 );
    sub_5452( 2072811238, ref g_U1272 );
    sub_5869( g_U2595 );
    sub_5947( ref g_U2738 );
    sub_6010( g_U2843 );
    sub_6010( g_U2844 );
    sub_6068( g_U2642 );
    sub_6068( g_U2689 );
    for ( I = 0; I < 5; I++ )
    {
        sub_6010( g_U2768[I] );
    }
    for ( I = 0; I < 9; I++ )
    {
        sub_6010( g_U2774[I] );
    }
    sub_6010( g_U2845 );
    sub_6010( g_U2849 );
    sub_6010( g_U2847 );
    sub_6010( g_U2848 );
    sub_6299( l_U970 );
    sub_6299( g_U703._fU0 );
    return;
}

void sub_5452(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5564( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_5564(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_5869(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_5947(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_5869( (uParam0^)[I] );
    }
    return;
}

void sub_6010(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_6068(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46)
{
    sub_1092( "SP", "P_CLEANUP_BUS", 0 );
    sub_6010( uParam0._fU4 );
    sub_6010( uParam0._fU8 );
    sub_6010( uParam0._fU12 );
    sub_6010( uParam0._fU16 );
    sub_6010( uParam0._fU20 );
    sub_6010( uParam0._fU24 );
    return;
}

void sub_6299(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_6474(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_1092( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6658( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_7735( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8027( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8387( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8027( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8387( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8027( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8387( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8672( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8387( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8672( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8387( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9165( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9326( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1523(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_1092( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6658(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_6690( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_6690(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_7735(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8027(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8343( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8343(unknown uParam0)
{
    return;
}

void sub_8387(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8672(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8343( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9165(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9326(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_6690( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9398( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9398(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_10506()
{
    sub_1092( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", 0 );
    if ((IS_PED_DEAD( sub_1523() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_1523(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_1523(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_1523(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_1523(), 0, 7 );
    }
    return;
}

void sub_10714()
{
    unknown uVar2;
    unknown uVar3;

    if ((l_U518 <= 13) AND (l_U518 >= 11))
    {
        sub_10744();
        sub_20126();
    }
    switch (l_U518)
    {
        case 0:
        sub_1092( "SP", "eCheckpointState = CP_IDLE", 0 );
        break;
        case 1:
        sub_1092( "SP", "eCheckpointState = CP_INIT_SCRIPT_DATA", 0 );
        sub_20695();
        sub_21081();
        sub_22050();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U518 = 2;
        sub_1092( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_1092( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_22597( -1204387800, ref g_U910 );
        sub_22597( g_U2103, ref g_U910 );
        sub_22597( g_U2112, ref g_U910 );
        sub_22597( g_U2113, ref g_U910 );
        sub_22597( g_U2114, ref g_U910 );
        sub_22597( g_U2115, ref g_U910 );
        sub_22597( g_U2126, ref g_U910 );
        sub_22597( g_U2125, ref g_U910 );
        sub_22597( g_U2120, ref g_U910 );
        sub_22597( g_U2121, ref g_U910 );
        sub_22597( g_U2122, ref g_U910 );
        sub_22597( g_U2118, ref g_U910 );
        sub_22597( g_U2119, ref g_U910 );
        sub_22597( g_U2123, ref g_U910 );
        sub_22597( g_U2124, ref g_U910 );
        sub_22597( g_U2148, ref g_U910 );
        sub_22597( g_U2149, ref g_U910 );
        sub_22597( g_U2150, ref g_U910 );
        sub_22597( g_U2168, ref g_U910 );
        sub_24203( ref g_U2152, ref g_U910 );
        sub_24203( ref g_U2158, ref g_U910 );
        sub_22597( -1409914275, ref g_U910 );
        sub_22597( g_U760, ref g_U910 );
        sub_24312( g_U2854, ref g_U1211 );
        sub_24312( g_U2856, ref g_U1211 );
        sub_24312( g_U2855, ref g_U1211 );
        sub_24312( g_U2857, ref g_U1211 );
        sub_24312( g_U2859, ref g_U1211 );
        sub_25327( "CRUSH_IMMINENT", ref g_U1369 );
        sub_25327( ref g_U1888, ref g_U1369 );
        sub_25327( ref g_U1992, ref g_U1369 );
        sub_25327( ref g_U2000, ref g_U1369 );
        sub_26350( -1315874166, ref g_U1272 );
        sub_26350( 2072811238, ref g_U1272 );
        sub_26350( 759434161, ref g_U1272 );
        if (g_U764 < 5)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_06_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "mid_06_bus_concat" )) == 0))
            {
                PRE_STREAM_SEAMLESS_CUTSCENE( "mid_06_bus_concat" );
            }
        }
        l_U518 = 3;
        sub_1092( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (sub_28504( ref g_U910, ref g_U1211, ref g_U1272, ref g_U1369, ref g_U1474, ref g_U1535, ref g_U1704, ref g_U1757 ))
        {
            l_U518 = 4;
            sub_1092( "SP", "eCheckpointState = CP_SETUP_START_POINT", 0 );
            break;
        }
        return;
        case 4:
        if ((l_U559 == 0) AND (g_U763 == 5))
        {
            l_U559 = 1;
            if ((sub_29707( ref l_U523 )) == 0)
            {
                sub_8672( sub_1523(), g_U2855, 200, 0, 0 );
            }
            l_U518 = 5;
            sub_1092( "SP", "eCheckpointState = CP_WAIT_FOR_PLAYER_WEAPON", 0 );
        }
        else
        {
            l_U518 = 6;
            sub_1092( "SP", "eCheckpointState = CP_SETUP_GARAGE_REPAIR_OBJECTS", 0 );
        }
        break;
        case 5:
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            uVar2 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                l_U518 = 6;
                sub_1092( "SP", "eCheckpointState = CP_SETUP_GARAGE_REPAIR_OBJECTS", 0 );
            }
        }
        break;
        case 6:
        sub_1092( "SP", "eCheckpointState = CP_SETUP_GARAGE_REPAIR_OBJECTS", 0 );
        if (sub_30241() == 1)
        {
            l_U518 = 7;
            sub_1092( "SP", "eCheckpointState = CP_SETUP_REPAIR_START_ENEMIES", 0 );
        }
        break;
        case 7:
        sub_1092( "SP", "eCheckpointState = CP_SETUP_REPAIR_START_ENEMIES", 0 );
        if (sub_36765() == 1)
        {
            if (g_U764 < 5)
            {
                l_U520 = 1;
                l_U518 = 8;
                sub_1092( "SP", "eCheckpointState = CP_HANDLE_OPENING_CUTSCENE", 0 );
            }
            else
            {
                l_U521 = 1;
                l_U518 = 9;
                sub_1092( "SP", "eCheckpointState = CP_HANDLE_OPENING_BLEND_OUT", 0 );
            }
        }
        break;
        case 8:
        if (sub_39531() == 1)
        {
            l_U521 = 1;
            l_U518 = 9;
            sub_1092( "SP", "eCheckpointState = CP_HANDLE_OPENING_BLEND_OUT", 0 );
            break;
        }
        return;
        case 9:
        if (sub_45117() == 1)
        {
            l_U518 = 10;
            sub_1092( "SP", "eCheckpointState = CP_SETUP_REPAIR_START_FIGHT", 0 );
        }
        break;
        case 10:
        sub_1092( "SP", "eCheckpointState = CP_SETUP_REPAIR_START_FIGHT", 0 );
        sub_53283();
        sub_53434();
        sub_53805( ref g_U2218, 1 );
        sub_54008( ref g_U2218, 1 );
        sub_54141( ref g_U2218, 0 );
        sub_53805( ref g_U2225, 1 );
        sub_54008( ref g_U2225, 1 );
        sub_54141( ref g_U2225, 0 );
        sub_53805( ref g_U2232, 1 );
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            SET_PED_NUM_CHARGERS_OVERRIDE( sub_1523(), 2 );
        }
        sub_54279();
        sub_2822( ref l_U903, 500, 1, 0 );
        sub_2958( ref l_U903 );
        sub_2822( ref l_U912, 2200, 1, 0 );
        sub_2958( ref l_U912 );
        sub_2822( ref l_U894, 30000, 1, 0 );
        sub_2958( ref l_U894 );
        sub_55621();
        l_U518 = 11;
        sub_1092( "SP", "eCheckpointState = CP_HANDLE_REPAIR_START_FIGHT", 0 );
        break;
        case 11:
        if ((sub_3158( ref l_U903 )) == 1)
        {
            sub_55858();
            if ((DOES_OBJECT_EXIST( g_U2849 )) == 1)
            {
                PLAY_OBJECT_ANIM( g_U2849, "p_bd_stacas_aa", ref g_U1888, 0.00000000, 0, 0 );
                SET_OBJECT_ANIM_CURRENT_TIME( g_U2849, "p_bd_stacas_aa", ref g_U1888, 1.00000000 );
                SET_OBJECT_ANIM_SPEED( g_U2849, "p_bd_stacas_aa", ref g_U1888, -1.00000000 );
            }
        }
        if (l_U923 == 0)
        {
            if (l_U903._fU16 == 1)
            {
                if ((DOES_OBJECT_EXIST( g_U2849 )) == 1)
                {
                    if ((IS_OBJECT_PLAYING_ANIM( g_U2849, "p_bd_stacas_aa", ref g_U1888 )) == 0)
                    {
                        sub_55858();
                        l_U923 = 1;
                    }
                }
            }
        }
        if (l_U924 == 0)
        {
            if (((IS_PED_DEAD( g_U2738[0] )) == 1) || ((sub_3158( ref l_U912 )) == 1))
            {
                sub_54438( ref l_U930 );
                sub_54525( 1, g_U2595, "GIOVANNA", ref l_U930, 2, 0 );
                sub_54525( 0, sub_1523(), "MAX", ref l_U930, 2, 0 );
                sub_54764( "SBUS_RGGA", ref l_U930, 7, 1 );
                l_U924 = 1;
            }
        }
        sub_56882();
        if (l_U928 == 0)
        {
            if ((sub_58863( ref g_U2738 )) >= 5)
            {
                sub_58975( ref g_U765[6] );
                AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_3_4_5", "", 1.00000000, 5000, 5000, -1082130432, 0 );
                l_U928 = 1;
            }
        }
        if (l_U927 == 0)
        {
            if ((sub_56908( ref g_U2738 )) == 1)
            {
                l_U761 = sub_59114( ref g_U2738 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                sub_59259( l_U761 );
                l_U927 = 1;
            }
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            if ((ISEQ_QUERY_ENTITY_STATE( 2072811238, "gio", 3 )) == 1)
            {
                if (sub_59552() == 1)
                {
                    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    }
                    sub_59726();
                }
            }
        }
        if (IS_ROBO_TESTING() == 1)
        {
            if (sub_60104( ref l_U602, 0 ))
            {
                sub_60209( ref g_U2738 );
                sub_1092( "MRB", "RoboTester is killing your Repair Enemies", 0 );
            }
        }
        if (l_U929 == 0)
        {
            if ((sub_56908( ref g_U2738 )) == 0)
            {
                AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_6", "", 0.00000000, 10000, 7000, -1082130432, 0 );
                l_U929 = 1;
            }
        }
        if ((sub_56908( ref g_U2738 )) == 0)
        {
            if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
            {
                g_U2867 = 1;
                l_U518 = 12;
                sub_1092( "SP", "eCheckpointState = CP_HANDLE_WAIT_FOR_HANDOFF", 0 );
            }
        }
        break;
        case 12:
        if ((CUTSCENE_IS_LOADED( "mid_07_bus_concat" )) == 1)
        {
            if (GET_CUTSCENE_TIME_MS() > 0)
            {
                l_U518 = 13;
                sub_1092( "SP", "eCheckpointState = CP_FINISHED", 0 );
            }
        }
        break;
        case 13:
        if (g_U764 > 5)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U518 = 0;
            sub_1092( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    return;
}

void sub_10744()
{
    int iVar2;
    int iVar3;

    if ((IS_PED_DEAD( sub_1523() )) == 0)
    {
        if ((g_U2642._fU0 == 0) AND (((DOES_OBJECT_EXIST( g_U2642._fU20 )) == 1) AND ((DOES_OBJECT_EXIST( g_U2642._fU12 )) == 1)))
        {
            iVar2 = 0;
            if ((HAS_OBJECT_BEEN_DAMAGED_BY_PED( g_U2642._fU12, sub_1523() )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_PANEL", g_U2642._fU12 );
                START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", g_U2642._fU12, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                iVar2 = 1;
            }
            else if ((HAS_OBJECT_BEEN_DAMAGED_BY_PED( g_U2642._fU20, sub_1523() )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_PANEL", g_U2642._fU20 );
                START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", g_U2642._fU20, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                iVar2 = 1;
            }
            if (iVar2 == 1)
            {
                sub_6010( g_U2642._fU16 );
                sub_6010( g_U2642._fU24 );
                GENERATE_OBJECT_CRUSH_IMMINENT_EVENT( g_U2642._fU4 );
                g_U2642._fU0 = 1;
            }
        }
    }
    if ((IS_PED_DEAD( sub_1523() )) == 0)
    {
        if ((g_U2689._fU0 == 0) AND (((DOES_OBJECT_EXIST( g_U2689._fU20 )) == 1) AND ((DOES_OBJECT_EXIST( g_U2689._fU12 )) == 1)))
        {
            iVar3 = 0;
            if ((HAS_OBJECT_BEEN_DAMAGED_BY_PED( g_U2689._fU12, sub_1523() )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_PANEL", g_U2689._fU12 );
                START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", g_U2689._fU12, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                iVar3 = 1;
            }
            else if ((HAS_OBJECT_BEEN_DAMAGED_BY_PED( g_U2689._fU20, sub_1523() )) == 1)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_PANEL", g_U2689._fU20 );
                START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( "BusDepot_Elec_Box_S", g_U2689._fU20, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                iVar3 = 1;
            }
            if (iVar3 == 1)
            {
                sub_6010( g_U2689._fU16 );
                sub_6010( g_U2689._fU24 );
                GENERATE_OBJECT_CRUSH_IMMINENT_EVENT( g_U2689._fU4 );
                g_U2689._fU0 = 1;
            }
        }
    }
    sub_11550( ref g_U2642 );
    sub_11550( ref g_U2689 );
    if ((g_U2642._fU0 == 2) || ((sub_3158( ref g_U2642._fU152 )) == 1))
    {
        if ((DOES_OBJECT_EXIST( g_U2642._fU4 )) == 1)
        {
            FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U2642._fU4 );
        }
    }
    if ((g_U2689._fU0 == 2) || ((sub_3158( ref g_U2689._fU152 )) == 1))
    {
        if ((DOES_OBJECT_EXIST( g_U2689._fU4 )) == 1)
        {
            FORCE_UPDATE_OBJECT_PHYSICAL_STATE( g_U2689._fU4 );
        }
    }
    if (g_U2642._fU148 == 0)
    {
        if (g_U2642._fU0 == 4)
        {
            sub_19149( 1 );
            g_U2642._fU148 = 1;
        }
    }
    if (g_U2689._fU148 == 0)
    {
        if (g_U2689._fU0 == 4)
        {
            sub_19652( 1 );
            g_U2689._fU148 = 1;
        }
    }
    return;
}

void sub_11550(int iParam0)
{
    int I;
    float fVar4;
    vector vVar5;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    switch (iParam0->_fU0)
    {
        case 0: break;
        case 1:
        sub_1092( "SP", "Falling Bus Current Status = EBS_START", 0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU4 )) == 1)
        {
            iParam0->_fU48 = 0;
            iParam0->_fU52 = 0;
            iParam0->_fU140 = 0;
            iParam0->_fU144 = 0;
            iParam0->_fU28 = GET_OBJECT_BONE_INDEX( iParam0->_fU4, "BusCrs_Ab_Anim" );
            iParam0->_fU32 = GET_OBJECT_MASS( iParam0->_fU4 );
            if (iParam0->_fU28 != -1)
            {
                PLAY_OBJECT_ANIM( iParam0->_fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_SPEED( iParam0->_fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 1.00000000 );
                PLAY_OBJECT_ANIM( iParam0->_fU8, "P_BD_BusCrs_Ac_H", ref g_U1976, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_SPEED( iParam0->_fU8, "P_BD_BusCrs_Ac_H", ref g_U1976, 1.00000000 );
                iParam0->_fU36 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_BONE_COORDS( iParam0->_fU4, iParam0->_fU28, 0 )};
                if (iParam0->_fU4 == g_U2642._fU4)
                {
                    PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_FAIL", iParam0->_fU4 );
                    sub_12033( ref l_U95[0] );
                    sub_12033( ref l_U95[1] );
                    sub_12033( ref l_U95[2] );
                    sub_12033( ref l_U95[3] );
                }
                else
                {
                    PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_FAIL", iParam0->_fU4 );
                    sub_12033( ref l_U95[4] );
                    sub_12033( ref l_U95[5] );
                    sub_12033( ref l_U95[6] );
                    sub_12033( ref l_U95[7] );
                }
                iParam0->_fU0 = 2;
                sub_1092( "SP", "Falling Bus Current Status = EBS_FALLING", 0 );
            }
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU12 )) == 1)
        {
            CAMERA_CAN_TARGET_OBJECT( 0, iParam0->_fU12 );
        }
        if ((DOES_OBJECT_EXIST( iParam0->_fU20 )) == 1)
        {
            CAMERA_CAN_TARGET_OBJECT( 0, iParam0->_fU20 );
        }
        break;
        case 2:
        sub_12623( iParam0 );
        if ((DOES_OBJECT_EXIST( iParam0->_fU4 )) == 1)
        {
            fVar4 = GET_OBJECT_ANIM_CURRENT_TIME( iParam0->_fU4, "P_BD_BusCrs_Ab_H", ref g_U1976 );
            vVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_BONE_COORDS( iParam0->_fU4, iParam0->_fU28, 0 )};
        }
        uVar8 = {(vVar5 - iParam0->_fU36) * TIMESTEP()};
        if ((NOT iParam0->_fU144) AND (fVar4 > l_U93))
        {
            sub_6010( iParam0->_fU8 );
            iParam0->_fU8 = sub_14520( g_U2122, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ), 0, 0, 0, 0, 1, 0 );
            if ((DOES_OBJECT_EXIST( iParam0->_fU8 )) == 1)
            {
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU8, ref g_U1816 );
                PLAY_OBJECT_ANIM( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, 0.00000000, 0, 1 );
                SET_OBJECT_ANIM_CURRENT_TIME( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, fVar4 );
                SET_OBJECT_ANIM_SPEED( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, 1.00000000 );
            }
            sub_15063( (iParam0^) );
            iParam0->_fU144 = 1;
        }
        if (fVar4 >= 0.95000000)
        {
            iParam0->_fU0 = 3;
        }
        else if (fVar4 > 0.08000000)
        {
            for ( I = 0; I < g_U2738; I++ )
            {
                if ((DOES_PED_EXIST( g_U2738[I] )) == 1)
                {
                    if (((IS_PED_DEAD( g_U2738[I] )) == 1) || ((IS_PED_DEAD( g_U2738[I] )) == 0))
                    {
                        if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2738[I], (iParam0 + 56) + 0 )) == 1)
                        {
                            Temporarily_Disable_Ped_Self_Collision( g_U2738[I], 1500 );
                        }
                    }
                }
            }
            for ( I = 0; I < g_U2760; I++ )
            {
                if ((DOES_PED_EXIST( g_U2760[I] )) == 1)
                {
                    if (((IS_PED_DEAD( g_U2760[I] )) == 1) || ((IS_PED_DEAD( g_U2760[I] )) == 0))
                    {
                        if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2760[I], (iParam0 + 56) + 0 )) == 1)
                        {
                            Temporarily_Disable_Ped_Self_Collision( g_U2760[I], 1500 );
                        }
                    }
                }
            }
        }
        if ((fVar4 > 0.37500000) AND (iParam0->_fU48 == 0))
        {
            sub_1092( "SP", "HANDLING BLOOD FX", 0 );
            for ( I = 0; I < g_U2738; I++ )
            {
                if ((((IS_PED_DEAD( g_U2738[I] )) == 0) || ((IS_PED_DEAD( g_U2738[I] )) == 1)) AND ((DOES_PED_EXIST( g_U2738[I] )) == 1))
                {
                    if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2738[I], (iParam0 + 56) + 0 )) == 1)
                    {
                        sub_1092( "SP", "Found a ped under a falling bus...blood time!", 0 );
                        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_fall_high_death", g_U2738[I], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 65488, 5.00000000 );
                        sub_16295( g_U2738[I] );
                        SET_ARCADEMODE_EVENT( 0, g_U2738[I] );
                        sub_16377();
                    }
                    else if (((sub_16593( g_U2738[I], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ) )) < 13.00000000) AND ((IS_PED_DEAD( g_U2738[I] )) == 0))
                    {
                        sub_1092( "SP", "Setting ped to react to bus crush", 0 );
                        CLEAR_PED_TASKS( g_U2738[I] );
                        PED_SET_ACTION_INTENTION( g_U2738[I], 0, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ) );
                        g_U2749[I] = 1;
                    }
                }
            }
            for ( I = 0; I < g_U2760; I++ )
            {
                if ((((IS_PED_DEAD( g_U2760[I] )) == 0) || ((IS_PED_DEAD( g_U2760[I] )) == 1)) AND ((DOES_PED_EXIST( g_U2760[I] )) == 1))
                {
                    if ((IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U2760[I], (iParam0 + 56) + 0 )) == 1)
                    {
                        sub_1092( "SP", "Found a ped under a falling bus...blood time!", 0 );
                        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "blood_fall_high_death", g_U2760[I], 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 65488, 5.00000000 );
                        sub_16295( g_U2760[I] );
                        SET_ARCADEMODE_EVENT( 0, g_U2760[I] );
                        sub_16377();
                    }
                    else if (((sub_16593( g_U2760[I], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ) )) < 13.00000000) AND ((IS_PED_DEAD( g_U2760[I] )) == 0))
                    {
                        sub_1092( "SP", "Setting ped to react to bus crush", 0 );
                        CLEAR_PED_TASKS( g_U2760[I] );
                        PED_SET_ACTION_INTENTION( g_U2760[I], 0, 1000, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 ) );
                        g_U2764[I] = 1;
                    }
                }
            }
            sub_12623( iParam0 );
            iParam0->_fU48 = 1;
        }
        if (((IS_PED_DEAD( sub_1523() )) == 0) || ((IS_PED_DEAD( sub_1523() )) == 1))
        {
            if ((fVar4 > 0.37500000) AND (l_U438 == 1))
            {
                if (l_U439 == 0)
                {
                    sub_1092( "SP", "Starting Player Crushed by Bus FX...", 0 );
                    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "blood_fall_high_death", l_U406, l_U409, l_U418 );
                    START_PARTICLE_FX_NON_LOOPED_AT_COORD( "blood_fall_high_death", l_U412, l_U415, l_U418 );
                    l_U439 = 1;
                }
            }
        }
        if ((NOT iParam0->_fU52) AND (fVar4 > 0.43750000))
        {
            sub_1092( "SP", "STARTING BUS IMPACT EFFECTS", 0 );
            uVar11 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU4 )};
            START_PARTICLE_FX_NON_LOOPED_AT_COORD( "BusDepot_BusDrop_Impact_S", uVar11._fU0, uVar11._fU4, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
            iParam0->_fU52 = 1;
            SET_PAD_SHAKE( 0, 500, 255 );
            SHAKE_GAMEPLAY_CAM( "SMALL_EXPLOSION_SHAKE", 0.20000000 );
            SHAKE_GAMEPLAY_CAM( "VIBRATE_SHAKE", 0.40000000 );
            sub_2822( ref l_U74, l_U92, 1, 0 );
            sub_2958( ref l_U74 );
        }
        if (iParam0->_fU140 == 0)
        {
            if (fVar4 > l_U94)
            {
                PLAY_SOUND_FROM_OBJECT( -1, "BUS_LIFT_FAIL_LANDING", iParam0->_fU4 );
                iParam0->_fU140 = 1;
            }
        }
        if ((sub_3158( ref l_U74 )) == 1)
        {
            STOP_GAMEPLAY_CAM_SHAKING( "SMALL_EXPLOSION_SHAKE", 0 );
        }
        if (sub_3158( ref l_U83 ))
        {
            STOP_GAMEPLAY_CAM_SHAKING( "VIBRATE_SHAKE", 0 );
        }
        iParam0->_fU36 = {vVar5};
        break;
        case 3:
        sub_1092( "SP", "Falling Bus Current Status = EBS_POSTFALL", 0 );
        for ( I = 0; I < g_U2738; I++ )
        {
            if ((DOES_PED_EXIST( g_U2738[I] )) == 1)
            {
                if (((sub_13857( g_U2738[I], iParam0->_fU56 )) == 1) || ((IS_PED_RAGDOLL( g_U2738[I], 1 )) == 1))
                {
                    if ((IS_PED_DEAD( g_U2738[I] )) == 0)
                    {
                        sub_8343( "Killing ped under bus" );
                        sub_16295( g_U2738[I] );
                        SET_ARCADEMODE_EVENT( 0, g_U2738[I] );
                        sub_16377();
                    }
                }
                else if ((g_U2749[I] == 1) AND (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PED_DEAD( g_U2738[I] )) == 0)))
                {
                    TASK_COMBAT_PED( g_U2738[I], sub_1523() );
                    g_U2749[I] = 0;
                }
            }
        }
        for ( I = 0; I < g_U2760; I++ )
        {
            if ((DOES_PED_EXIST( g_U2760[I] )) == 1)
            {
                if (((sub_13857( g_U2760[I], iParam0->_fU56 )) == 1) || ((IS_PED_RAGDOLL( g_U2760[I], 1 )) == 1))
                {
                    if (NOT (IS_PED_DEAD( g_U2760[I] )))
                    {
                        sub_8343( "Killing ped under bus" );
                        sub_16295( g_U2760[I] );
                        SET_ARCADEMODE_EVENT( 0, g_U2760[I] );
                        sub_16377();
                    }
                }
                else if ((g_U2764[I] == 1) AND (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PED_DEAD( g_U2760[I] )) == 0)))
                {
                    TASK_COMBAT_PED( g_U2760[I], sub_1523() );
                    g_U2764[I] = 0;
                }
            }
        }
        sub_12623( iParam0 );
        FORCE_UPDATE_OBJECT_PHYSICAL_STATE( iParam0->_fU4 );
        if (((IS_PED_DEAD( sub_1523() )) == 0) || ((IS_PED_DEAD( sub_1523() )) == 1))
        {
            if (l_U438 == 1)
            {
                sub_1092( "SP", "Starting Player Crushed Fail Bullet Cam Timer...", 0 );
                sub_2822( ref l_U419, 0, 1, 0 );
                sub_2958( ref l_U419 );
            }
        }
        iParam0->_fU0 = 4;
        break;
        case 4:
        if ((sub_3158( ref l_U419 )) == 1)
        {
            sub_1092( "SP", "Starting Player Crushed Fail Bullet Cam...", 0 );
            l_U437 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
            SETUP_BULLET_CAMERA_SCENE( l_U437, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
            SET_CAM_ACTIVE( l_U437, 1 );
            sub_2822( ref l_U428, 500, 1, 0 );
            sub_2958( ref l_U428 );
            l_U440 = 1;
        }
        break;
    }
    return;
}

void sub_12033(int iParam0)
{
    sub_1092( "SP", "P_START_PARTICLE_FX_ON_OBJECT", "###" );
    if ((DOES_OBJECT_EXIST( iParam0->_fU68 )) == 1)
    {
        if (iParam0->_fU128 == 1)
        {
            sub_1092( "SP", "START_PARTICLE_FX_LOOPED_ON_OBJECT", "###" );
            iParam0->_fU136 = START_PARTICLE_FX_LOOPED_ON_OBJECT( iParam0 + 36, iParam0->_fU68, iParam0->_fU76, iParam0->_fU88, iParam0->_fU124 );
            sub_2958( iParam0 + 0 );
        }
        else
        {
            sub_1092( "SP", "START_PARTICLE_FX_NON_LOOPED_ON_OBJECT", "###" );
            START_PARTICLE_FX_NON_LOOPED_ON_OBJECT( iParam0 + 36, iParam0->_fU68, iParam0->_fU76, iParam0->_fU88, iParam0->_fU124 );
        }
    }
    iParam0->_fU132 = 1;
    return;
}

void sub_12623(int iParam0)
{
    if (l_U441 == 0)
    {
        START_WIDGET_GROUP( "Bus Crush Player Helper" );
        START_WIDGET_GROUP( "Close Bus Crush Player" );
        START_WIDGET_GROUP( "Animated Camera" );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos X", ref l_U398._fU0, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Y", ref l_U398._fU4, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Z", ref l_U398._fU8, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Heading", ref l_U401, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Player Crushed FX" );
        ADD_WIDGET_FLOAT_SLIDER( "FX Scale", ref l_U418, 0.00000000, 100.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U406._fU0, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U406._fU4, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U406._fU8, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U409._fU0, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U409._fU4, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U409._fU8, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Far Bus Crush Player" );
        START_WIDGET_GROUP( "Animated Camera" );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos X", ref l_U402._fU0, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Y", ref l_U402._fU4, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Pos Z", ref l_U402._fU8, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Offset Heading", ref l_U405, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        START_WIDGET_GROUP( "Player Crushed FX" );
        ADD_WIDGET_FLOAT_SLIDER( "FX Scale", ref l_U418, 0.00000000, 100.00000000, 0.10000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos X", ref l_U412._fU0, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Y", ref l_U412._fU4, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Pos Z", ref l_U412._fU8, -5000.00000000, 5000.00000000, 0.00100000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot X", ref l_U415._fU0, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Y", ref l_U415._fU4, -360.00000000, 360.00000000, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Rot Z", ref l_U415._fU8, -360.00000000, 360.00000000, 0.01000000 );
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        STOP_WIDGET_GROUP();
        l_U441 = 1;
    }
    if (((IS_PED_DEAD( sub_1523() )) == 0) || ((IS_PED_DEAD( sub_1523() )) == 1))
    {
        if (l_U438 == 0)
        {
            if ((sub_13857( sub_1523(), iParam0->_fU56 )) == 1)
            {
                sub_1092( "SP", "Player is under the bus when falling! Running Death Cam.", 0 );
                sub_2627( 1, 0, 0, 1 );
                sub_4849( 0 );
                sub_4942( 0 );
                if (iParam0->_fU4 == g_U2642._fU4)
                {
                    CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "BUS_CRUSH_CAM", 1, l_U398, l_U401, 0, 0 );
                }
                else if (iParam0->_fU4 == g_U2689._fU4)
                {
                    CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "BUS_CRUSH_CAM", 1, l_U402, l_U405, 0, 0 );
                }
                sub_14187( sub_1523(), -63.25000000, -3.31000000, 0.00100000, 75.96000000 );
                if (((IS_PED_DEAD( sub_1523() )) == 0) || ((IS_PED_DEAD( sub_1523() )) == 1))
                {
                    SET_PED_INVINCIBLE( sub_1523(), 1 );
                    SET_PED_PROOFS( sub_1523(), 1, 1, 1, 1, 1 );
                    SET_PED_VISIBLE( sub_1523(), 0 );
                    CLEAR_PED_TASKS( sub_1523() );
                    FREEZE_PED_POSITION( sub_1523(), 1 );
                }
                l_U438 = 1;
            }
        }
    }
    return;
}

int sub_13857(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_14187(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_14520(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_14630( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_14630(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8343( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_15063(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46)
{
    vector vVar49;
    int[0] iVar52;
    unknown uVar66;
    unknown uVar67;
    unknown uVar68;
    unknown uVar69;
    unknown uVar70;
    unknown uVar71;
    unknown uVar72;
    unknown uVar73;
    unknown uVar74;
    unknown uVar75;
    unknown uVar76;
    unknown uVar77;
    unknown uVar78;
    unknown uVar79;
    unknown uVar80;
    unknown uVar81;
    unknown uVar82;
    unknown uVar83;
    unknown uVar84;
    unknown uVar85;
    unknown uVar86;
    unknown uVar87;
    unknown uVar88;
    unknown uVar89;
    unknown uVar90;
    unknown uVar91;
    int I;

    sub_1092( "SP", "P_BUS_WINDOW_EXPLOSION", 0 );
    vVar49 = {(vector( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( uParam0._fU4 ))) - l_U68};
    array(ref iVar52, 13);
    iVar52[0] = {(vector( -57.68585000, -2.85334100, 2.79495800)) + vVar49};
    iVar52[1] = {(vector( -54.00000000, -1.59900000, 3.20000000)) + vVar49};
    iVar52[2] = {(vector( -48.88678000, -1.60743900, 3.00000000)) + vVar49};
    iVar52[3] = {(vector( -40.52529000, -3.74309000, 3.00000000)) + vVar49};
    iVar52[4] = {(vector( -54.00000000, -6.59900000, 3.20000000)) + vVar49};
    iVar52[5] = {(vector( -48.88678000, -6.60743900, 3.00000000)) + vVar49};
    iVar52[6] = {(vector( -54.29200000, -1.69868200, 3.21105200)) + vVar49};
    iVar52[7] = {(vector( -44.90000000, -1.29576000, 3.59900000)) + vVar49};
    iVar52[8] = {(vector( -42.96821000, -1.62924000, 3.40276900)) + vVar49};
    iVar52[9] = {(vector( -44.64196000, -5.72681400, 3.40620200)) + vVar49};
    iVar52[10] = {(vector( -46.63055000, -5.80551600, 3.00387100)) + vVar49};
    iVar52[11] = {(vector( -55.80989000, -5.95886800, 3.20848300)) + vVar49};
    iVar52[12] = {(vector( -57.15919000, -4.98692300, 3.28147700)) + vVar49};
    for ( I = 0; I < iVar52; I++ )
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( iVar52[I], "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( uParam0._fU4 ), 0, 1, -1074756423, 0 );
    }
    return;
}

void sub_16295(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_16377()
{
    if (SCRIPT_VAR_HASH_EXISTS( -455945688 ))
    {
        sub_1092( "CCB", "An enemy has been crushed by a bus...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -455945688, g_U2629 );
    }
    else
    {
        sub_1092( "CCB", "The CrushedByBus script variable is NOT valid!!!", 0 );
    }
    return;
}

void sub_16593(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

void sub_19149(boolean bParam0)
{
    sub_1092( "SP", "P_CLOSE_BUS_COVER", 0 );
    if (bParam0)
    {
        sub_8343( "Close Bus has fallen, setting cover for fallen bus." );
    }
    else
    {
        sub_8343( "Close Bus is raised, setting cover for raised bus." );
    }
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline102" ), bParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline103" ), bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position70", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position71", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position73", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position87", bParam0 );
    return;
}

void sub_19652(boolean bParam0)
{
    sub_1092( "SP", "P_FAR_BUS_COVER", 0 );
    if (bParam0)
    {
        sub_8343( "Far Bus has fallen, setting cover for fallen bus." );
    }
    else
    {
        sub_8343( "Far Bus is raised, setting cover for raised bus." );
    }
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline100" ), bParam0 );
    ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline101" ), bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position61", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position63", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position66", bParam0 );
    ENABLE_COVERPOINTMP3( "RepairGarage", "Corner Position68", bParam0 );
    return;
}

void sub_20126()
{
    if (g_U2851 == 0)
    {
        if ((HAS_SOMETHING_EXPLODED_IN_AREA( g_U2636, 3.00000000 )) == 1)
        {
            sub_20174( 1 );
            g_U2851 = 1;
        }
    }
    return;
}

void sub_20174(int iParam0)
{
    sub_1092( "SP", "P_UPDATE_FORKLIFT_COVER", 0 );
    if (iParam0 == 0)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline11" ), 1 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline68" ), 0 );
    }
    else if (iParam0 == 1)
    {
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline11" ), 0 );
        ENABLE_COVERPOINTMP3_GROUP_FROM_LINE( GET_HASH_KEY( "RepairGarage" ), GET_HASH_KEY( "GrabSpline68" ), 1 );
    }
    return;
}

void sub_20695()
{
    int I;

    sub_1092( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U870 = 2.00000000;
    l_U871 = 5.00000000;
    l_U872 = 1.00000000;
    l_U873 = 5.00000000;
    l_U874 = 1;
    g_U2850 = 0;
    l_U760 = 0;
    g_U2868 = 0;
    l_U921 = 0;
    l_U922 = 0;
    for ( I = 0; I < g_U2738; I++ )
    {
        g_U2749[I] = 0;
    }
    for ( I = 0; I < g_U2760; I++ )
    {
        g_U2764[I] = 0;
    }
    g_U2642._fU0 = 0;
    g_U2689._fU0 = 0;
    l_U923 = 0;
    l_U924 = 0;
    l_U925 = 0;
    l_U926 = 0;
    l_U928 = 0;
    l_U929 = 0;
    l_U927 = 0;
    g_U2851 = 0;
    l_U438 = 0;
    l_U439 = 0;
    l_U440 = 0;
    sub_4328( ref l_U419 );
    sub_4328( ref l_U428 );
    sub_4328( ref l_U894 );
    sub_4328( ref l_U83 );
    sub_4328( ref l_U74 );
    sub_4328( ref l_U903 );
    sub_4328( ref l_U912 );
    sub_4328( ref l_U876 );
    sub_4328( ref l_U885 );
    l_U520 = 0;
    l_U521 = 0;
    l_U522 = 0;
    return;
}

void sub_21081()
{
    sub_1092( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_21164( ref l_U762, -57.00000000, -9.00000000, 4.97000000, 50.00000000, -1257669444, 26, 6, 0, 0, 1 );
    sub_21164( ref l_U629[0], -69.74000000, 2.95000000, 0.00000000, -112.25000000, -239589372, 7, 3, 2, 0, 0 );
    sub_21164( ref l_U629[1], -46.45000000, 22.39000000, 0.00000000, -80.88000000, -2097013952, 7, 3, 2, 0, 0 );
    sub_21164( ref l_U629[2], -70.93000000, 25.51000000, 0.00000000, -95.08000000, -2007069993, 7, 3, 2, 0, 0 );
    sub_21164( ref l_U629[3], -57.33331000, 30.17876000, -0.00502000, 162.08610000, 1550402728, 7, 3, 2, 0, 0 );
    sub_21164( ref l_U629[4], -44.94000000, 21.19000000, 0.03000000, 145.00000000, -482117354, 7, 3, 2, 0, 0 );
    sub_21164( ref l_U629[5], -76.38000000, 19.18000000, -0.00000000, 146.00000000, -1696496179, 7, 3, 2, 0, 0 );
    sub_21164( ref l_U629[6], -36.72000000, 27.75000000, 0.00000000, 0.00000000, -1990989260, 7, 3, 2, 0, 0 );
    sub_21164( ref l_U629[7], -36.72000000, 25.10000000, 0.00000000, 0.00000000, -1858020913, 7, 3, 2, 0, 0 );
    sub_21164( ref l_U629[8], -36.72000000, 23.75000000, 0.00000000, 0.00000000, -2000275109, 7, 3, 2, 0, 0 );
    sub_21164( ref l_U629[9], -36.72000000, 26.40000000, 0.03000000, 0.00000000, 2130638803, 7, 3, 2, 0, 0 );
    sub_21788( ref l_U560, "TRIG_REPAIR_CUTSCENE_START", -65.91000000, -12.05000000, -0.24000000, 4.00000000, 3.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_21788( ref l_U581, "TRIG_REPAIR_AREA_SPAWN_1", -54.58000000, -3.88000000, -0.98000000, 37.28000000, 24.75000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_21788( ref l_U602, "ROBOTESTER is taking control", -42.45000000, 18.13000000, -0.20000000, 5.00000000, 5.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

void sub_21164(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_21788(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_22050()
{
    sub_1092( "CCB", "P_INITIALIZE_SP_CHALLENGES", 0 );
    g_U2629 = 0;
    if (NOT (SCRIPT_VAR_HASH_EXISTS( -455945688 )))
    {
        sub_1092( "CCB", "Creating the CrushedByBus script variable...", 0 );
        SCRIPT_VAR_HASH_ADD_INT( -455945688 );
        if (SCRIPT_VAR_HASH_EXISTS( -455945688 ))
        {
            sub_1092( "CCB", "The CrushedByBus script variable was successfully created...", 0 );
        }
        else
        {
            sub_1092( "CCB", "The CrushedByBus script variable is NOT valid!!!", 0 );
        }
    }
    else
    {
        sub_1092( "CCB", "The CrushedByBus script variable was already created...", 0 );
        SCRIPT_VAR_HASH_SET_INT( -455945688, 0 );
    }
    return;
}

void sub_22597(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_22632( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_22763( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_22632(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_22763( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_22763( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_22763( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_23411( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_22763( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_22763( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_22763(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22783( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_22783(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_23411(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_24203(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_22597( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_24312(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_24333( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_24465( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_24333(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_24465( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_24465( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_24465( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_23411( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_24465( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_24465( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_24465(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22783( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_25327(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_25348( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_25485( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_25348(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_25485( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_25485( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_25485( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_23411( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_25485( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_25485( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_25485(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22783( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_26350(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_26385( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_26537( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_26385(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_26537( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_26537( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_26537( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_26537( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_23411( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_23411( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_26537( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_26537( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_26537(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22783( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_28504(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (sub_28516( uParam0 ))
    {
        if (sub_28639( uParam1 ))
        {
            if (sub_28762( uParam2 ))
            {
                if (sub_28955( uParam3 ))
                {
                    if (sub_29084( uParam4 ))
                    {
                        if (sub_29207( uParam5 ))
                        {
                            if (sub_29336( uParam6 ))
                            {
                                if (sub_29465( uParam7 ))
                                {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

int sub_28516(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28639(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_28762(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_28955(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29084(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29207(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29336(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29465(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_29707(unknown uParam0)
{
    sub_1092( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6474( uParam0, sub_1523() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

int sub_30241()
{
    if (g_U2850 == 0)
    {
        sub_30264( 0 );
    }
    else if (g_U2850 == 1)
    {
        sub_30719();
        sub_31050();
    }
    else if (g_U2850 == 2)
    {
        sub_31773();
    }
    else if (g_U2850 == 3)
    {
        sub_32664();
    }
    else if (g_U2850 == 4)
    {
        sub_33016();
    }
    else if (g_U2850 == 5)
    {
        sub_33314();
    }
    else if (g_U2850 == 6)
    {
        sub_35244();
    };;;;;;;
    g_U2850++;
    if (g_U2850 == 7)
    {
        return 1;
    }
    return 0;
}

void sub_30264(boolean bParam0)
{
    vector vVar3;
    vector vVar6;
    vector vVar9;
    vector vVar12;

    sub_1092( "SP", "P_GLOBAL_CREATE_PAINT_GARAGE_DOOR", 0 );
    vVar3 = {-54.00200000, -11.19500000, 1.50100000};
    vVar6 = {0.00000000, 0.00000000, 0.00000000};
    sub_6010( g_U2624 );
    g_U2624 = sub_14520( g_U2113, vVar3, vVar6, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2624 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2624, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2624, ref g_U1816 );
        if (bParam0)
        {
            PLAY_OBJECT_ANIM( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1000.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2624, "BD_PAINT_DOOR02_07", "bd_objmodels", 1.00000000 );
        }
    }
    vVar9 = {-54.00200000, -12.82000000, 0.00000000};
    vVar12 = {0.00000000, 0.00000000, 0.00000000};
    sub_6010( g_U2625 );
    g_U2625 = sub_14520( g_U2114, vVar9, vVar12, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U2625 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2625, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2625, ref g_U1816 );
        SET_OBJECT_COLLIDE_WITH_NON_PLAYER_CHARACTER( g_U2625, 0 );
    }
    return;
}

void sub_30719()
{
    sub_1092( "SP", "P_CREATE_GARAGE_PILLS", 0 );
    sub_6299( g_U2841 );
    g_U2841 = sub_30819( -4072149, -42.62000000, 24.74000000, 1.11000000, 0.00000000, 0.00000000, -90.00000000, 1, 1, 1, 1119092736 );
    if (DOES_PLACEMENT_EXIST( g_U2841 ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U2841, ref g_U1816 );
    }
    sub_6299( g_U2842 );
    g_U2842 = sub_30819( -4072149, -40.15200000, 23.38200000, 5.90500000, 0.00000000, 0.00000000, 1.70000000, 1, 1, 1, 1119092736 );
    if (DOES_PLACEMENT_EXIST( g_U2842 ))
    {
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U2842, ref g_U1816 );
    }
    return;
}

void sub_30819(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_31050()
{
    sub_1092( "CO", "P_CREATE_S_BUS_GG_M4_01", 0 );
    sub_31162( ref g_U703, g_U760, 2138151038, 937196549, -41.62000000, -11.94000000, 1.05000000, 1.50000000, 0.00000000, 20.00000000, "Room_Garage" );
    sub_31291( ref g_U703 );
    return;
}

void sub_31162(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_1092( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_31291(int iParam0)
{
    sub_1092( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_31352( iParam0->_fU12 )) == 1)
        {
            sub_1092( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_1092( "CO", "has never been collected.", 0 );
        }
        if ((sub_31352( iParam0->_fU12 )) == 0)
        {
            sub_6299( iParam0->_fU0 );
            iParam0->_fU0 = sub_30819( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_1092( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_1092( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_31352(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_31773()
{
    int I;
    vector vVar3;
    vector vVar6;

    sub_1092( "SP", "P_CREATE_CATWALK", 0 );
    g_U2784[0] = {-61.54202000, 6.49707800, 5.65253500};
    g_U2784[1] = {-58.52385000, 6.49707800, 5.65253500};
    g_U2784[2] = {-55.50568000, 6.49707900, 5.65253600};
    g_U2784[3] = {-52.48751000, 6.49707800, 5.65253500};
    g_U2784[4] = {-49.46930000, 6.49707800, 5.65253600};
    StrCopy( ref g_U2800[0], "p_bd_catwlk_aa", 32 );
    StrCopy( ref g_U2800[1], "p_bd_catwlk_ba", 32 );
    StrCopy( ref g_U2800[2], "p_bd_catwlk_ca", 32 );
    StrCopy( ref g_U2800[3], "p_bd_catwlk_da", 32 );
    StrCopy( ref g_U2800[4], "p_bd_catwlk_ea", 32 );
    for ( I = 0; I < 5; I++ )
    {
        if (I > 0)
        {
            sub_6010( g_U2768[I] );
            g_U2768[I] = sub_14520( g_U2152[I], g_U2784[I], 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2768[I] ))
            {
                FREEZE_OBJECT_POSITION( g_U2768[I], 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2768[I], ref g_U1816 );
                if (I == 1)
                {
                    SET_OBJECT_INVINCIBLE( g_U2768[I], 1 );
                    SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2768[I], 1 );
                }
            }
        }
    }
    for ( I = 0; I < 9; I++ )
    {
        sub_6010( g_U2774[I] );
        if (I < 4)
        {
            g_U2774[I] = sub_14520( g_U2158[I], g_U2784[1], 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        }
        else if (I < 7)
        {
            g_U2774[I] = sub_14520( g_U2158[I], g_U2784[3], 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        }
        else
        {
            g_U2774[I] = sub_14520( g_U2158[I], g_U2784[2], 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
        }
        if (DOES_OBJECT_EXIST( g_U2774[I] ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2774[I], ref g_U1816 );
        }
    }
    vVar3 = {-55.75000000, 8.58600000, 0.10000000};
    vVar6 = {0.00000000, 0.00000000, 0.00000000};
    sub_6010( g_U2845 );
    g_U2845 = sub_14520( g_U2148, vVar3, vVar6, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2845 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2845, ref g_U1816 );
        FREEZE_OBJECT_POSITION( g_U2845, 1 );
    }
    return;
}

void sub_32664()
{
    sub_1092( "SP", "P_CREATE_STAIRCASE", 0 );
    sub_6010( g_U2849 );
    g_U2849 = sub_14520( g_U2115, l_U389, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2849 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2849, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2849, ref g_U1816 );
    }
    sub_6010( g_U2847 );
    g_U2847 = sub_14520( g_U2126, l_U392, 180, 0.00000000, 0.00000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2847 ))
    {
        FREEZE_OBJECT_POSITION( g_U2847, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2847, ref g_U1816 );
    }
    sub_6010( g_U2848 );
    g_U2848 = sub_14520( g_U2126, l_U395, 180, 0.00000000, 0.00000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2848 ))
    {
        FREEZE_OBJECT_POSITION( g_U2848, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2848, ref g_U1816 );
    }
    return;
}

void sub_33016()
{
    sub_1092( "SP", "P_CREATE_GARAGE_FORKLIFT", 0 );
    sub_6010( g_U2843 );
    g_U2843 = sub_14520( g_U2123, g_U2636, g_U2639, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2843 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2843, ref g_U1816 );
        SET_OBJECT_PROOFS( g_U2843, 0, 0, 0, 0, 0 );
        sub_20174( 0 );
    }
    sub_6010( g_U2844 );
    g_U2844 = sub_14520( g_U2124, g_U2636, g_U2639, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2844 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2844, ref g_U1816 );
        SET_OBJECT_PROOFS( g_U2844, 1, 1, 1, 1, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2844 );
        SET_OBJECT_TARGETTABLE( g_U2844, 1 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2844, 1 );
    }
    return;
}

void sub_33314()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    vector vVar11;

    sub_1092( "SP", "P_CREATE_GARAGE_CLOSE_BUS", 0 );
    g_U2642._fU48 = 0;
    g_U2642._fU52 = 0;
    g_U2642._fU140 = 0;
    g_U2642._fU144 = 0;
    sub_21788( ref g_U2642._fU56, "TRIG_UNDER_CLOSE_BUS", -49.02000000, -3.73000000, -1.07000000, 15.45000000, 4.30000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    vVar2 = {-55.09000000, -0.81000000, 1.32000000};
    vVar5 = {0.00000000, 0.00000000, 0.00000000};
    sub_6010( g_U2642._fU12 );
    g_U2642._fU12 = sub_14520( g_U2118, vVar2, vVar5, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2642._fU12 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU12, ref g_U1816 );
        SET_OBJECT_TARGETTABLE( g_U2642._fU12, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2642._fU12 );
        SET_OBJECT_HEALTH( g_U2642._fU12, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2642._fU12, 1 );
    }
    if (g_U2642._fU0 == 0)
    {
        sub_6010( g_U2642._fU16 );
        g_U2642._fU16 = sub_14520( g_U2119, vVar2, vVar5, 0, 0, 1 );
        if (DOES_OBJECT_EXIST( g_U2642._fU16 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU16, ref g_U1816 );
        }
    }
    vVar8 = {-43.44000000, -0.81000000, 1.32000000};
    vVar11 = {0.00000000, 0.00000000, 0.00000000};
    sub_6010( g_U2642._fU20 );
    g_U2642._fU20 = sub_14520( g_U2118, vVar8, vVar11, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2642._fU20 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU20, ref g_U1816 );
        SET_OBJECT_TARGETTABLE( g_U2642._fU20, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2642._fU20 );
        SET_OBJECT_HEALTH( g_U2642._fU20, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2642._fU20, 1 );
    }
    if (g_U2642._fU0 == 0)
    {
        sub_6010( g_U2642._fU24 );
        g_U2642._fU24 = sub_14520( g_U2119, vVar8, vVar11, 0, 0, 1 );
        if (DOES_OBJECT_EXIST( g_U2642._fU24 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU24, ref g_U1816 );
        }
    }
    sub_6010( g_U2642._fU4 );
    g_U2642._fU4 = sub_14520( g_U2120, l_U68, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2642._fU4 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2642._fU4, ref g_U1816 );
        l_U376[0] = {5.94900000, 1.92300000, 2.25100000};
        l_U376[1] = {-6.73500000, 1.92300000, 2.25100000};
        l_U376[2] = {-6.73500000, -2.95100000, 2.25100000};
        l_U376[3] = {5.94900000, -2.95100000, 2.25100000};
        sub_34290( ref l_U95[0], "BusDepot_Hydraulics_Smoke_S", g_U2642._fU4, l_U376[0], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        sub_34290( ref l_U95[1], "BusDepot_Hydraulics_Smoke_S", g_U2642._fU4, l_U376[1], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        sub_34290( ref l_U95[2], "BusDepot_Hydraulics_Smoke_S", g_U2642._fU4, l_U376[2], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        sub_34290( ref l_U95[3], "BusDepot_Hydraulics_Smoke_S", g_U2642._fU4, l_U376[3], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        if (g_U2736._fU0 == 4)
        {
            PLAY_OBJECT_ANIM( g_U2642._fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2642._fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 1.00000000 );
            sub_2822( ref g_U2642._fU152, 150, 1, 0 );
            sub_2958( ref g_U2642._fU152 );
        }
    }
    if (g_U2736._fU0 == 4)
    {
        sub_34927( ref g_U2642, l_U68, 1 );
        sub_19149( 1 );
        g_U2642._fU148 = 1;
    }
    else
    {
        sub_34927( ref g_U2642, l_U68, 0 );
        sub_19149( 0 );
        g_U2642._fU148 = 0;
    }
    return;
}

void sub_34290(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9, unknown uParam10)
{
    sub_1092( "SP", "P_SETUP_PARTICLE_FX_ON_OBJECT", "###" );
    if (iParam9 > 0)
    {
        iParam0->_fU128 = 1;
        sub_2822( iParam0 + 0, iParam9, 1, 0 );
    }
    else
    {
        iParam0->_fU128 = 0;
    }
    StrCopy( ref iParam0->_fU36, uParam1, 32 );
    iParam0->_fU68 = uParam2;
    iParam0->_fU72 = -1;
    iParam0->_fU88 = {uParam6};
    iParam0->_fU124 = uParam10;
    iParam0->_fU132 = 0;
    iParam0->_fU76 = {uParam3};
    if ((DOES_OBJECT_EXIST( iParam0->_fU68 )) == 1)
    {
        iParam0->_fU100 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU68 )};
        iParam0->_fU112 = {iParam0->_fU100};
    }
    return;
}

void sub_34927(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, boolean bParam4)
{
    sub_6010( iParam0->_fU8 );
    if (bParam4)
    {
        iParam0->_fU8 = sub_14520( g_U2122, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    }
    else
    {
        iParam0->_fU8 = sub_14520( g_U2121, uParam1, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    }
    if ((DOES_OBJECT_EXIST( iParam0->_fU8 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU8, ref g_U1816 );
        if (bParam4 == 1)
        {
            PLAY_OBJECT_ANIM( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( iParam0->_fU8, "P_BD_BusCrs_Ad_H", ref g_U1976, 1.00000000 );
        }
    }
    return;
}

void sub_35244()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;
    vector vVar11;

    sub_1092( "SP", "P_CREATE_GARAGE_FAR_BUS", 0 );
    g_U2689._fU48 = 0;
    g_U2689._fU52 = 0;
    g_U2689._fU140 = 0;
    g_U2689._fU144 = 0;
    sub_21788( ref g_U2689._fU56, "TRIG_UNDER_FAR_BUS", -63.07000000, 22.10000000, -1.07000000, 15.45000000, 4.30000000, 7.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    vVar2 = {-69.17000000, 19.11000000, 1.32000000};
    vVar5 = {0.00000000, 0.00000000, -180.00000000};
    sub_6010( g_U2689._fU12 );
    g_U2689._fU12 = sub_14520( g_U2118, vVar2, vVar5, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2689._fU12 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU12, ref g_U1816 );
        SET_OBJECT_TARGETTABLE( g_U2689._fU12, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2689._fU12 );
        SET_OBJECT_HEALTH( g_U2689._fU12, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2689._fU12, 1 );
    }
    if (g_U2689._fU0 == 0)
    {
        sub_6010( g_U2689._fU16 );
        g_U2689._fU16 = sub_14520( g_U2119, vVar2, vVar5, 0, 0, 1 );
        if (DOES_OBJECT_EXIST( g_U2689._fU16 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU16, ref g_U1816 );
        }
    }
    vVar8 = {-57.53000000, 19.11000000, 1.32000000};
    vVar11 = {0.00000000, 0.00000000, -180.00000000};
    sub_6010( g_U2689._fU20 );
    g_U2689._fU20 = sub_14520( g_U2118, vVar8, vVar11, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2689._fU20 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU20, ref g_U1816 );
        SET_OBJECT_TARGETTABLE( g_U2689._fU20, 1 );
        CAMERA_CAN_TARGET_OBJECT( 1, g_U2689._fU20 );
        SET_OBJECT_HEALTH( g_U2689._fU20, 50 );
        SET_OBJECT_ONLY_DAMAGED_BY_PLAYER( g_U2689._fU20, 1 );
    }
    if (g_U2689._fU0 == 0)
    {
        sub_6010( g_U2689._fU24 );
        g_U2689._fU24 = sub_14520( g_U2119, vVar8, vVar11, 0, 0, 1 );
        if (DOES_OBJECT_EXIST( g_U2689._fU24 ))
        {
            ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU24, ref g_U1816 );
        }
    }
    sub_6010( g_U2689._fU4 );
    g_U2689._fU4 = sub_14520( g_U2120, l_U71, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if (DOES_OBJECT_EXIST( g_U2689._fU4 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2689._fU4, ref g_U1816 );
        sub_34290( ref l_U95[4], "BusDepot_Hydraulics_Smoke_S", g_U2689._fU4, l_U376[0], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        sub_34290( ref l_U95[5], "BusDepot_Hydraulics_Smoke_S", g_U2689._fU4, l_U376[1], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        sub_34290( ref l_U95[6], "BusDepot_Hydraulics_Smoke_S", g_U2689._fU4, l_U376[2], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        sub_34290( ref l_U95[7], "BusDepot_Hydraulics_Smoke_S", g_U2689._fU4, l_U376[3], 0.00000000, 0.00000000, 0.00000000, -1, 1065353216 );
        if (g_U2736._fU4 == 4)
        {
            PLAY_OBJECT_ANIM( g_U2689._fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2689._fU4, "P_BD_BusCrs_Ab_H", ref g_U1976, 1.00000000 );
            sub_2822( ref g_U2689._fU152, 150, 1, 0 );
            sub_2958( ref g_U2689._fU152 );
        }
    }
    if (g_U2736._fU4 == 4)
    {
        sub_34927( ref g_U2689, l_U71, 1 );
        sub_19652( 1 );
        g_U2689._fU148 = 1;
    }
    else
    {
        sub_34927( ref g_U2689, l_U71, 0 );
        sub_19652( 0 );
        g_U2689._fU148 = 0;
    }
    return;
}

int sub_36765()
{
    int iVar2;

    iVar2 = l_U760;
    sub_5869( g_U2738[iVar2] );
    g_U2738[iVar2] = sub_36804( ref l_U629[iVar2] );
    if (((IS_PED_DEAD( g_U2738[iVar2] )) == 0) AND ((DOES_PED_EXIST( g_U2738[iVar2] )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U2738[iVar2], ref g_U1816 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[iVar2], 1 );
        SET_PED_COMBAT_ATTRIBUTES( g_U2738[iVar2], 512, 1 );
        SET_PED_PATH_CAN_DROP_FROM_HEIGHT( g_U2738[iVar2], 0 );
        SET_PED_PATH_CAN_USE_CLIMBOVERS( g_U2738[iVar2], 0 );
        SET_PED_AI_TEMPLATE( g_U2738[iVar2], ref g_U2088 );
        if ((iVar2 mod 2) == 0)
        {
            SET_PED_COMBAT_RANGE( g_U2738[iVar2], 2 );
        }
        else
        {
            SET_PED_COMBAT_RANGE( g_U2738[iVar2], 1 );
        }
        if (iVar2 == 0)
        {
            SET_PED_ALERTNESS( g_U2738[iVar2], 4 );
            sub_8672( g_U2738[iVar2], g_U2855, 25000, 0, 0 );
            sub_8027( g_U2738[iVar2], g_U2859, 5, 25000, 0 );
        }
        else if (iVar2 == 1)
        {
            SET_PED_ALERTNESS( g_U2738[iVar2], 4 );
            sub_8672( g_U2738[iVar2], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 2)
        {
            SET_PED_ALERTNESS( g_U2738[iVar2], 4 );
            sub_8672( g_U2738[iVar2], g_U2855, 25000, 0, 0 );
            sub_8027( g_U2738[iVar2], g_U2859, 5, 25000, 0 );
        }
        else if (iVar2 == 3)
        {
            sub_8672( g_U2738[iVar2], g_U2856, 25000, 0, 0 );
        }
        else if (iVar2 == 4)
        {
            sub_8672( g_U2738[iVar2], g_U2857, 25000, 0, 0 );
        }
        else if (iVar2 == 5)
        {
            sub_8672( g_U2738[iVar2], g_U2856, 25000, 0, 0 );
        }
        else if (iVar2 == 6)
        {
            FREEZE_PED_POSITION( g_U2738[iVar2], 1 );
            sub_8672( g_U2738[iVar2], g_U2855, 25000, 0, 0 );
            sub_8027( g_U2738[iVar2], g_U2859, 5, 25000, 0 );
        }
        else if (iVar2 == 7)
        {
            FREEZE_PED_POSITION( g_U2738[iVar2], 1 );
            sub_8672( g_U2738[iVar2], g_U2854, 25000, 0, 0 );
            sub_8027( g_U2738[iVar2], g_U2859, 5, 25000, 0 );
        }
        else if (iVar2 == 8)
        {
            FREEZE_PED_POSITION( g_U2738[iVar2], 1 );
            sub_8672( g_U2738[iVar2], g_U2856, 25000, 0, 0 );
            sub_8027( g_U2738[iVar2], g_U2854, 0, 25000, 0 );
        }
        else if (iVar2 == 9)
        {
            FREEZE_PED_POSITION( g_U2738[iVar2], 1 );
            sub_8672( g_U2738[iVar2], g_U2857, 25000, 0, 0 );
        };;;;;;;;;;
        l_U760++;
    }
    if (l_U760 == g_U2738)
    {
        sub_38351( ref g_U2738, "piRepairStartEnemies" );
        sub_38445();
        return 1;
    }
    return 0;
}

void sub_36804(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_14630( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_37283( iParam0->_fU40 );
    sub_37363( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_37283(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_37363(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_38351(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_38445()
{
    int I;

    sub_1092( "SP", "P_SETUP_REPAIR_ENEMIES_GROUP_TASK", 0 );
    sub_38512( ref l_U623, 0.80000000, 0 );
    for ( I = 0; I < g_U2738; I++ )
    {
        sub_38713( g_U2738[I], ref l_U623 );
    }
    if ((DOES_GROUP_EXIST( l_U623._fU0 )) == 1)
    {
        l_U875 = PEDGROUPTASK_ADVANCE_CREATE( l_U623._fU0 );
        for ( I = 0; I < g_U2738; I++ )
        {
            if (((IS_PED_DEAD( g_U2738[I] )) == 0) AND ((DOES_PED_EXIST( g_U2738[I] )) == 1))
            {
                if ((I == 5) || ((I == 4) || ((I == 3) || ((I == 2) || ((I == 1) || (I == 0))))))
                {
                    PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U623._fU0, l_U875, g_U2738[I] );
                }
            }
        }
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U623._fU0, l_U875, sub_1523() );
        }
        PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U623._fU0, l_U875, l_U870 );
        PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U623._fU0, l_U875, l_U871 );
        PEDGROUPTASK_ADVANCE_SETTIMERANGEFORALLPEDSTOSTARTFIRING( l_U623._fU0, l_U875, l_U872 );
        PEDGROUPTASK_ADVANCE_SETADVANCEDISTANCE( l_U623._fU0, l_U875, l_U873 );
        PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U623._fU0, l_U875, l_U874 );
        PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U623._fU0, l_U875 );
    }
    return;
}

void sub_38512(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_38713(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8343( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_38512( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_38512( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

int sub_39531()
{
    unknown uVar2;
    unknown uVar3;
    int iVar4;
    unknown uVar5;
    unknown uVar6;

    switch (l_U520)
    {
        case 0: break;
        case 1:
        if (((sub_28762( ref g_U1272 )) == 1) AND ((CUTSCENE_IS_LOADED( "mid_06_bus_concat" )) == 1))
        {
            l_U520 = 2;
            sub_1092( "SP", "eRepairStartCutsceneState = CUTSCENE_WAITING_FOR_HANDOFF", 0 );
            break;
        }
        return 0;
        case 2:
        if ((sub_39743( l_U560 )) == 1)
        {
            l_U520 = 3;
            sub_1092( "SP", "eRepairStartCutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 3:
        sub_1092( "SP", "eRepairStartCutsceneState = CUTSCENE_START", 0 );
        sub_39908();
        AUDIO_MUSIC_REQUEST_ONESHOT( "BUSDEPOT_ONESHOT_07", 0 );
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
        {
            ISEQ_REGISTER_ENTITY( -1315874166, "mid06blend_player", sub_1523(), 0 );
            CUTSCENE_REGISTER_PED_TELEPORT( sub_1523(), -63.29171000, -3.19374900, 0.00089800, 75.51414000 );
            CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "6FCDCC24_E514F775_Popover1", 1, 1 );
            CUTSCENE_SET_COVER_CAMERA_DIRECTION( l_U868, l_U869 );
            uVar6 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
            {
                if ((sub_40905( uVar6 )) == 1)
                {
                    CUTSCENE_REGISTER_PED_ACTION_INTENTION( sub_1523(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                }
                else
                {
                    CUTSCENE_REGISTER_PED_ACTION_INTENTION( sub_1523(), 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
                }
            }
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
        }
        if (((IS_PED_DEAD( g_U2738[0] )) == 0) AND ((DOES_PED_EXIST( g_U2738[0] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2738[0], "M_Crac_Sold_JY", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2738[0], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2738[0], l_U778, l_U781 );
        }
        if (((IS_PED_DEAD( g_U2738[1] )) == 0) AND ((DOES_PED_EXIST( g_U2738[1] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2738[1], "M_Crac_Sold_JY^1", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2738[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2738[1], l_U782, l_U785 );
        }
        if (((IS_PED_DEAD( g_U2738[2] )) == 0) AND ((DOES_PED_EXIST( g_U2738[2] )) == 1))
        {
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2738[2], "M_Crac_Sold_JY^2", 0 );
            CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( g_U2738[2], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_LOCO" );
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2738[2], l_U786, l_U789 );
        }
        REGISTER_HIDE_ENTITY_AT_POSITION( g_U2225._fU0, g_U2225._fU4 );
        CUTSCENE_REGISTER_ISEQ( -1315874166 );
        START_SEAMLESS_CUTSCENE();
        l_U520 = 4;
        sub_1092( "SP", "eRepairStartCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 4:
        sub_1092( "SP", "eRepairStartCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            if ((GET_IS_PED_FORCED_TO_WALK( sub_1523() )) == 1)
            {
                SET_PED_FORCED_TO_WALK( sub_1523(), 0 );
            }
        }
        if (((IS_PED_DEAD( g_U2738[0] )) == 0) AND ((DOES_PED_EXIST( g_U2738[0] )) == 1))
        {
            SET_PED_VISIBLE( g_U2738[0], 1 );
            uVar5 = GET_WEAPON_FROM_HAND( g_U2738[0], 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SET_WEAPON_VISIBLE( uVar5, 0 );
            }
        }
        if (((IS_PED_DEAD( g_U2738[1] )) == 0) AND ((DOES_PED_EXIST( g_U2738[1] )) == 1))
        {
            SET_PED_VISIBLE( g_U2738[1], 1 );
            uVar5 = GET_WEAPON_FROM_HAND( g_U2738[1], 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SET_WEAPON_VISIBLE( uVar5, 0 );
            }
        }
        if (((IS_PED_DEAD( g_U2738[2] )) == 0) AND ((DOES_PED_EXIST( g_U2738[2] )) == 1))
        {
            SET_PED_VISIBLE( g_U2738[2], 1 );
            uVar5 = GET_WEAPON_FROM_HAND( g_U2738[2], 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SET_WEAPON_VISIBLE( uVar5, 0 );
            }
        }
        sub_2627( 1, 0, 0, 1 );
        sub_42290( "SCRIPT_MISSION\S_BUSDEP_GARAGE", ref g_U1757 );
        sub_43303( "MID_06_BUS_BLENDOUT", ref g_U1704 );
        l_U520 = 5;
        sub_1092( "SP", "eRepairStartCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 5:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "mid_06_bus_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "mid_06_bus_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "mid_06_bus_concat" );
            }
            if (((IS_PED_DEAD( g_U2738[0] )) == 0) AND ((DOES_PED_EXIST( g_U2738[0] )) == 1))
            {
                uVar5 = GET_WEAPON_FROM_HAND( g_U2738[0], 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
                {
                    SET_WEAPON_VISIBLE( uVar5, 1 );
                }
            }
            if (((IS_PED_DEAD( g_U2738[1] )) == 0) AND ((DOES_PED_EXIST( g_U2738[1] )) == 1))
            {
                uVar5 = GET_WEAPON_FROM_HAND( g_U2738[1], 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
                {
                    SET_WEAPON_VISIBLE( uVar5, 1 );
                }
            }
            if (((IS_PED_DEAD( g_U2738[2] )) == 0) AND ((DOES_PED_EXIST( g_U2738[2] )) == 1))
            {
                uVar5 = GET_WEAPON_FROM_HAND( g_U2738[2], 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
                {
                    SET_WEAPON_VISIBLE( uVar5, 1 );
                }
            }
            l_U520 = 0;
            sub_1092( "SP", "eRepairStartCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            iVar4 = GET_CUTSCENE_TIME_MS();
            if (l_U921 == 0)
            {
                if (iVar4 > 17000)
                {
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    l_U921 = 1;
                }
            }
            if (l_U922 == 0)
            {
                if (iVar4 > 18000)
                {
                    AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2", "", 1.00000000, 8000, 5000, -1082130432, 0 );
                    l_U922 = 1;
                }
            }
        }
        break;
    }
    return 0;
}

void sub_39743(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_13857( sub_1523(), uParam0 );
}

void sub_39908()
{
    sub_1092( "SP", "P_SETUP_GIOVANNA", 0 );
    if ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((DOES_PED_EXIST( g_U2595 )) == 0))
    {
        sub_5869( g_U2595 );
        g_U2595 = sub_36804( ref l_U762 );
        sub_40021();
        sub_40435( g_U2595, 0 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1816 );
    }
    return;
}

void sub_40021()
{
    sub_1092( "SP", "P_SETUP_GIO_ATTRIBUTES", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U2595, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U2595, 1 );
        SET_PED_CAN_PUSH_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_NPC( g_U2595, 0 );
        SET_PED_CAN_BE_TARGETTED( g_U2595, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2595, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 1 );
        SET_BULLET_CAM_PREF( g_U2595, "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        if ((IS_PED_DEAD( sub_1523() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( g_U2595, sub_1523() );
            SET_PED_DEFAULT_AIM_AT_PED( g_U2595, sub_1523() );
        }
    }
    return;
}

void sub_40435(unknown uParam0, boolean bParam1)
{
    sub_1092( "SP", "P_SET_PED_INACTIVE", 0 );
    if (bParam1)
    {
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 1 );
            SET_PED_VISIBLE( uParam0, 0 );
            SET_PED_INVINCIBLE( uParam0, 1 );
            FREEZE_PED_POSITION( uParam0, 1 );
            SET_PED_COLLISION( uParam0, 0 );
        }
    }
    else if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_INVINCIBLE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
    }
    return;
}

int sub_40905(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_42290(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_42311( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_42449( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_42311(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_42449( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_42449( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_42449( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_23411( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_42449( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_42449( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_42449(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22783( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_43303(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_43324( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_43465( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_43324(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_43465( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_43465( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_43465( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_23411( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_43465( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_43465( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_43465( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_43465(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_22783( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_45117()
{
    unknown uVar2;

    switch (l_U521)
    {
        case 0: break;
        case 1:
        sub_1092( "SP", "eRepairStartBlendoutState = BLENDOUT_SETUP", 0 );
        sub_2627( 1, 0, 0, 1 );
        if (((IS_PLAYER_DEAD( sub_1545() )) == 0) AND ((IS_PED_DEAD( sub_1523() )) == 0))
        {
            SET_PED_INVINCIBLE( sub_1523(), 1 );
            SET_PED_PROOFS( sub_1523(), 1, 1, 1, 1, 1 );
        }
        sub_45347( ref l_U790, l_U821, l_U824, l_U827, l_U828 );
        sub_45347( ref l_U829, l_U860, l_U863, l_U866, l_U867 );
        sub_42290( "SCRIPT_MISSION\S_BUSDEP_GARAGE", ref g_U1757 );
        sub_43303( "MID_06_BUS_BLENDOUT", ref g_U1704 );
        l_U521 = 2;
        sub_1092( "SP", "eRepairStartBlendoutState = BLENDOUT_LOADING", 0 );
        case 2:
        if (((sub_29336( ref g_U1704 )) == 1) AND (((sub_29465( ref g_U1757 )) == 1) AND ((sub_28762( ref g_U1272 )) == 1)))
        {
            l_U521 = 3;
            sub_1092( "SP", "eRepairStartBlendoutState = BLENDOUT_START", 0 );
            break;
        }
        return 0;
        case 3:
        sub_1092( "SP", "eRepairStartBlendoutState = BLENDOUT_START", 0 );
        if ((ISEQ_QUERY_STATE( -1315874166, 3 )) == 0)
        {
            if (((IS_PLAYER_DEAD( sub_1545() )) == 0) AND ((IS_PED_DEAD( sub_1523() )) == 0))
            {
                SNAP_PLAYER_TO_COVERPOINT( sub_1545(), "GenCover", "6FCDCC24_E514F775_Popover1", 1 );
                uVar2 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
                {
                    if ((sub_40905( uVar2 )) == 1)
                    {
                        PED_SET_ACTION_INTENTION( sub_1523(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    }
                    else
                    {
                        PED_SET_ACTION_INTENTION( sub_1523(), 48, 1000, 0.00000000, 0.00000000, 0.00000000 );
                    }
                }
            }
            ISEQ_REGISTER_ENTITY( -1315874166, "mid06blend_player", sub_1523(), 0 );
            ISEQ_START( -1315874166 );
            sub_14187( g_U2738[0], l_U778, l_U781 );
            sub_14187( g_U2738[1], l_U782, l_U785 );
            sub_14187( g_U2738[2], l_U786, l_U789 );
        }
        if ((DOES_OBJECT_EXIST( g_U2849 )) == 1)
        {
            PLAY_OBJECT_ANIM( g_U2849, "p_bd_stacas_aa", ref g_U1888, 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( g_U2849, "p_bd_stacas_aa", ref g_U1888, 1.00000000 );
            SET_OBJECT_ANIM_SPEED( g_U2849, "p_bd_stacas_aa", ref g_U1888, 0.00000000 );
        }
        sub_46388( ref l_U790, ref l_U829, l_U828, 1, 1 );
        sub_2822( ref l_U876, 1500, 1, 0 );
        sub_2958( ref l_U876 );
        l_U521 = 4;
        sub_1092( "SP", "eRepairStartBlendoutState = BLENDOUT_FIRST_FRAME", 0 );
        break;
        case 4:
        sub_1092( "SP", "eRepairStartBlendoutState = BLENDOUT_FIRST_FRAME", 0 );
        sub_46666( "MID_06_BUS_BLENDOUT", ref g_U1704 );
        AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_2_3_4_5", "", 1.00000000, 3000, 5000, -1082130432, 0 );
        sub_39908();
        sub_14187( g_U2595, -58.76000000, -7.70000000, 5.00000000, 82.52000000 );
        ISEQ_REGISTER_ENTITY( 2072811238, "gio", g_U2595, 0 );
        ISEQ_START( 2072811238 );
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
        {
            TASK_LOOK_AT_PED( g_U2595, sub_1523(), 900000, 64 );
        }
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
        {
            SET_PED_FORCED_TO_WALK( sub_1523(), 0 );
            SET_PED_INVINCIBLE( sub_1523(), 0 );
            SET_PED_PROOFS( sub_1523(), 0, 0, 0, 0, 0 );
        }
        sub_47344();
        if ((l_U523._fU0 == 0) || (g_U764 < 5))
        {
            g_U764 = 5;
            sub_48497( ref l_U523, g_U764, sub_1523(), g_U2339[5], g_U2466[5], g_U2509[5], g_U2552[5], 1 );
        }
        if ((IS_SCREEN_FADED_OUT() == 1) || (IS_DEATH_PANEL_WIPE_ALLOWED() == 1))
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        l_U521 = 5;
        sub_1092( "SP", "eRepairStartBlendoutState = BLENDOUT_PLAYING", 0 );
        break;
        case 5:
        if ((sub_3158( ref l_U876 )) == 1)
        {
            if (((IS_PED_DEAD( sub_1523() )) == 0) AND ((IS_PLAYER_DEAD( sub_1545() )) == 0))
            {
                SET_PLAYER_CONTROL( sub_1545(), 1, 0 );
            }
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( l_U868, 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( l_U869, 1065353216, 0 );
            sub_52330( l_U867, 1, 0, l_U868, l_U869, 0 );
            sub_52429( 1, 1 );
            sub_52719( "MID_06_BUS_BLENDOUT", ref g_U1704 );
            sub_52897( "MID_06_BUS_BLENDOUT", ref g_U1704 );
            l_U521 = 0;
            sub_1092( "SP", "eRepairStartBlendoutState = BLENDOUT_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_45347(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_2822( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U52, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_46388(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_2958( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

void sub_46666(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_46683( uParam0, uParam1 ))
    {
        iVar4 = sub_46782( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

int sub_46683(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_46782(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_47344()
{
    unknown uVar2;

    sub_1092( "SP", "P_START_REPAIR_ENEMIES_WAVE1", 0 );
    if ((IS_PED_DEAD( sub_1523() )) == 0)
    {
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( g_U2738[0] )) == 0) AND ((DOES_PED_EXIST( g_U2738[0] )) == 1)))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[0], 0 );
            SET_PED_ALERTNESS( g_U2738[0], 4 );
            REGISTER_TARGET( g_U2738[0], sub_1523() );
            SET_PED_COMBAT_RANGE( g_U2738[0], 1 );
            CLEAR_PED_TASKS( g_U2738[0] );
            TASK_COMBAT_PED( g_U2738[0], sub_1523() );
        }
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( g_U2738[1] )) == 0) AND ((DOES_PED_EXIST( g_U2738[1] )) == 1)))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[1], 0 );
            SET_PED_ALERTNESS( g_U2738[1], 4 );
            REGISTER_TARGET( g_U2738[1], sub_1523() );
            SET_PED_COMBAT_RANGE( g_U2738[1], 1 );
            CLEAR_PED_TASKS( g_U2738[1] );
            TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( g_U2738[1], -57.94376000, 3.28170100, 0.00546000, sub_1523(), 1, 1092616192, 1101004800, -1082130432, 3 );
        }
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( g_U2738[2] )) == 0) AND ((DOES_PED_EXIST( g_U2738[2] )) == 1)))
        {
            SET_PED_ALERTNESS( g_U2738[2], 4 );
            REGISTER_TARGET( g_U2738[2], sub_1523() );
            SET_PED_COMBAT_RANGE( g_U2738[2], 1 );
            CLEAR_PED_TASKS( g_U2738[2] );
            OPEN_SEQUENCE_TASK( ref uVar2 );
            TASK_STAND_STILL( 0, 2000 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_ATTACK_MOVE( 0, -64.99000000, -3.49000000, 0.00000000, 2.00000000, 20.00000000, -1, 2 );
            CLOSE_SEQUENCE_TASK( uVar2 );
            TASK_PERFORM_SEQUENCE( g_U2738[2], uVar2 );
            CLEAR_SEQUENCE_TASK( uVar2 );
        }
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( g_U2738[3] )) == 0) AND ((DOES_PED_EXIST( g_U2738[3] )) == 1)))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[3], 0 );
            REGISTER_TARGET( g_U2738[3], sub_1523() );
            SET_PED_COMBAT_RANGE( g_U2738[3], 2 );
            CLEAR_PED_TASKS( g_U2738[3] );
            TASK_COMBAT_PED( g_U2738[3], sub_1523() );
        }
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( g_U2738[4] )) == 0) AND ((DOES_PED_EXIST( g_U2738[4] )) == 1)))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[4], 0 );
            REGISTER_TARGET( g_U2738[4], sub_1523() );
            SET_PED_COMBAT_RANGE( g_U2738[4], 2 );
            CLEAR_PED_TASKS( g_U2738[4] );
            TASK_COMBAT_PED( g_U2738[4], sub_1523() );
        }
        if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( g_U2738[5] )) == 0) AND ((DOES_PED_EXIST( g_U2738[5] )) == 1)))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[5], 0 );
            REGISTER_TARGET( g_U2738[5], sub_1523() );
            SET_PED_COMBAT_RANGE( g_U2738[5], 2 );
            CLEAR_PED_TASKS( g_U2738[5] );
            TASK_COMBAT_PED( g_U2738[5], sub_1523() );
        }
    }
    return;
}

void sub_48497(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_1092( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_1092( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9326( iParam1 );
        sub_48756( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_49207( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_49207( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_49207( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_49207( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_49207( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_49439( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_50997( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_1092( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_48756(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_6690( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_1092( "TEH", "Ending context", 0 );
        sub_1092( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_49207(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_49439(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_50997(int iParam0)
{
    sub_8343( "CHECKPOINT DATA" );
    sub_51036( iParam0->_fU4 );
    sub_51059( iParam0->_fU16 );
    sub_51059( iParam0->_fU20 );
    sub_51059( iParam0->_fU24 );
    sub_51102( iParam0->_fU28 );
    sub_51102( iParam0->_fU56 );
    sub_51102( iParam0->_fU60 );
    sub_51102( iParam0->_fU64 );
    sub_51102( iParam0->_fU68 );
    sub_51102( iParam0->_fU72 );
    sub_51102( iParam0->_fU76 );
    sub_51102( iParam0->_fU80 );
    sub_51102( iParam0->_fU84 );
    sub_51102( iParam0->_fU88 );
    sub_51102( iParam0->_fU92 );
    sub_51059( iParam0->_fU32 );
    sub_51102( iParam0->_fU36 );
    sub_51102( iParam0->_fU40 );
    sub_51102( iParam0->_fU44 );
    sub_51059( iParam0->_fU136 );
    sub_51307( iParam0->_fU140 );
    sub_51102( iParam0->_fU52 );
    sub_8343( "---nRightHolsterAttachmentEnabled: " );
    sub_51102( iParam0->_fU96 );
    sub_8343( "---nRightHolsterAttachmentToggled: " );
    sub_51102( iParam0->_fU100 );
    sub_8343( "---nLeftHolsterAttachmentEnabled: " );
    sub_51102( iParam0->_fU104 );
    sub_8343( "---nLeftHolsterAttachmentToggled: " );
    sub_51102( iParam0->_fU108 );
    sub_8343( "---nRifleHolsterAttachmentEnabled: " );
    sub_51102( iParam0->_fU112 );
    sub_8343( "---nRifleHolsterAttachmentToggled: " );
    sub_51102( iParam0->_fU116 );
    sub_8343( "---nRightHandAttachmentEnabled: " );
    sub_51102( iParam0->_fU120 );
    sub_8343( "---nRightHandAttachmentToggled: " );
    sub_51102( iParam0->_fU124 );
    sub_8343( "---nLeftHandAttachmentEnabled: " );
    sub_51102( iParam0->_fU128 );
    sub_8343( "---nLeftHandAttachmentToggled: " );
    sub_51102( iParam0->_fU132 );
    sub_51102( l_U1 );
    sub_51102( 144 );
    return;
}

void sub_51036(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_51059(unknown uParam0)
{
    return;
}

void sub_51102(unknown uParam0)
{
    return;
}

void sub_51307(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_52330(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_52429(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1523() )))
    {
        SET_PLAYER_CONTROL( sub_1545(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1523(), 0 );
        if (bParam0)
        {
            sub_52510();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_52510()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1523() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1523(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1523(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1523(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1523(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_52719(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_46683( uParam0, uParam1 ))
    {
        iVar4 = sub_46782( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

void sub_52897(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5564( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_53283()
{
    sub_1092( "SP", "P_RE_CREATE_FOLDING_DOOR", 0 );
    sub_6010( g_U2626 );
    g_U2626 = sub_14520( g_U2112, -58.65000000, -18.04200000, 2.71200000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2626 )) == 1)
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2626, ref g_U1808 );
    }
    return;
}

void sub_53434()
{
    sub_1092( "SA", "P_CREATE_ADD_GARAGE_DOOR_COLL", 0 );
    sub_6010( g_U2846 );
    g_U2846 = sub_53538( g_U2114, -54.00000000, -13.00000000, -0.60000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 1 );
    if ((DOES_OBJECT_EXIST( g_U2846 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U2846, 1 );
    }
    return;
}

void sub_53538(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_14630( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_53805(int iParam0, int iParam1)
{
    if ((sub_53817( iParam0 )) == 0)
    {
        sub_53883( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_53817(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_53883(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_54008(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_53817( iParam0 )) == 0)
    {
        sub_53883( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_54141(int iParam0, unknown uParam1)
{
    if ((sub_53817( iParam0 )) == 0)
    {
        sub_53883( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_54279()
{
    sub_1092( "SP", "P_DIAL_GIO_WARN", 0 );
    if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if (sub_54367() == 0)
        {
            sub_54438( ref l_U940 );
            sub_54525( 1, g_U2595, "GIOVANNA", ref l_U940, 2, 0 );
            sub_54525( 0, sub_1523(), "MAX", ref l_U940, 2, 0 );
            sub_54764( "SBUS_RGGD", ref l_U940, 7, 1 );
        }
    }
    return;
}

void sub_54367()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_54438(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_54525(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_54764(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_54788( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_54788(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_54843( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_54843(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_54878( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_55372( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_54878(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_55372(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_55621()
{
    sub_1092( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_1092( "CCB", "Starting the Bus_Depot_Garage_Repair context...", 0 );
    START_CONTEXT( "Bus_Depot_Garage_Repair" );
    return;
}

void sub_55858()
{
    sub_1092( "SP", "P_TOGGLE_STAIRCASE_LIGHTS", 0 );
    if ((DOES_OBJECT_EXIST( g_U2847 )) == 1)
    {
        if ((GET_OBJECT_MODEL( g_U2847 )) == g_U2125)
        {
            sub_1092( "SP", "Staircase light off.", 0 );
            sub_6010( g_U2847 );
            g_U2847 = sub_14520( g_U2126, l_U392, 180, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2847 ))
            {
                FREEZE_OBJECT_POSITION( g_U2847, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2847, ref g_U1816 );
            }
            sub_6010( g_U2848 );
            g_U2848 = sub_14520( g_U2126, l_U395, 180, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2848 ))
            {
                FREEZE_OBJECT_POSITION( g_U2848, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2848, ref g_U1816 );
            }
        }
        else
        {
            sub_1092( "SP", "Staircase light on.", 0 );
            sub_6010( g_U2847 );
            g_U2847 = sub_14520( g_U2125, l_U392, 180, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2847 ))
            {
                FREEZE_OBJECT_POSITION( g_U2847, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2847, ref g_U1816 );
                PLAY_OBJECT_ANIM( g_U2847, "P_EL_AmbLgt_Aa_H", "bd_objmodels", 0.00000000, 1, 0 );
            }
            sub_6010( g_U2848 );
            g_U2848 = sub_14520( g_U2125, l_U395, 180, 0.00000000, 0.00000000, 0, 0, 1 );
            if (DOES_OBJECT_EXIST( g_U2848 ))
            {
                FREEZE_OBJECT_POSITION( g_U2848, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U2848, ref g_U1816 );
                PLAY_OBJECT_ANIM( g_U2848, "P_EL_AmbLgt_Aa_H", "bd_objmodels", 0.00000000, 1, 0 );
            }
        }
    }
    return;
}

void sub_56882()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    vector[2] vVar10;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    float[2] fVar17;
    vector[2] vVar20;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    int iVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    vector[2] vVar36;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    float[2] fVar43;
    vector[2] vVar46;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    int iVar53;

    if (l_U925 == 0)
    {
        if ((sub_56908( ref g_U2738 )) < 7)
        {
            array(ref vVar10, 2);
            array(ref fVar17, 2);
            array(ref vVar20, 2);
            iVar27 = 0;
            if (((IS_SPHERE_VISIBLE( -36.32000000, 24.38000000, 1.07000000, 1.00000000, 1 )) == 0) AND ((sub_13857( sub_1523(), l_U581 )) == 1))
            {
                uVar2 = {g_U1816};
                vVar10[0] = {-38.50500000, 23.71082000, 0.00134400};
                fVar17[0] = 0.00000000;
                vVar20[0] = {-48.12485000, 21.82187000, 0.00001300};
                vVar10[1] = {-39.50500000, 23.71082000, 0.00134400};
                fVar17[1] = 0.00000000;
                vVar20[1] = {-43.67000000, 17.02000000, 0.10000000};
                iVar27 = 1;
            }
            else if ((IS_SPHERE_VISIBLE( -65.91000000, -11.43000000, 1.07000000, 1.00000000, 1 )) == 0)
            {
                uVar2 = {g_U1816};
                vVar10[0] = {-65.32283000, -12.44175000, 0.00001500};
                fVar17[0] = 0.00000000;
                vVar20[0] = {-60.44330000, -6.71265400, 0.00189700};
                vVar10[1] = {-66.32283000, -12.44175000, 0.00001500};
                fVar17[1] = 0.00000000;
                vVar20[1] = {-65.60979000, -3.43879300, 0.00045700};
                iVar27 = 1;
            }
            if (iVar27 == 1)
            {
                if ((IS_PED_DEAD( sub_1523() )) == 0)
                {
                    sub_14187( g_U2738[6], vVar10[0], fVar17[0] );
                    if (((IS_PED_DEAD( g_U2738[6] )) == 0) AND ((DOES_PED_EXIST( g_U2738[6] )) == 1))
                    {
                        SET_ROOM_FOR_PED_BY_NAME( g_U2738[6], ref uVar2 );
                        FREEZE_PED_POSITION( g_U2738[6], 0 );
                        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[6], 0 );
                        REGISTER_TARGET( g_U2738[6], sub_1523() );
                        SET_PED_COMBAT_RANGE( g_U2738[6], 2 );
                        CLEAR_PED_TASKS( g_U2738[6] );
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( g_U2738[6], vVar20[0], sub_1523(), 1, 1092616192, 1101004800, -1082130432, 3 );
                        PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U623._fU0, l_U875, g_U2738[6] );
                    }
                    sub_14187( g_U2738[7], vVar10[1], fVar17[1] );
                    if (((IS_PED_DEAD( g_U2738[7] )) == 0) AND ((DOES_PED_EXIST( g_U2738[7] )) == 1))
                    {
                        SET_ROOM_FOR_PED_BY_NAME( g_U2738[7], ref uVar2 );
                        FREEZE_PED_POSITION( g_U2738[7], 0 );
                        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[7], 0 );
                        REGISTER_TARGET( g_U2738[7], sub_1523() );
                        SET_PED_COMBAT_RANGE( g_U2738[7], 1 );
                        CLEAR_PED_TASKS( g_U2738[7] );
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( g_U2738[7], vVar20[1], sub_1523(), 1, 1092616192, 1101004800, -1082130432, 3 );
                        PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U623._fU0, l_U875, g_U2738[7] );
                    }
                }
                l_U925 = 1;
            }
        }
    }
    if (l_U926 == 0)
    {
        if ((sub_56908( ref g_U2738 )) < 5)
        {
            array(ref vVar36, 2);
            array(ref fVar43, 2);
            array(ref vVar46, 2);
            iVar53 = 0;
            if (((IS_SPHERE_VISIBLE( -36.32000000, 24.38000000, 1.07000000, 1.00000000, 1 )) == 0) AND ((sub_13857( sub_1523(), l_U581 )) == 1))
            {
                uVar28 = {g_U1816};
                vVar36[0] = {-38.50500000, 23.71082000, 0.00134400};
                fVar43[0] = 0.00000000;
                vVar46[0] = {-48.12485000, 21.82187000, 0.00001300};
                vVar36[1] = {-39.50500000, 23.71082000, 0.00134400};
                fVar43[1] = 0.00000000;
                vVar46[1] = {-43.67000000, 17.02000000, 0.10000000};
                iVar53 = 1;
            }
            else if ((IS_SPHERE_VISIBLE( -65.91000000, -11.43000000, 1.07000000, 1.00000000, 1 )) == 0)
            {
                uVar28 = {g_U1816};
                vVar36[0] = {-65.32283000, -12.44175000, 0.00001500};
                fVar43[0] = 0.00000000;
                vVar46[0] = {-60.44330000, -6.71265400, 0.00189700};
                vVar36[1] = {-66.32283000, -12.44175000, 0.00001500};
                fVar43[1] = 0.00000000;
                vVar46[1] = {-65.60979000, -3.43879300, 0.00045700};
                iVar53 = 1;
            }
            if (iVar53 == 1)
            {
                if ((IS_PED_DEAD( sub_1523() )) == 0)
                {
                    sub_14187( g_U2738[8], vVar36[0], fVar43[0] );
                    if (((IS_PED_DEAD( g_U2738[8] )) == 0) AND ((DOES_PED_EXIST( g_U2738[8] )) == 1))
                    {
                        SET_ROOM_FOR_PED_BY_NAME( g_U2738[8], ref uVar28 );
                        FREEZE_PED_POSITION( g_U2738[8], 0 );
                        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[8], 0 );
                        REGISTER_TARGET( g_U2738[8], sub_1523() );
                        SET_PED_COMBAT_RANGE( g_U2738[8], 2 );
                        CLEAR_PED_TASKS( g_U2738[8] );
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( g_U2738[8], vVar46[0], sub_1523(), 1, 1092616192, 1101004800, -1082130432, 3 );
                        PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U623._fU0, l_U875, g_U2738[8] );
                    }
                    sub_14187( g_U2738[9], vVar36[1], fVar43[1] );
                    if (((IS_PED_DEAD( g_U2738[9] )) == 0) AND ((DOES_PED_EXIST( g_U2738[9] )) == 1))
                    {
                        SET_ROOM_FOR_PED_BY_NAME( g_U2738[9], ref uVar28 );
                        FREEZE_PED_POSITION( g_U2738[9], 0 );
                        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2738[7], 0 );
                        REGISTER_TARGET( g_U2738[9], sub_1523() );
                        SET_PED_COMBAT_RANGE( g_U2738[9], 1 );
                        CLEAR_PED_TASKS( g_U2738[9] );
                        TASK_ATTACK_MOVE_WHILE_AIMING_AT_PED( g_U2738[9], vVar46[1], sub_1523(), 1, 1092616192, 1101004800, -1082130432, 3 );
                        PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U623._fU0, l_U875, g_U2738[9] );
                    }
                }
                l_U926 = 1;
            }
        }
    }
    return;
}

void sub_56908(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_58863(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_58975(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

void sub_59114(unknown uParam0)
{
    int I;

    if ((sub_56908( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_59259(unknown uParam0)
{
    sub_1092( "SP", "P_MAKE_LAST_LIVING_PED_PSYCHO", 0 );
    if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1)))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 0 );
        SET_PED_COMBAT_RANGE( uParam0, 1 );
        CLEAR_PED_TASKS( uParam0 );
        TASK_ATTACK_MOVE( uParam0, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1523() ), 1092616192, 1101004800, -1082130432, 3 );
        sub_59423( uParam0 );
    }
    return;
}

void sub_59423(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

int sub_59552()
{
    int iVar2;

    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        if (HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 4.00000000, ref iVar2 ))
        {
            if (iVar2 == sub_1523())
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_59726()
{
    sub_1092( "SP", "P_DIAL_MAX_SHOOT_AT_GIO", 0 );
    if (((IS_PED_DEAD( sub_1523() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if ((sub_59828( l_U960 )) == 0)
        {
            sub_54438( ref l_U960 );
            sub_54525( 0, sub_1523(), "MAX", ref l_U960, 2, 0 );
            sub_54525( 1, g_U2595, "GIOVANNA", ref l_U960, 2, 0 );
            sub_54764( "SBUS_GVPHAT", ref l_U960, 7, 1 );
        }
    }
    return;
}

int sub_59828(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_59841( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_59841(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_60104(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_13857( sub_1523(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_60209(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_16295( (uParam0^)[I] );
    }
    return;
}

void sub_60756()
{
    int I;

    sub_1092( "SP", "P_CLEANUP_ALL", 0 );
    ISEQ_UNREGISTER_ENTITY( -1315874166, "mid06blend_player" );
    ISEQ_TERMINATE( -1315874166 );
    sub_5452( -1315874166, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 2072811238, "gio" );
    ISEQ_TERMINATE( 2072811238 );
    sub_5452( 2072811238, ref g_U1272 );
    if (g_U764 < 5)
    {
        sub_6010( g_U2843 );
        sub_6010( g_U2844 );
        sub_6068( g_U2642 );
        sub_6068( g_U2689 );
        for ( I = 0; I < 5; I++ )
        {
            sub_6010( g_U2768[I] );
        }
        for ( I = 0; I < 9; I++ )
        {
            sub_6010( g_U2774[I] );
        }
        sub_6010( g_U2845 );
        sub_6010( g_U2849 );
        sub_6010( g_U2847 );
        sub_6010( g_U2848 );
        sub_6299( l_U970 );
        sub_6299( g_U703._fU0 );
    }
    sub_61089();
    return;
}

void sub_61089()
{
    sub_1092( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_1092( "CCB", "Stopping the Bus_Depot_Garage_Repair_Catwalk context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Repair_Catwalk" );
    sub_1092( "CCB", "Stopping the Bus_Depot_Garage_Repair context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Repair" );
    return;
}

void sub_61356()
{
    sub_1092( "SP", "P_UNLOAD_ASSETS", 0 );
    sub_61404( g_U2103, ref g_U910 );
    sub_61404( g_U2112, ref g_U910 );
    sub_61404( g_U2113, ref g_U910 );
    sub_61404( g_U2114, ref g_U910 );
    sub_61404( g_U2115, ref g_U910 );
    sub_61404( g_U2126, ref g_U910 );
    sub_61404( g_U2125, ref g_U910 );
    sub_61404( g_U2120, ref g_U910 );
    sub_61404( g_U2121, ref g_U910 );
    sub_61404( g_U2122, ref g_U910 );
    sub_61404( g_U2118, ref g_U910 );
    sub_61404( g_U2119, ref g_U910 );
    sub_61404( g_U2123, ref g_U910 );
    sub_61404( g_U2124, ref g_U910 );
    sub_61404( g_U2148, ref g_U910 );
    sub_61404( g_U2168, ref g_U910 );
    sub_61404( g_U2149, ref g_U910 );
    sub_61404( g_U2150, ref g_U910 );
    sub_61866( ref g_U2152, ref g_U910 );
    sub_61866( ref g_U2158, ref g_U910 );
    sub_61404( -1409914275, ref g_U910 );
    sub_61404( g_U760, ref g_U910 );
    sub_61987( "CRUSH_IMMINENT", ref g_U1369 );
    sub_61987( ref g_U1888, ref g_U1369 );
    sub_61987( ref g_U1992, ref g_U1369 );
    sub_61987( ref g_U2000, ref g_U1369 );
    sub_52719( "MID_06_BUS_BLENDOUT", ref g_U1704 );
    sub_52897( "MID_06_BUS_BLENDOUT", ref g_U1704 );
    return;
}

void sub_61404(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5564( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_61866(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_61404( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_61987(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5564( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


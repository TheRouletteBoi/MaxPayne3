void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    l_U40 = 0;
    l_U41 = 0;
    l_U42 = 1500;
    StrCopy( ref l_U52, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U60, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U86 = 0;
    l_U140 = 0;
    l_U141 = 0;
    l_U142 = 0;
    l_U143 = 0;
    l_U144 = 0;
    l_U145 = 0;
    l_U146 = 0;
    l_U147 = 0;
    l_U148 = 0;
    l_U149 = 0;
    l_U186 = 0;
    l_U576 = 0;
    l_U577 = 0;
    l_U578 = 0;
    l_U579 = 0;
    l_U580 = 0;
    l_U581 = 0;
    l_U632 = 8500;
    l_U633 = 13000;
    l_U643 = {-39.33000000, 36.72000000, 5.00900000};
    l_U646 = 0.00000000;
    l_U701 = {-55.91900000, 44.29300000, 0.02000000};
    l_U704 = 90.00000000;
    l_U741 = 0;
    l_U852 = 0;
    sub_536( "SP", "Script busdepot_gar_wash.sc is starting...", 0 );
    l_U144 = 1;
    while (IS_EXITFLAG_SET() == 0)
    {
        sub_605();
        if (l_U145 == 0)
        {
            sub_13254();
        }
        WAIT( 0 );
    }
    sub_8460();
    sub_43252();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "busdepot_gar_wash" );
    SET_EXITFLAG_RESPONSE();
    sub_536( "SP", "Script busdepot_gar_wash.sc is terminating...", 0 );
    return;
}

void sub_536(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_605()
{
    switch (l_U145)
    {
        case 0:
        if (g_U764 == 7)
        {
            if (((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
            {
                sub_536( "SP", "Mission Failed: Giovanna died.", 0 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                l_U149 = 1;
                l_U145 = 1;
                sub_536( "SP", "eFailState = FAIL_HANDLE_GIO_DEATH_CAM", 0 );
            }
            else if ((sub_934()) || ((IS_PED_DEAD( sub_859() )) == 1))
            {
                sub_536( "SP", "Mission Failed: Player died.", 0 );
                l_U145 = 3;
                sub_536( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
        }
        else if (((CUTSCENE_NAMED_IS_LOADING( "vig_10b_bus_concat" )) == 1) || ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 1))
        {
            CLEAR_NAMED_CUTSCENE( "vig_10b_bus_concat" );
        }
        if ((sub_1608()) || ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((IS_PED_DEAD( sub_859() )) == 1)))
        {
            sub_1644( ref g_U765[7] );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        }
        break;
        case 1:
        sub_536( "SP", "eFailState = FAIL_HANDLE_GIO_DEATH_CAM", 0 );
        if (sub_1749() == 1)
        {
            l_U145 = 3;
            sub_536( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
        }
        break;
        case 2:
        if (sub_2820() == 1)
        {
            g_U2628 = 0;
            l_U145 = 4;
            sub_536( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 3:
        if (sub_1608() == 1)
        {
            l_U145 = 5;
            sub_536( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        else if ((sub_5236( NOT (IS_PED_DEAD( sub_859() )) )) == 1)
        {
            l_U145 = 4;
            sub_536( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        }
        break;
        case 4:
        sub_536( "SP", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_PED_DEAD( sub_859() )) == 0))
        {
            DO_SCREEN_FADE_OUT( 0 );
            sub_7893( 0 );
            sub_7986( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            if (((IS_PED_DEAD( sub_859() )) == 0) AND ((IS_PLAYER_DEAD( sub_881() )) == 0))
            {
                SET_PED_INVINCIBLE( sub_859(), 0 );
                SET_PED_CONSUMING_AMMO( sub_859(), 1 );
                SET_PLAYER_CAN_CANCEL_SHOOTDODGE( 1 );
                PED_ACTION_TREE_PLAY_NODE( sub_859(), "/Global/Player/PlayerRoot/PLAYER_INITIALIZE_IDLE" );
            }
            if (IS_PLAYER_SHOOTDODGING() == 1)
            {
                SET_PLAYER_SHOOTDODGE_GET_UP_STATE( 3 );
            }
            DEACTIVATE_BULLET_TIME( 0, 0 );
            DEACTIVATE_BULLET_TIME( 0, 1 );
            DEACTIVATE_BULLET_TIME( 1, 0 );
            DEACTIVATE_BULLET_TIME( 1, 1 );
            if ((IS_PLAYER_DEAD( sub_881() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_881(), 0, 0 );
                if ((GET_IS_PED_FORCED_TO_WALK( sub_859() )) == 1)
                {
                    SET_PED_FORCED_TO_WALK( sub_859(), 0 );
                }
            }
            AUDIO_MUSIC_SUSPEND( 500 );
            l_U145 = 5;
            sub_536( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        }
        break;
        case 5:
        sub_536( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
        sub_8460();
        sub_3062( g_U2595 );
        l_U145 = 6;
        sub_536( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        break;
        case 6:
        sub_536( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
        sub_9343( ref l_U150, sub_859() );
        sub_13046();
        l_U144 = 1;
        l_U145 = 0;
        sub_536( "SP", "eFailState = FAIL_IDLE", 0 );
        break;
    }
    return;
}

int sub_859()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_881() );
    }
    return 0;
}

void sub_881()
{
    return GET_PLAYER_ID();
}

int sub_934()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_859() )))
        {
            SET_PED_FORCED_TO_WALK( sub_859(), 0 );
            SET_PLAYER_FORCED_AIM( sub_881(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_881(), 1 );
            if ((IS_PED_VISIBLE( sub_859() )) == 0)
            {
                SET_PED_VISIBLE( sub_859(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1608()
{
    return g_U648;
}

void sub_1644(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

int sub_1749()
{
    switch (l_U149)
    {
        case 0: break;
        case 1:
        sub_536( "SP", "eGioDeathCamState = DEATHCAM_SETUP", 0 );
        sub_1860( 1, 0, 0, 1 );
        sub_2028( ref l_U623, 2250, 1, 0 );
        sub_2164( ref l_U623 );
        l_U149 = 2;
        sub_536( "SP", "eGioDeathCamState = DEATHCAM_WAITING_FOR_BULLETCAM", 0 );
        case 2:
        if (((l_U623._fU16 == 1) || ((sub_2364( ref l_U623 )) == 1)) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            DO_SCREEN_FADE_OUT( 0 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
            l_U149 = 3;
            sub_536( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        }
        break;
        case 3:
        sub_536( "SP", "eGioDeathCamState = DEATHCAM_FINISHED", 0 );
        l_U149 = 0;
        sub_536( "SP", "eGioDeathCamState = DEATHCAM_IDLE", 0 );
        return 1;
        break;
    }
    return 0;
}

void sub_1860(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_859() )))
        {
            SET_PLAYER_CONTROL( sub_881(), 0, uParam2 );
            SET_PED_DUCKING( sub_859(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_859() );
            }
            SET_PED_INVINCIBLE( sub_859(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_2028(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2164(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2364(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

int sub_2820()
{
    vector vVar2;
    float fVar5;
    vector vVar6;
    float fVar9;
    vector vVar10;
    float fVar13;
    int iVar14;
    vector vVar15;
    vector vVar18;

    vVar2 = {-37.82000000, 40.96000000, 5.00000000};
    fVar5 = 45.00000000;
    vVar6 = {-50.49000000, 45.34000000, 0.00000000};
    fVar9 = 90.00000000;
    vVar10 = {-40.66000000, 42.22200000, 6.09800000};
    fVar13 = 0.00000000;
    iVar14 = 4550;
    vVar15 = {0.20000000, 0.20000000, 0.00000000};
    vVar18 = {0.20000000, -0.20000000, 0.00000000};
    switch (l_U148)
    {
        case 0: break;
        case 4:
        sub_536( "SP", "eWashbayAbandonGioNISState = NIS_START", 0 );
        sub_3062( g_U2595 );
        g_U2595 = sub_3140( ref l_U464 );
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
            SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1824 );
            SET_PED_VISIBLE( g_U2595, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
            SET_PED_INVINCIBLE( g_U2595, 1 );
            SET_PED_PROOFS( g_U2595, 1, 1, 1, 1, 1 );
        }
        sub_3062( l_U595 );
        l_U595 = sub_3140( ref l_U582 );
        if (((IS_PED_DEAD( l_U595 )) == 0) AND ((DOES_PED_EXIST( l_U595 )) == 1))
        {
            SET_PED_NAME_DEBUG( l_U595, "piMid08bFailEnemy" );
            SET_ROOM_FOR_PED_BY_NAME( l_U595, ref g_U1824 );
            SET_PED_VISIBLE( l_U595, 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U595, 1 );
            sub_4247( l_U595, g_U2857, 25000, 0, 0 );
        }
        sub_4579( g_U2595, vVar2, fVar5 );
        sub_4579( l_U595, vVar6, fVar9 );
        ISEQ_REGISTER_ENTITY( 1748359782, "gio", g_U2595, 0 );
        ISEQ_REGISTER_ENTITY( 1748359782, "enemy", l_U595, 0 );
        ISEQ_START( 1748359782 );
        l_U148 = 6;
        sub_536( "SP", "eWashbayAbandonGioNISState = NIS_FIRST_FRAME", 0 );
        break;
        case 6:
        sub_536( "SP", "eWashbayAbandonGioNISState = NIS_FIRST_FRAME", 0 );
        sub_1860( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "MID_08B_BUS_3_CAM", 1, vVar10, fVar13, 0, 0 );
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            SET_PED_VISIBLE( g_U2595, 1 );
        }
        if (((IS_PED_DEAD( l_U595 )) == 0) AND ((DOES_PED_EXIST( l_U595 )) == 1))
        {
            SET_PED_VISIBLE( l_U595, 1 );
        }
        AUDIO_MUSIC_SUSPEND( 5000 );
        sub_5017( ref l_U562 );
        sub_2028( ref l_U605, 2000, 1, 0 );
        sub_2164( ref l_U605 );
        sub_2028( ref l_U596, iVar14, 1, 0 );
        sub_2164( ref l_U596 );
        sub_2028( ref l_U614, 5500, 1, 0 );
        sub_2164( ref l_U614 );
        l_U148 = 7;
        sub_536( "SP", "eWashbayAbandonGioNISState = NIS_PLAYING", 0 );
        break;
        case 7:
        if ((l_U614._fU16 == 1) || ((sub_2364( ref l_U614 )) == 1))
        {
            if ((sub_5236( 0 )) == 1)
            {
                AUDIO_MUSIC_SUSPEND( 500 );
                if (IS_ANIMATED_CAMERA_PLAYING() == 1)
                {
                    CAMERA_ANIMATED_STOP( 0, 0 );
                }
                l_U148 = 0;
                sub_536( "SP", "eWashbayAbandonGioNISState = NIS_IDLE", 0 );
                return 1;
            }
        }
        if ((sub_2364( ref l_U605 )) == 1)
        {
            sub_6279( ref l_U832 );
            sub_6361( 0, sub_859(), "MAX", ref l_U832, 2, 0 );
            sub_6361( 1, g_U2595, "GIOVANNA", ref l_U832, 2, 0 );
            sub_6609( "SBUS_MID08BUS", ref l_U832, 7, 1 );
        }
        if ((sub_2364( ref l_U596 )) == 1)
        {
            if (((IS_PED_DEAD( l_U595 )) == 0) AND (((DOES_PED_EXIST( l_U595 )) == 1) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))))
            {
                sub_536( "SP", "Shooting Bullet into Gio", 0 );
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2595, 14989, vVar15 ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_BONE_COORDS( g_U2595, 14989, vVar18 ), 100, 1, g_U2857, 0 );
            }
        }
        break;
    }
    return 0;
}

void sub_3062(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_3140(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_3310( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_3792( iParam0->_fU40 );
    sub_3872( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_3310(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_3415( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_3415(unknown uParam0)
{
    return;
}

void sub_3792(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_3872(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_4247(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_3415( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_4579(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_5017(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_3062( (uParam0^)[I] );
    }
    return;
}

int sub_5236(int iParam0)
{
    iParam0 = 1;
    switch (l_U41)
    {
        case 0:
        if (NOT (sub_5297( ref l_U43 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_859() )))
            {
                l_U42 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_2028( ref l_U43, l_U42, 1, 1 );
            sub_2164( ref l_U43 );
        }
        if (sub_2364( ref l_U43 ))
        {
            sub_536( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_859() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_881() )))
            {
                SET_PLAYER_CONTROL( sub_881(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U41 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U41 = 2;
            }
            else
            {
                l_U41 = 3;
            }
        }
        break;
        case 2:
        sub_536( "NS", "Player will QUIT", 0 );
        sub_5756();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_536( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_5756();
        return 1;
        break;
    }
    return 0;
}

int sub_5297(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_5756()
{
    sub_536( "NS", "P_PostFailRetryCleanup", 0 );
    sub_5806( ref l_U43 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_881() )))
    {
        SET_PLAYER_CONTROL( sub_881(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U40 = 0;
    l_U40 = l_U40;
    l_U41 = 0;
    return;
}

void sub_5806(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_6279(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_6361(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_6609(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_6633( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_6633(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_6688( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_6688(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_6723( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_7217( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_6723(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_7217(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_7893(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_7986(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_8460()
{
    sub_536( "SP", "P_CLEANUP_ALL", 0 );
    ISEQ_UNREGISTER_ENTITY( 1748359782, "gio" );
    ISEQ_UNREGISTER_ENTITY( 1748359782, "enemy" );
    sub_8544( 1748359782, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( -1561076308, "gio" );
    ISEQ_TERMINATE( -1561076308 );
    sub_8544( -1561076308, ref g_U1272 );
    ISEQ_UNREGISTER_ENTITY( 1729910867, "gio" );
    ISEQ_TERMINATE( 1729910867 );
    sub_8544( 1729910867, ref g_U1272 );
    sub_5017( ref l_U562 );
    sub_3062( l_U595 );
    sub_9026( g_U685._fU0 );
    sub_9069();
    return;
}

void sub_8544(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_8656( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_8656(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_9026(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_9069()
{
    sub_536( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_536( "CCB", "Stopping the Bus_Depot_Garage_Wash context...", 0 );
    END_CONTEXT( "Bus_Depot_Garage_Wash" );
    return;
}

void sub_9343(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_536( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_9527( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_10604( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_10896( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_11243( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_10896( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_11243( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_10896( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_11243( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_4247( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_11243( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_4247( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_11243( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_11705( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_11866( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_859(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_536( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_9527(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_9559( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_9559(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_10604(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_10896(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_3415( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_11243(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

int sub_11705(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_11866(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_9559( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_11938( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_11938(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_13046()
{
    sub_536( "SP", "P_SETUP_PLAYER_RELATIONSHIPS", 0 );
    if ((IS_PED_DEAD( sub_859() )) == 0)
    {
        SET_PED_RELATIONSHIP( sub_859(), 0, 1 );
        SET_PED_RELATIONSHIP( sub_859(), 0, 2 );
        SET_PED_RELATIONSHIP( sub_859(), 0, 6 );
        SET_PED_RELATIONSHIP( sub_859(), 0, 7 );
    }
    return;
}

void sub_13254()
{
    unknown uVar2;
    unknown uVar3;

    switch (l_U144)
    {
        case 0: break;
        case 1:
        sub_536( "SP", "eCheckpointState = CP_INIT_SCRIPT_DATA", 0 );
        sub_13437();
        sub_13753();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U144 = 2;
        sub_536( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_536( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_16203( -1204387800, ref g_U910 );
        sub_16203( g_U2103, ref g_U910 );
        sub_16203( g_U759, ref g_U910 );
        sub_17586( g_U2854, ref g_U1211 );
        sub_17586( g_U2856, ref g_U1211 );
        sub_17586( g_U2855, ref g_U1211 );
        sub_17586( g_U2857, ref g_U1211 );
        sub_17586( g_U2859, ref g_U1211 );
        sub_18589( 1748359782, ref g_U1272 );
        sub_18589( -1561076308, ref g_U1272 );
        sub_18589( 1729910867, ref g_U1272 );
        sub_20547( ref g_U1992, ref g_U1369 );
        sub_20547( ref g_U2000, ref g_U1369 );
        l_U144 = 3;
        sub_536( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if (sub_21636( ref g_U910, ref g_U1211, ref g_U1272, ref g_U1369, ref g_U1474, ref g_U1535, ref g_U1704, ref g_U1757 ))
        {
            if ((l_U186 == 0) AND (g_U763 == 7))
            {
                l_U186 = 1;
                l_U144 = 4;
                sub_536( "SP", "eCheckpointState = CP_DEBUG_GIVE_PLAYER_WEAPON", 0 );
            }
            else
            {
                l_U144 = 6;
                sub_536( "SP", "eCheckpointState = CP_HANDLE_WAITING_FOR_GAMEPLAY_FLAG", 0 );
            }
        }
        break;
        case 4:
        if ((sub_22922( ref l_U150 )) == 0)
        {
            sub_4247( sub_859(), g_U2855, 200, 0, 0 );
        }
        l_U144 = 5;
        sub_536( "SP", "eCheckpointState = CP_DEBUG_WAIT_FOR_PLAYER_WEAPON", 0 );
        case 5:
        if ((IS_PED_DEAD( sub_859() )) == 0)
        {
            uVar2 = GET_WEAPON_FROM_HAND( sub_859(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
            {
                g_U2868 = 1;
                l_U144 = 6;
                sub_536( "SP", "eCheckpointState = CP_HANDLE_WAITING_FOR_GAMEPLAY_FLAG", 0 );
            }
        }
        break;
        case 6:
        if (g_U2868 == 1)
        {
            sub_23343();
            sub_24133();
            sub_24892();
            sub_25105();
            l_U144 = 7;
            sub_536( "SP", "eCheckpointState = CP_START_BUSWASH_FIGHT", 0 );
        }
        break;
        case 7:
        sub_536( "SP", "eCheckpointState = CP_START_BUSWASH_FIGHT", 0 );
        if ((ISEQ_QUERY_STATE( -1561076308, 3 )) == 1)
        {
            if (((IS_PED_DEAD( sub_859() )) == 0) AND ((IS_PLAYER_DEAD( sub_881() )) == 0))
            {
                SET_PLAYER_CONTROL( sub_881(), 1, 0 );
            }
            if (((CUTSCENE_NAMED_IS_LOADING( "vig_10b_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 0))
            {
                sub_536( "SP", "Prestreaming vig_10_bus_concat", 0 );
                PRE_STREAM_SEAMLESS_CUTSCENE( "vig_10b_bus_concat" );
            }
            if ((IS_PED_DEAD( sub_859() )) == 0)
            {
                SET_PED_NUM_CHARGERS_OVERRIDE( sub_859(), -1 );
            }
            FORCE_CUSTOM_WIPE_BULLET_CAMERA( 0 );
            sub_27335( 0, 1 );
            sub_27604( ref g_U2267, 0 );
            sub_27604( ref g_U2274, 0 );
            AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_1", "", 0.00000000, 3000, 5000, -1082130432, 0 );
            sub_27749();
            sub_2028( ref l_U683, 100, 1, 0 );
            sub_2164( ref l_U683 );
            sub_2028( ref l_U647, 100, 1, 0 );
            sub_2164( ref l_U647 );
            sub_2028( ref l_U656, 100, 1, 0 );
            sub_2164( ref l_U656 );
            l_U144 = 8;
            sub_536( "SP", "eCheckpointState = CP_HANDLE_BUSWASH_FIGHT", 0 );
        }
        break;
        case 8:
        if ((sub_2364( ref l_U683 )) == 1)
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || ((IS_SCREEN_FADING_OUT() == 1) || (IS_SCREEN_FADED_OUT() == 1)))
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
        sub_28086();
        if (l_U852 == 0)
        {
            if ((sub_29126( l_U376 )) == 1)
            {
                sub_29210( 1 );
                l_U852 = 1;
            }
        }
        else if ((sub_29126( l_U397 )) == 1)
        {
            sub_29210( 0 );
            l_U852 = 0;
        }
        if ((sub_29631( ref l_U208, 0 )) == 1)
        {
            if (l_U577 == 0)
            {
                PED_SET_ACTION_INTENTION( g_U2595, 39, -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() ) );
                sub_6279( ref l_U752 );
                sub_6361( 1, g_U2595, "GIOVANNA", ref l_U752, 2, 0 );
                sub_6361( 0, sub_859(), "MAX", ref l_U752, 2, 0 );
                sub_6609( "SBUS_RGGF", ref l_U752, 7, 1 );
                sub_2028( ref l_U634, GET_RANDOM_INT_IN_RANGE( l_U632, l_U633 ), 1, 0 );
                sub_2164( ref l_U634 );
            }
        }
        if ((sub_29631( ref l_U187, 0 )) == 1)
        {
            SET_CAM_VIEW_MODE( 1 );
            if ((l_U150._fU0 == 0) || (g_U764 < 7))
            {
                g_U764 = 7;
                sub_29996( ref l_U150, g_U764, sub_859(), g_U2339[7], g_U2466[7], g_U2509[7], g_U2552[7], 1 );
            }
            sub_15922( ref g_U2253, 1 );
        }
        if ((sub_2364( ref l_U634 )) == 1)
        {
            if (l_U577 == 0)
            {
                if (((IS_PED_DEAD( sub_859() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
                {
                    if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 38, -1, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() ) );
                        sub_6279( ref l_U742 );
                        sub_6361( 1, g_U2595, "GIOVANNA", ref l_U742, 2, 0 );
                        sub_6361( 0, sub_859(), "MAX", ref l_U742, 2, 0 );
                        sub_6609( "SBUS_RGGG", ref l_U742, 7, 1 );
                        l_U581 = 1;
                    }
                }
            }
        }
        if (l_U581 == 1)
        {
            if ((sub_28416( l_U742 )) == 0)
            {
                if (l_U577 == 0)
                {
                    sub_33876();
                    l_U581 = 0;
                }
            }
        }
        if ((sub_29126( l_U376 )) == 0)
        {
            if (l_U577 == 0)
            {
                if ((sub_34163() == 1) || (sub_34075() == 1))
                {
                    if (((IS_PED_DEAD( sub_859() )) == 0) AND ((IS_PLAYER_DEAD( sub_881() )) == 0))
                    {
                        SET_PED_FORCED_TO_WALK( sub_859(), 0 );
                        SET_CAM_VIEW_MODE( 1 );
                    }
                    sub_34347();
                    if (((IS_PED_DEAD( sub_859() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 47, -1, 0.00000000, 0.00000000, 0.00000000 );
                    }
                    AUDIO_MUSIC_FORCE_TRACK( "BUSDEPOT_ACTION_SONG_03", "BUSDEPOT_03_1_4", "", 0.00000000, 2000, 15000, -1082130432, 0 );
                    sub_2028( ref l_U647, 0, 1, 0 );
                    sub_2164( ref l_U647 );
                    sub_2028( ref l_U665, 60, 1, 0 );
                    sub_2164( ref l_U665 );
                    l_U577 = 1;
                }
            }
        }
        if (l_U577 == 0)
        {
            if ((sub_29631( ref l_U229, 0 )) == 1)
            {
                sub_34888();
                AUDIO_MUSIC_REQUEST_ONESHOT( "BUSDEPOT_ONESHOT_09", 0 );
                sub_2028( ref l_U692, 3250, 1, 0 );
                sub_2164( ref l_U692 );
            }
        }
        if (l_U577 == 0)
        {
            if (((sub_29631( ref l_U271, 0 )) == 1) || ((sub_29631( ref l_U250, 0 )) == 1))
            {
                sub_35758();
            }
        }
        if ((sub_2364( ref l_U692 )) == 1)
        {
            AUDIO_MUSIC_PLAY_ONESHOT();
        }
        if (l_U576 == 0)
        {
            if (((IS_PED_DEAD( sub_859() )) == 0) AND (((IS_PED_DEAD( l_U562[0] )) == 0) AND ((DOES_PED_EXIST( l_U562[0] )) == 1)))
            {
                if (((VDIST( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( l_U562[0] ) )) < 25.00000000) AND (l_U577 == 1))
                {
                    sub_6279( ref l_U772 );
                    sub_6361( 0, sub_859(), "MAX", ref l_U772, 2, 0 );
                    sub_6361( 1, g_U2595, "GIOVANNA", ref l_U772, 2, 0 );
                    sub_6361( 2, l_U562[0], "M10_CP_39_MUS", ref l_U772, 2, 0 );
                    sub_6609( "SBUS_RGCC", ref l_U772, 7, 1 );
                    l_U576 = 1;
                }
            }
        }
        if (l_U577 == 1)
        {
            if (l_U580 == 0)
            {
                if ((sub_29126( l_U355 )) == 0)
                {
                    l_U580 = 1;
                }
            }
            if ((sub_36277() == 0) AND (((sub_29126( l_U355 )) == 1) AND (l_U580 == 1)))
            {
                if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD( sub_859() )) == 0)))
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 1 )) < 3.00000000)
                    {
                        if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                        {
                            sub_6279( ref l_U782 );
                            sub_6361( 0, sub_859(), "MAX", ref l_U782, 2, 0 );
                            sub_6361( 1, g_U2595, "GIOVANNA", ref l_U782, 2, 0 );
                            sub_6609( "SBUS_GVRMG", ref l_U782, 7, 1 );
                            l_U580 = 0;
                        }
                    }
                }
            }
        }
        sub_36606();
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((sub_36898( ref l_U562 )) > 0)))
        {
            if ((sub_29631( ref l_U313, 0 )) == 1)
            {
                g_U2628 = 1;
                l_U148 = 4;
                l_U145 = 2;
                sub_536( "SP", "eFailState = FAIL_HANDLE_GIO_ABANDONDED_NIS", 0 );
                return;
            }
        }
        if (IS_ROBO_TESTING() == 1)
        {
            if ((sub_36898( ref l_U562 )) > 0)
            {
                if (sub_29126( l_U439 ))
                {
                    sub_37151( ref l_U562 );
                    sub_536( "MRB", "RoboTester is killing your Post Washroom Enemies", 0 );
                }
            }
        }
        if (l_U578 == 0)
        {
            if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((sub_36898( ref l_U562 )) == 1)))
            {
                uVar3 = sub_37382( ref l_U562 );
                if (((IS_PED_DEAD( uVar3 )) == 0) AND ((DOES_PED_EXIST( uVar3 )) == 1))
                {
                    FORCE_CUSTOM_WIPE_BULLET_CAMERA( 1 );
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                    l_U578 = 1;
                }
            }
        }
        if (l_U579 == 0)
        {
            if ((sub_36898( ref l_U562 )) == 0)
            {
                AUDIO_MUSIC_SUSPEND( 15000 );
                l_U579 = 1;
            }
        }
        if ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((sub_36898( ref l_U562 )) == 0)))
        {
            l_U146 = 1;
            l_U144 = 9;
            sub_536( "SP", "eCheckpointState = CP_HANDLE_GIO_GOTO_EXIT_CUTSCENE", 0 );
        }
        break;
        case 9:
        if (sub_37724() == 1)
        {
            sub_38996( ref g_U765[8] );
            l_U147 = 1;
            l_U144 = 10;
            sub_536( "SP", "eCheckpointState = CP_HANDLE_GIO_GOTO_EXIT_BLEND", 0 );
            break;
        }
        return;
        case 10:
        if (sub_39104() == 1)
        {
            FORCE_CUSTOM_WIPE_BULLET_CAMERA( 0 );
            sub_40528();
            sub_2028( ref l_U732, 4000, 1, 0 );
            sub_2164( ref l_U732 );
            sub_2028( ref l_U647, 4000, 1, 0 );
            sub_2164( ref l_U647 );
            sub_2028( ref l_U656, 4000, 1, 0 );
            sub_2164( ref l_U656 );
            sub_2028( ref l_U674, 15000, 1, 0 );
            sub_2164( ref l_U674 );
            l_U144 = 11;
            sub_536( "SP", "eCheckpointState = CP_HANDLE_READY_TO_EXIT_WASHBAY", 0 );
        }
        break;
        case 11:
        if ((l_U732._fU16 == 1) || ((sub_2364( ref l_U732 )) == 1))
        {
            sub_40822();
        }
        sub_42190();
        if ((sub_29144( sub_859(), l_U292 )) == 1)
        {
            if ((IS_PED_DEAD( sub_859() )) == 0)
            {
                if ((GET_IS_PED_FORCED_TO_WALK( sub_859() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_859(), 1 );
                }
            }
        }
        else if ((IS_PED_DEAD( sub_859() )) == 0)
        {
            if ((GET_IS_PED_FORCED_TO_WALK( sub_859() )) == 1)
            {
                SET_PED_FORCED_TO_WALK( sub_859(), 0 );
            }
        }
        if ((sub_29631( ref l_U418, 0 )) == 1)
        {
            if ((IS_PED_DEAD( sub_859() )) == 0)
            {
                SET_PLAYER_CONTROL( sub_881(), 1, 0 );
                SIMULATE_PLAYER_INPUT_GAIT( sub_881(), 2, 3000, 0 );
            }
            g_U2869 = 1;
            sub_16203( g_U2104, ref g_U910 );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U144 = 12;
            sub_536( "SP", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
        sub_536( "SP", "eCheckpointState = CP_FINISHED", 0 );
        break;
    }
    return;
}

void sub_13437()
{
    sub_536( "SP", "P_INIT_SCRIPT_VARIABLES", 0 );
    l_U576 = 0;
    l_U577 = 0;
    l_U578 = 0;
    l_U579 = 0;
    l_U580 = 0;
    l_U741 = 0;
    l_U852 = 0;
    l_U581 = 0;
    l_U569[0] = 1;
    l_U569[1] = 0;
    l_U569[2] = 0;
    l_U569[3] = 0;
    l_U569[4] = 0;
    l_U569[5] = 0;
    sub_5806( ref l_U647 );
    sub_5806( ref l_U656 );
    sub_5806( ref l_U665 );
    sub_5806( ref l_U634 );
    sub_5806( ref l_U674 );
    sub_5806( ref l_U683 );
    sub_5806( ref l_U692 );
    sub_5806( ref l_U596 );
    sub_5806( ref l_U605 );
    sub_5806( ref l_U614 );
    sub_5806( ref l_U623 );
    sub_5806( ref l_U705 );
    sub_5806( ref l_U714 );
    sub_5806( ref l_U723 );
    sub_5806( ref l_U732 );
    l_U146 = 0;
    l_U148 = 0;
    l_U147 = 0;
    l_U149 = 0;
    return;
}

void sub_13753()
{
    sub_536( "SP", "P_INIT_GAMEPLAY_STRUCTS", 0 );
    sub_13825( ref l_U464, l_U643, l_U646, -1257669444, 26, 6, 0, 0, 1 );
    sub_13825( ref l_U483[0], -65.58934000, 39.23922000, 0.00495100, 0.00000000, -1127547254, 7, 3, 2, 0, 0 );
    sub_13825( ref l_U483[1], -45.82837000, 34.94759000, 0.00495100, 86.98112000, 189167982, 7, 3, 2, 0, 0 );
    sub_13825( ref l_U483[2], -45.96658000, 37.19738000, 0.00495100, 110.37470000, 96891570, 7, 3, 2, 0, 0 );
    sub_13825( ref l_U483[3], -43.64118000, 34.88895000, 0.00495100, 353.96800000, 652797115, 7, 3, 2, 0, 0 );
    sub_13825( ref l_U483[4], -42.87599000, 37.18069000, 0.00495100, 163.68570000, 37216357, 7, 3, 2, 0, 0 );
    sub_13825( ref l_U483[5], -52.62874000, 39.42408000, 0.95301800, 81.32381000, 1109049697, 7, 3, 2, 0, 0 );
    sub_13825( ref l_U582, -51.25104000, 44.70924000, 0.00503200, 90.00000000, -1127547254, 26, 6, 0, 0, 1 );
    sub_14304( ref l_U187, "TRIG_WASH_CHECKPOINT", -39.16000000, 33.69000000, 5.00000000, 6.00000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U208, "TRIG_WASH_ENTER_DOOR", -38.16000000, 34.57000000, 5.00000000, 3.58000000, 5.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U229, "TRIG_WASH_START_PATROL", -39.16000000, 39.76000000, 4.22000000, 6.00000000, 6.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U250, "TRIG_WASH_COMBAT_01", -45.73000000, 47.48000000, 2.32000000, 8.00000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, -5.53999000, 1 );
    sub_14304( ref l_U271, "TRIG_WASH_COMBAT_02", -45.13000000, 40.76000000, -0.32000000, 6.00000000, 12.00000000, 6.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U313, "TRIG_WASH_GIO_ABANDONDED", -69.77000000, 46.87000000, 0.20000000, 3.58000000, 2.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U292, "TRIG_WB_FORCE_WALK", -69.07000000, 46.11000000, -0.20000000, 5.04000000, 7.58000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U334, "TRIG_WASH_REPOSITION_MAX", -60.62000000, 45.34000000, -0.70000000, 22.45000000, 8.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U355, "TRIG_WASH_ON_BALCONY", -39.13000000, 40.67000000, 4.54000000, 5.61000000, 17.73000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U376, "TRIG_FREEZE_WASH_PEDS", -57.36000000, 3.06000000, -0.47000000, 42.88000000, 56.66000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U397, "TRIG_RE_ADD_WASH_PEDS", -42.37000000, 30.25000000, 4.34000000, 4.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U418, "TRIG_START_OFFICE_GAMEPLAY", -69.83000000, 46.99000000, -0.20000000, 5.00000000, 5.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14304( ref l_U439, "ROBOTESTER is killing your enemies", -41.71000000, 2.00000000, -0.20000000, 2.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15438( ref l_U460, "TETHER_WASHBAY_1", -48.74000000, 39.44000000, 0.00000000, 9.52000000, 14.62000000, 4.48000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15438( ref l_U461, "TETHER_WASHBAY_2", -61.28000000, 38.74000000, 0.00000000, 20.43000000, 13.23000000, 4.48000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15438( ref l_U462, "TETHER_WASHBAY_3", -59.11000000, 46.23000000, 0.00000000, 16.00000000, 6.00000000, 4.48000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15438( ref l_U463, "TETH_WASH_BUS", -57.08000000, 39.45000000, 0.00000000, 14.00000000, 2.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15719( ref g_U2253, 1 );
    sub_15922( ref g_U2253, 0 );
    return;
}

void sub_13825(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_14304(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15438(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15719(int iParam0, int iParam1)
{
    if ((sub_15731( iParam0 )) == 0)
    {
        sub_15797( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_15731(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_15797(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_15922(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_15731( iParam0 )) == 0)
    {
        sub_15797( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_16203(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_16238( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_16369( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_16238(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_16369( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_16369( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_16369( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_17017( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_16369( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16369( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16369(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16389( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_16389(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_17017(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_17586(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17607( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_17739( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17607(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_17739( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_17739( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_17739( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_17017( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_17739( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_17739( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17739(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16389( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18589(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_18624( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_18776( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_18624(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_18776( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_18776( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_18776( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_18776( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_17017( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_17017( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_18776( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_18776( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18776(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16389( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20547(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_20568( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_20705( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_20568(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_20705( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_20705( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_20705( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_17017( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_20705( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_20705( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20705(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16389( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_21636(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    if (sub_21648( uParam0 ))
    {
        if (sub_21771( uParam1 ))
        {
            if (sub_21894( uParam2 ))
            {
                if (sub_22087( uParam3 ))
                {
                    if (sub_22216( uParam4 ))
                    {
                        if (sub_22339( uParam5 ))
                        {
                            if (sub_22468( uParam6 ))
                            {
                                if (sub_22597( uParam7 ))
                                {
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return 0;
}

int sub_21648(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21771(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21894(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_22087(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22216(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22339(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22468(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22597(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22922(unknown uParam0)
{
    sub_536( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_9343( uParam0, sub_859() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_23343()
{
    sub_536( "CO", "P_CREATE_S_BUS_GG_FN_03", 0 );
    sub_23456( ref g_U685, g_U759, -1543980095, 1718691485, -64.16000000, 38.49000000, 1.25000000, 1.50000000, 0.00000000, -15.00000000, "Room_Carwash" );
    sub_23585( ref g_U685 );
    return;
}

void sub_23456(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_536( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_23585(int iParam0)
{
    sub_536( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_23646( iParam0->_fU12 )) == 1)
        {
            sub_536( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_536( "CO", "has never been collected.", 0 );
        }
        if ((sub_23646( iParam0->_fU12 )) == 0)
        {
            sub_9026( iParam0->_fU0 );
            iParam0->_fU0 = sub_23881( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_536( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_536( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_23646(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_23881(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_24133()
{
    sub_536( "SP", "P_SETUP_GIOVANNA", 0 );
    if ((((IS_PED_DEAD( g_U2595 )) == 1) AND ((DOES_PED_EXIST( g_U2595 )) == 1)) || ((DOES_PED_EXIST( g_U2595 )) == 0))
    {
        sub_3062( g_U2595 );
        g_U2595 = sub_3140( ref l_U464 );
        sub_24246();
        sub_24660( g_U2595, 0 );
        SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1824 );
    }
    return;
}

void sub_24246()
{
    sub_536( "SP", "P_SETUP_GIO_ATTRIBUTES", 0 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_PED_NAME_DEBUG( g_U2595, "piGiovanna" );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
        SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U2595, 0 );
        SET_PED_ONLY_DAMAGED_BY_PLAYER( g_U2595, 1 );
        SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U2595, 1 );
        SET_PED_CAN_PUSH_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_PLAYER( g_U2595, 1 );
        SET_PED_GORE_FROM_NPC( g_U2595, 0 );
        SET_PED_CAN_BE_TARGETTED( g_U2595, 0 );
        SET_PED_AS_ONE_SHOT_KILL( g_U2595, 1 );
        SET_PED_CAN_TRIGGER_BULLET_CAM( g_U2595, 1 );
        SET_BULLET_CAM_PREF( g_U2595, "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", "QUICKCUT_FAILSAFE_01", 1, 0, 0, 0, 0, 0, 0, 0 );
        if ((IS_PED_DEAD( sub_859() )) == 0)
        {
            SET_PED_PRIMARY_LOOKAT( g_U2595, sub_859() );
            SET_PED_DEFAULT_AIM_AT_PED( g_U2595, sub_859() );
        }
    }
    return;
}

void sub_24660(unknown uParam0, boolean bParam1)
{
    sub_536( "SP", "P_SET_PED_INACTIVE", 0 );
    if (bParam1)
    {
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( uParam0, 1 );
            SET_PED_VISIBLE( uParam0, 0 );
            SET_PED_INVINCIBLE( uParam0, 1 );
            FREEZE_PED_POSITION( uParam0, 1 );
            SET_PED_COLLISION( uParam0, 0 );
        }
    }
    else if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_INVINCIBLE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
    }
    return;
}

void sub_24892()
{
    sub_536( "SP", "P_SETUP_GIO_AT_WASH_ENTRANCE", 0 );
    ISEQ_UNREGISTER_ENTITY( 1444858891, "gio" );
    sub_8544( 1444858891, ref g_U1272 );
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1824 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U2595, 1 );
        sub_4579( g_U2595, l_U643, l_U646 );
        ISEQ_REGISTER_ENTITY( -1561076308, "gio", g_U2595, 0 );
        ISEQ_START( -1561076308 );
    }
    return;
}

void sub_25105()
{
    int I;

    sub_536( "SP", "P_SETUP_BUS_WASH_ENEMIES", 0 );
    sub_25163( ref l_U477, 1056964608, 0 );
    for ( I = 0; I < l_U562; I++ )
    {
        sub_3062( l_U562[I] );
        l_U562[I] = sub_3140( ref l_U483[I] );
        sub_25400( l_U562[I], ref l_U477 );
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U562[I], ref g_U1824 );
            FREEZE_PED_POSITION( l_U562[I], 1 );
            SET_PED_ALERTNESS( l_U562[I], 2 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U562[I], 1 );
            SET_PED_AI_TEMPLATE( l_U562[I], ref g_U2088 );
            SET_PED_PATH_CAN_DROP_FROM_HEIGHT( l_U562[I], 0 );
            SET_PED_PATH_CAN_USE_CLIMBOVERS( l_U562[I], 0 );
            SET_PED_COMBAT_ATTRIBUTES( l_U562[I], 4096, 1 );
            SET_PED_COMBAT_ATTRIBUTES( l_U562[I], 512, 1 );
            if (I == 0)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 60.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 60.00000000 );
                sub_4247( l_U562[I], g_U2857, 25000, 0, 0 );
                sub_10896( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 1)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 25.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 25.00000000 );
                sub_26045( ref l_U460, l_U562[I], 1 );
                sub_26045( ref l_U461, l_U562[I], 1 );
                sub_26045( ref l_U462, l_U562[I], 1 );
                sub_4247( l_U562[I], g_U2856, 25000, 0, 0 );
                sub_10896( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 2)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 25.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 25.00000000 );
                sub_26045( ref l_U460, l_U562[I], 1 );
                sub_26045( ref l_U461, l_U562[I], 1 );
                sub_26045( ref l_U462, l_U562[I], 1 );
                sub_4247( l_U562[I], g_U2855, 25000, 0, 0 );
                sub_10896( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 3)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 0.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 0.00000000 );
                sub_26045( ref l_U460, l_U562[I], 1 );
                sub_26045( ref l_U461, l_U562[I], 1 );
                sub_26045( ref l_U462, l_U562[I], 1 );
                sub_4247( l_U562[I], g_U2854, 25000, 0, 0 );
                sub_10896( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 4)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 0.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 0.00000000 );
                sub_26045( ref l_U460, l_U562[I], 1 );
                sub_26045( ref l_U461, l_U562[I], 1 );
                sub_26045( ref l_U462, l_U562[I], 1 );
                sub_4247( l_U562[I], g_U2855, 25000, 0, 0 );
                sub_10896( l_U562[I], g_U2859, 5, 25000, 0 );
            }
            else if (I == 5)
            {
                SET_PED_SEEING_RANGE( l_U562[I], 0.00000000, 75 );
                SET_PED_HEARING_RANGE( l_U562[I], 0.00000000 );
                sub_26045( ref l_U463, l_U562[I], 1 );
                sub_4247( l_U562[I], g_U2856, 25000, 0, 0 );
                sub_10896( l_U562[I], g_U2859, 5, 25000, 0 );
            };;;;;;
        }
    }
    sub_26864( ref l_U562, "piBusWashEnemies" );
    return;
}

void sub_25163(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_25400(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_3415( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_25163( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_25163( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_26045(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_26864(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_27335(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_859() )))
    {
        SET_PLAYER_CONTROL( sub_881(), 1, 0 );
        SET_PED_INVINCIBLE( sub_859(), 0 );
        if (bParam0)
        {
            sub_27416();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_27416()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_859() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_859(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_859(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_859(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_859(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_27604(int iParam0, unknown uParam1)
{
    if ((sub_15731( iParam0 )) == 0)
    {
        sub_15797( iParam0 );
    }
    DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( iParam0->_fU0, iParam0->_fU4 ), uParam1 );
    return;
}

void sub_27749()
{
    sub_536( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_536( "CCB", "Starting the Bus_Depot_Garage_Wash context...", 0 );
    START_CONTEXT( "Bus_Depot_Garage_Wash" );
    return;
}

void sub_28086()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;

    if (((IS_PLAYER_DEAD( sub_881() )) == 0) AND (((IS_PED_DEAD( sub_859() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))))
    {
        if ((ISEQ_IS_LOADED( -1561076308 )) == 1)
        {
            if ((ISEQ_QUERY_STATE( -1561076308, 3 )) == 1)
            {
                if ((l_U647._fU16 == 1) || ((sub_2364( ref l_U647 )) == 1))
                {
                    uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 3.50000000, ref uVar2 )};
                    fVar6 = VDIST( uVar3, 0.00000000, 0.00000000, 0.00000000 );
                    if (fVar6 > 0.00000000)
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 48, 500, uVar3 );
                        sub_28314();
                        sub_2028( ref l_U647, 2500, 1, 0 );
                        sub_2164( ref l_U647 );
                    }
                }
                if (((l_U647._fU16 == 1) || ((sub_2364( ref l_U647 )) == 1)) AND ((l_U656._fU16 == 1) || ((sub_2364( ref l_U656 )) == 1)))
                {
                    if (((CAN_PED_SEE_OTHER_PED( g_U2595, sub_859(), 100.00000000, 20.00000000 )) == 1) AND (((IS_PLAYER_FREE_AIMING_AT_PED( sub_881(), g_U2595 )) == 1) AND ((IS_PLAYER_GUN_RAISED( sub_881() )) == 1)))
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 49, 500, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() ) );
                        sub_28857();
                        sub_2028( ref l_U656, 6000, 1, 0 );
                        sub_2164( ref l_U656 );
                    }
                }
            }
        }
    }
    return;
}

void sub_28314()
{
    sub_536( "SP", "P_DIAL_MAX_SHOOT_AT_GIO", 0 );
    if (((IS_PED_DEAD( sub_859() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if (((sub_28416( l_U812 )) == 0) AND ((sub_28416( l_U762 )) == 0))
        {
            sub_6279( ref l_U762 );
            sub_6361( 0, sub_859(), "MAX", ref l_U762, 2, 0 );
            sub_6361( 1, g_U2595, "GIOVANNA", ref l_U762, 2, 0 );
            sub_6609( "SBUS_GVPHAT", ref l_U762, 7, 1 );
        }
    }
    return;
}

int sub_28416(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_28429( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_28429(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_28857()
{
    sub_536( "SP", "P_DIAL_MAX_AIM_AT_GIO", 0 );
    if (((IS_PED_DEAD( sub_859() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
    {
        if (((sub_28416( l_U812 )) == 0) AND ((sub_28416( l_U762 )) == 0))
        {
            sub_6279( ref l_U812 );
            sub_6361( 0, sub_859(), "MAX", ref l_U812, 2, 0 );
            sub_6361( 1, g_U2595, "GIOVANNA", ref l_U812, 2, 0 );
            sub_6609( "SBUS_GVPATH", ref l_U812, 8, 1 );
        }
    }
    return;
}

void sub_29126(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_29144( sub_859(), uParam0 );
}

int sub_29144(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_29210(int iParam0)
{
    int I;

    if (iParam0 == 1)
    {
        sub_536( "SP", "P_TOGGLE_FREEZE_WASH_PEDS - FREEZING", 0 );
    }
    else
    {
        sub_536( "SP", "P_TOGGLE_FREEZE_WASH_PEDS - UNFREEZING AND SETTING TO ROOM", 0 );
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        FREEZE_PED_POSITION( g_U2595, iParam0 );
        SET_PED_FREEZE_PROCESSING( g_U2595, iParam0 );
        if (iParam0 == 0)
        {
            SET_ROOM_FOR_PED_BY_NAME( g_U2595, ref g_U1824 );
        }
    }
    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U562[I], iParam0 );
            SET_PED_FREEZE_PROCESSING( l_U562[I], iParam0 );
            if (iParam0 == 0)
            {
                SET_ROOM_FOR_PED_BY_NAME( l_U562[I], ref g_U1824 );
            }
        }
    }
    return;
}

void sub_29631(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_29144( sub_859(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_29996(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_536( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_536( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_11866( iParam1 );
        sub_30255( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_30706( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_30706( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_30706( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_30706( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_30706( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_30938( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_32496( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_536( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_30255(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_9559( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_536( "TEH", "Ending context", 0 );
        sub_536( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_30706(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_30938(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_32496(int iParam0)
{
    sub_3415( "CHECKPOINT DATA" );
    sub_32535( iParam0->_fU4 );
    sub_32558( iParam0->_fU16 );
    sub_32558( iParam0->_fU20 );
    sub_32558( iParam0->_fU24 );
    sub_32601( iParam0->_fU28 );
    sub_32601( iParam0->_fU56 );
    sub_32601( iParam0->_fU60 );
    sub_32601( iParam0->_fU64 );
    sub_32601( iParam0->_fU68 );
    sub_32601( iParam0->_fU72 );
    sub_32601( iParam0->_fU76 );
    sub_32601( iParam0->_fU80 );
    sub_32601( iParam0->_fU84 );
    sub_32601( iParam0->_fU88 );
    sub_32601( iParam0->_fU92 );
    sub_32558( iParam0->_fU32 );
    sub_32601( iParam0->_fU36 );
    sub_32601( iParam0->_fU40 );
    sub_32601( iParam0->_fU44 );
    sub_32558( iParam0->_fU136 );
    sub_32806( iParam0->_fU140 );
    sub_32601( iParam0->_fU52 );
    sub_3415( "---nRightHolsterAttachmentEnabled: " );
    sub_32601( iParam0->_fU96 );
    sub_3415( "---nRightHolsterAttachmentToggled: " );
    sub_32601( iParam0->_fU100 );
    sub_3415( "---nLeftHolsterAttachmentEnabled: " );
    sub_32601( iParam0->_fU104 );
    sub_3415( "---nLeftHolsterAttachmentToggled: " );
    sub_32601( iParam0->_fU108 );
    sub_3415( "---nRifleHolsterAttachmentEnabled: " );
    sub_32601( iParam0->_fU112 );
    sub_3415( "---nRifleHolsterAttachmentToggled: " );
    sub_32601( iParam0->_fU116 );
    sub_3415( "---nRightHandAttachmentEnabled: " );
    sub_32601( iParam0->_fU120 );
    sub_3415( "---nRightHandAttachmentToggled: " );
    sub_32601( iParam0->_fU124 );
    sub_3415( "---nLeftHandAttachmentEnabled: " );
    sub_32601( iParam0->_fU128 );
    sub_3415( "---nLeftHandAttachmentToggled: " );
    sub_32601( iParam0->_fU132 );
    sub_32601( l_U1 );
    sub_32601( 144 );
    return;
}

void sub_32535(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_32558(unknown uParam0)
{
    return;
}

void sub_32601(unknown uParam0)
{
    return;
}

void sub_32806(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_33876()
{
    sub_536( "kja", "Washbay Enemy dialogue", 0 );
    sub_6279( ref l_U842 );
    sub_6361( 1, l_U562[1], "M10_CP_67_AVG", ref l_U842, 2, 0 );
    sub_6361( 2, l_U562[2], "M10_CP_68_AVG", ref l_U842, 2, 0 );
    sub_6609( "SBUS_BDWSBAY", ref l_U842, 7, 1 );
    return;
}

int sub_34075()
{
    int iVar2;

    if ((IS_PED_DEAD( sub_859() )) == 0)
    {
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() ), 2.00000000, 1, ref iVar2 ))
        {
            if (iVar2 == sub_859())
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_34163()
{
    int I;

    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            if ((GET_PED_AWARENESS_STATE( l_U562[I], sub_859(), 15 )) == 1)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_34347()
{
    int I;

    sub_536( "SP", "P_START_BUS_WASH_ENEMIES_ATTACK", 0 );
    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U562[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U562[I], 0 );
            SET_PED_SEEING_RANGE( l_U562[I], 60.00000000, 75 );
            SET_PED_HEARING_RANGE( l_U562[I], 60.00000000 );
            REGISTER_TARGET( l_U562[I], sub_859() );
            if (I == 0)
            {
                ;
            }
            else if (I == 1)
            {
                ;
            }
            else if (I == 2)
            {
                ;
            }
            else if (I == 3)
            {
                ;
            }
            else if (I == 4)
            {
                ;
            }
            else if (I == 5)
            {
                ;
            };;;;;;
        }
    }
    return;
}

void sub_34888()
{
    int I;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    sub_536( "SP", "P_START_BUS_WASH_ENEMIES_PATROL", 0 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_E9181B8C_Corner1", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_E9181B8C_Corner2", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_3652B600_Corner2", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_3652B600_Corner1", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "6FCDCC24_1A2C489E_Corner2", 1 );
    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            FREEZE_PED_POSITION( l_U562[I], 0 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U562[I], 0 );
            if (I == 0)
            {
                OPEN_SEQUENCE_TASK( ref uVar3 );
                TASK_STAND_STILL( 0, 250 );
                TASK_SEARCH_FOR_PED_AT_COVER_POINT( 0, "GenCover", "6FCDCC24_B5257E96_Corner2", 1 );
                TASK_SEARCH_FOR_UNSEEN_ENEMY( 0, 1 );
                CLOSE_SEQUENCE_TASK( uVar3 );
                TASK_PERFORM_SEQUENCE( l_U562[I], uVar3 );
                CLEAR_SEQUENCE_TASK( uVar3 );
            }
            else if (I == 1)
            {
                OPEN_SEQUENCE_TASK( ref uVar4 );
                TASK_FOLLOW_NAV_MESH_TO_COORD( 0, -65.66103000, 35.06416000, 0.00495100, 2, -1, 1048576000, 0, 0 );
                TASK_SEARCH_FOR_UNSEEN_ENEMY( 0, 1 );
                CLOSE_SEQUENCE_TASK( uVar4 );
                TASK_PERFORM_SEQUENCE( l_U562[I], uVar4 );
                CLEAR_SEQUENCE_TASK( uVar4 );
            }
            else if (I == 2)
            {
                OPEN_SEQUENCE_TASK( ref uVar5 );
                TASK_STAND_STILL( 0, 1000 );
                TASK_SMART_FOLLOW_PED( 0, l_U562[1], 0.00000000, -1.50000000, 0.00000000, 2, -1, 1056964608, 1, 1 );
                CLOSE_SEQUENCE_TASK( uVar5 );
                TASK_PERFORM_SEQUENCE( l_U562[I], uVar5 );
                CLEAR_SEQUENCE_TASK( uVar5 );
            }
            else if (I == 3)
            {
                ;
            }
            else if (I == 4)
            {
                ;
            }
            else if (I == 5)
            {
                ;
            };;;;;;
        }
    }
    return;
}

void sub_35758()
{
    int I;

    sub_536( "SP", "P_RESTORE_WASH_ENEMIES_SENSE_RANGES", 0 );
    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            SET_PED_SEEING_RANGE( l_U562[I], 60.00000000, 75 );
            SET_PED_HEARING_RANGE( l_U562[I], 60.00000000 );
        }
    }
    return;
}

int sub_36277()
{
    int I;

    for ( I = 0; I < l_U562; I++ )
    {
        if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
        {
            if ((sub_29144( l_U562[I], l_U355 )) == 1)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_36606()
{
    int I;

    for ( I = 1; I <= (l_U562 - 1); I++ )
    {
        if (l_U569[I] == 0)
        {
            if (((IS_PED_DEAD( l_U562[I - 1] )) == 1) AND ((DOES_PED_EXIST( l_U562[I - 1] )) == 1))
            {
                if (((IS_PED_DEAD( l_U562[I] )) == 0) AND ((DOES_PED_EXIST( l_U562[I] )) == 1))
                {
                    sub_36751( ref l_U460, l_U562[I] );
                    sub_36751( ref l_U461, l_U562[I] );
                    sub_36751( ref l_U462, l_U562[I] );
                    sub_36751( ref l_U463, l_U562[I] );
                }
                l_U569[I] = 1;
            }
        }
    }
    return;
}

void sub_36751(int iParam0, unknown uParam1)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_REMOVE_BOX( uParam1, iParam0->_fU0 );
    }
    return;
}

void sub_36898(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_37151(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_37182( (uParam0^)[I] );
    }
    return;
}

void sub_37182(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_37382(unknown uParam0)
{
    int I;

    if ((sub_36898( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

int sub_37724()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    switch (l_U146)
    {
        case 0: break;
        case 1:
        sub_536( "SP", "eGioGotoExitCutsceneState = CUTSCENE_REQUEST_ASSETS", 0 );
        if (((CUTSCENE_NAMED_IS_LOADING( "vig_10b_bus_concat" )) == 0) AND ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 0))
        {
            sub_536( "SP", "Prestreaming vig_10_bus_concat #2", 0 );
            PRE_STREAM_SEAMLESS_CUTSCENE( "vig_10b_bus_concat" );
        }
        l_U146 = 2;
        sub_536( "SP", "eGioGotoExitCutsceneState = CUTSCENE_LOAD_ASSETS", 0 );
        case 2:
        if ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 1)
        {
            l_U146 = 3;
            sub_536( "SP", "eGioGotoExitCutsceneState = CUTSCENE_START", 0 );
            break;
        }
        return 0;
        case 3:
        sub_536( "SP", "eGioGotoExitCutsceneState = CUTSCENE_START", 0 );
        if (((IS_PED_DEAD( sub_859() )) == 0) AND ((IS_PLAYER_DEAD( sub_881() )) == 0))
        {
            ;
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            PED_SET_ACTION_INTENTION( g_U2595, 56, -1, 0.00000000, 0.00000000, 0.00000000 );
        }
        if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
        {
            CUTSCENE_REGISTER_PED_TELEPORT( g_U2595, l_U701, l_U704 );
            REGISTER_PED_PRE_SEAMLESS_CUTSCENE( g_U2595, "Giov_Bus", 0 );
        }
        ISEQ_REGISTER_ENTITY( 1729910867, "gio", g_U2595, 0 );
        CUTSCENE_REGISTER_ISEQ( 1729910867 );
        START_SEAMLESS_CUTSCENE();
        l_U146 = 4;
        sub_536( "SP", "eGioGotoExitCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        break;
        case 4:
        sub_536( "SP", "eGioGotoExitCutsceneState = CUTSCENE_FIRST_FRAME", 0 );
        if (((IS_PED_DEAD( sub_859() )) == 0) AND ((IS_PLAYER_DEAD( sub_881() )) == 0))
        {
            SET_PED_VISIBLE( sub_859(), 0 );
        }
        if ((IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0))
        {
            START_PANEL_WIPE( 300, 6 );
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        DO_SCREEN_FADE_IN( 0 );
        l_U146 = 5;
        sub_536( "SP", "eGioGotoExitCutsceneState = CUTSCENE_PLAYING", 0 );
        break;
        case 5:
        if (HAS_CUTSCENE_FINISHED() == 1)
        {
            if (((CUTSCENE_NAMED_IS_LOADING( "vig_10b_bus_concat" )) == 1) AND ((CUTSCENE_IS_LOADED( "vig_10b_bus_concat" )) == 1))
            {
                CLEAR_NAMED_CUTSCENE( "vig_10b_bus_concat" );
            }
            l_U146 = 0;
            sub_536( "SP", "eGioGotoExitCutsceneState = CUTSCENE_IDLE", 0 );
            return 1;
        }
        else
        {
            uVar2 = GET_CUTSCENE_SECTION_PLAYING();
            uVar3 = GET_CUTSCENE_TIME();
            uVar4 = GET_CUTSCENE_TIME_MS();
        }
        break;
    }
    return 0;
}

void sub_38996(int iParam0)
{
    iParam0->_fU36 = 1;
    return;
}

int sub_39104()
{
    vector vVar2;
    float fVar5;

    vVar2 = {-57.20000000, 45.12000000, 1.70000000};
    fVar5 = 180.00000000;
    switch (l_U147)
    {
        case 0:
        sub_536( "SP", "eGioToWashBayExitNISState = NIS_IDLE", 0 );
        break;
        case 1:
        sub_536( "SP", "eGioToWashBayExitNISState = NIS_SETUP", 0 );
        sub_1860( 1, 0, 0, 1 );
        ISEQ_UNREGISTER_ENTITY( 1748359782, "gio" );
        ISEQ_UNREGISTER_ENTITY( 1748359782, "enemy" );
        sub_8544( 1748359782, ref g_U1272 );
        ISEQ_UNREGISTER_ENTITY( -1561076308, "gio" );
        ISEQ_TERMINATE( -1561076308 );
        sub_8544( -1561076308, ref g_U1272 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_BUS_CP_04", "VIG_10B_BUS_WALK_TO_COVER_CAM", 1, vVar2, fVar5, 0, 0 );
        sub_39462();
        sub_2028( ref l_U705, 500, 1, 0 );
        sub_2164( ref l_U705 );
        sub_2028( ref l_U714, 4000, 1, 0 );
        sub_2164( ref l_U714 );
        l_U147 = 6;
        sub_536( "SP", "eGioToWashBayExitNISState = NIS_FIRST_FRAME", 0 );
        break;
        case 6:
        sub_2028( ref l_U723, 30, 1, 0 );
        sub_2164( ref l_U723 );
        l_U147 = 7;
        sub_536( "SP", "eGioToWashBayExitNISState = NIS_PLAYING", 0 );
        break;
        case 7:
        if ((sub_2364( ref l_U723 )) == 1)
        {
            if (((IS_PED_DEAD( sub_859() )) == 0) AND ((IS_PLAYER_DEAD( sub_881() )) == 0))
            {
                SET_PED_VISIBLE( sub_859(), 0 );
            }
        }
        if ((sub_2364( ref l_U705 )) == 1)
        {
            sub_6279( ref l_U792 );
            sub_6361( 0, sub_859(), "MAX", ref l_U792, 2, 0 );
            sub_6361( 1, g_U2595, "GIOVANNA", ref l_U792, 2, 0 );
            sub_6609( "SBUS_GVDBC", ref l_U792, 7, 1 );
        }
        if ((sub_2364( ref l_U714 )) == 1)
        {
            sub_6279( ref l_U822 );
            sub_6361( 0, sub_859(), "MAX", ref l_U822, 2, 0 );
            sub_6361( 1, sub_859(), "MAX", ref l_U822, 2, 0 );
            sub_6609( "SBUS_WBAERDA", ref l_U822, 7, 1 );
        }
        if (l_U741 == 0)
        {
            if ((CAMERA_ANIMATED_CURRENT_TIME() + 30) > (CAMERA_ANIMATED_LENGTH( "LEVEL_S_BUS_CP_04", "VIG_10B_BUS_WALK_TO_COVER_CAM" )))
            {
                if (((IS_PED_DEAD( sub_859() )) == 0) AND ((IS_PLAYER_DEAD( sub_881() )) == 0))
                {
                    SET_PED_VISIBLE( sub_859(), 1 );
                }
                l_U741 = 1;
            }
        }
        if (IS_ANIMATED_CAMERA_PLAYING() == 0)
        {
            SET_CAM_VIEW_MODE( 1 );
            sub_27335( 1, 1 );
            l_U147 = 0;
            sub_536( "SP", "eGioToWashBayExitNISState = NIS_IDLE", 0 );
            return 1;
        }
        break;
    }
    return 0;
}

void sub_39462()
{
    vector vVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    vector vVar10;
    float fVar13;

    sub_536( "SP", "P_REPOSITION_PLAYER_IN_WASHBAY", 0 );
    vVar2 = {-67.12000000, 44.99000000, 2.16000000};
    if (((IS_PED_DEAD( sub_859() )) == 0) AND ((IS_PLAYER_DEAD( sub_881() )) == 0))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() )};
        iVar9 = GET_GROUND_Z_FOR_3D_COORD( uVar5, ref uVar8 );
        if (iVar9 == 1)
        {
            uVar5._fU8 = uVar8;
        }
        else
        {
            uVar5._fU8 -= 1.00000000;
        }
        sub_4579( sub_859(), uVar5, 0.00000000 );
    }
    if ((sub_29126( l_U334 )) == 1)
    {
        vVar10 = {-59.72548000, 43.74585000, 0.00500400};
        fVar13 = 84.52828000;
        sub_4579( sub_859(), vVar10, fVar13 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 5.36160900, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -6.45476500, 1065353216, 0 );
    }
    else if (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1))
    {
        CAMERA_SNAP_POINT_AT_COORD( vVar2 );
    }
    return;
}

void sub_40528()
{
    sub_536( "SP", "P_RESET_CONTEXTUAL_DIALOGUE", 0 );
    l_U140 = 0;
    l_U141 = 0;
    l_U86 = 0;
    l_U142 = 0;
    sub_5806( ref l_U68 );
    sub_5806( ref l_U77 );
    return;
}

void sub_40822()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;
    float fVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (l_U140 == 0)
    {
        sub_2028( ref l_U68, 6000, 1, 0 );
        sub_2164( ref l_U68 );
        l_U140 = 1;
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD( sub_859() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            if ((l_U68._fU16 == 1) || ((sub_2364( ref l_U68 )) == 1))
            {
                if ((IS_PLAYER_SHOOTDODGING() == 1) AND ((CAN_PED_SEE_OTHER_PED( g_U2595, sub_859(), 110.00000000, 15.00000000 )) == 1))
                {
                    sub_6279( ref l_U87 );
                    sub_6361( 0, sub_859(), "MAX", ref l_U87, 2, 0 );
                    sub_6361( 1, g_U2595, "GIOVANNA", ref l_U87, 2, 0 );
                    sub_6609( "SBUS_GVPMAR", ref l_U87, 7, 1 );
                    sub_2028( ref l_U68, 6000, 1, 0 );
                    sub_2164( ref l_U68 );
                }
                if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )) == 1)
                {
                    if (iVar2 == sub_859())
                    {
                        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 30.00000000, ref iVar2 )};
                        fVar6 = VDIST( uVar3, 0.00000000, 0.00000000, 0.00000000 );
                        if (fVar6 > 0.00000000)
                        {
                            fVar7 = VDIST( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ) );
                            if (fVar7 > 8.00000000)
                            {
                                sub_6279( ref l_U97 );
                                sub_6361( 0, sub_859(), "MAX", ref l_U97, 2, 0 );
                                sub_6361( 1, g_U2595, "GIOVANNA", ref l_U97, 2, 0 );
                                sub_6609( "SBUS_GVPSC", ref l_U97, 7, 1 );
                                sub_2028( ref l_U68, 6000, 1, 0 );
                                sub_2164( ref l_U68 );
                            }
                        }
                    }
                }
            }
        }
    }
    if (((IS_PED_DEAD( g_U2595 )) == 0) AND (((DOES_PED_EXIST( g_U2595 )) == 1) AND ((IS_PED_DEAD( sub_859() )) == 0)))
    {
        if (((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)))
        {
            uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() )};
            if ((VDIST( uVar8, l_U137 )) > 0.10000000)
            {
                sub_5806( ref l_U77 );
            }
            else if ((l_U77._fU16 == 0) AND (l_U77._fU20 == 0))
            {
                sub_2028( ref l_U77, 35000, 1, 0 );
                sub_2164( ref l_U77 );
            }
            if ((l_U77._fU16 == 1) || ((sub_2364( ref l_U77 )) == 1))
            {
                if (l_U86 < 6)
                {
                    if ((l_U143 == 0) AND (g_U764 == 6))
                    {
                        sub_6279( ref l_U117 );
                        sub_6361( 0, sub_859(), "MAX", ref l_U117, 2, 0 );
                        sub_6361( 1, sub_859(), "MAX", ref l_U117, 2, 0 );
                        sub_6609( "SBUS_MJDBPBB", ref l_U117, 7, 1 );
                        l_U143 = 1;
                    }
                    else
                    {
                        sub_6279( ref l_U107 );
                        sub_6361( 0, sub_859(), "MAX", ref l_U107, 2, 0 );
                        sub_6361( 1, g_U2595, "GIOVANNA", ref l_U107, 2, 0 );
                        sub_6609( "SBUS_GVPSD", ref l_U107, 7, 1 );
                    }
                    sub_2028( ref l_U77, 35000, 1, 0 );
                    sub_2164( ref l_U77 );
                    l_U86++;
                }
            }
            l_U137 = {uVar8};
        }
    }
    if (l_U141 == 0)
    {
        l_U142 = GET_PAYNEKILLER_AMT();
        l_U141 = 1;
    }
    if (l_U142 < GET_PAYNEKILLER_AMT())
    {
        if ((sub_41983() == 0) AND ((TIME_SINCE_LAST_MONOLOGUE() > 5000) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_LAST_MAN_STANDING_ACTIVE() == 0) AND (((IS_BULLET_CAMERA_RUNNING( 0 )) == 0) AND ((IS_PED_DEAD( sub_859() )) == 0))))))
        {
            sub_536( "SP", "Playing Pills Monologue", 0 );
            sub_6279( ref l_U127 );
            sub_6361( 0, sub_859(), "MAX", ref l_U127, 2, 0 );
            sub_6361( 1, sub_859(), "MAX", ref l_U127, 2, 0 );
            sub_6609( "SBUS_MFSFPLS", ref l_U127, 7, 1 );
        }
    }
    l_U142 = GET_PAYNEKILLER_AMT();
    return;
}

void sub_41983()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

void sub_42190()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    float fVar6;

    if ((ISEQ_IS_LOADED( 1729910867 )) == 1)
    {
        if ((ISEQ_QUERY_STATE( 1729910867, 3 )) == 1)
        {
            if (((IS_PED_DEAD( sub_859() )) == 0) AND (((IS_PED_DEAD( g_U2595 )) == 0) AND ((DOES_PED_EXIST( g_U2595 )) == 1)))
            {
                if ((l_U647._fU16 == 1) || ((sub_2364( ref l_U647 )) == 1))
                {
                    if ((HAS_BULLET_IMPACTED_IN_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 4.00000000, ref uVar2 )) == 1)
                    {
                        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_BULLET_IMPACT_AREA( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 4.00000000, ref uVar2 )};
                        fVar6 = VDIST( uVar3, 0.00000000, 0.00000000, 0.00000000 );
                        if (fVar6 > 0.00000000)
                        {
                            PED_SET_ACTION_INTENTION( g_U2595, 48, 500, uVar3 );
                            sub_28314();
                            sub_2028( ref l_U647, 2500, 1, 0 );
                            sub_2164( ref l_U647 );
                        }
                    }
                }
                if (((l_U647._fU16 == 1) || ((sub_2364( ref l_U647 )) == 1)) AND ((l_U656._fU16 == 1) || ((sub_2364( ref l_U656 )) == 1)))
                {
                    if (((CAN_PED_SEE_OTHER_PED( g_U2595, sub_859(), 100.00000000, 20.00000000 )) == 1) AND (((IS_PLAYER_FREE_AIMING_AT_PED( sub_881(), g_U2595 )) == 1) AND ((IS_PLAYER_GUN_RAISED( sub_881() )) == 1)))
                    {
                        PED_SET_ACTION_INTENTION( g_U2595, 49, 500, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() ) );
                        sub_28857();
                        sub_2028( ref l_U656, 6000, 1, 0 );
                        sub_2164( ref l_U656 );
                    }
                }
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_859() ), "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U2595 ), 1 )) > 6.00000000)
                    {
                        if ((l_U674._fU16 == 1) || ((sub_2364( ref l_U674 )) == 1))
                        {
                            if ((IS_ANY_SPEECH_PLAYING( g_U2595 )) == 0)
                            {
                                PED_SET_ACTION_INTENTION( g_U2595, 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
                                sub_6279( ref l_U802 );
                                sub_6361( 0, sub_859(), "MAX", ref l_U802, 2, 0 );
                                sub_6361( 1, g_U2595, "GIOVANNA", ref l_U802, 2, 0 );
                                sub_6609( "SBUS_GVWMEW", ref l_U802, 7, 1 );
                                sub_2028( ref l_U674, 25000, 1, 0 );
                                sub_2164( ref l_U674 );
                            }
                        }
                    }
                }
            }
        }
    }
    return;
}

void sub_43252()
{
    sub_536( "SP", "P_UNLOAD_ASSETS", 0 );
    sub_43300( g_U2103, ref g_U910 );
    sub_43300( g_U2103, ref g_U910 );
    sub_43300( g_U759, ref g_U910 );
    sub_43552( ref g_U1992, ref g_U1369 );
    sub_43552( ref g_U2000, ref g_U1369 );
    return;
}

void sub_43300(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_8656( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_43552(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_8656( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


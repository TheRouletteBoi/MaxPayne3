void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U229 = 0;
    l_U230 = 1;
    l_U231 = 0;
    l_U232 = 1.00000000;
    l_U233 = -5.00000000;
    l_U234 = 0;
    l_U235 = 0;
    l_U236 = 0;
    l_U240 = 42;
    l_U241 = 0;
    l_U242 = 0;
    l_U243 = 0;
    l_U244 = 0;
    l_U245 = 0;
    l_U246 = 90.00000000;
    l_U247 = {0.00000000, 0.00000000, 0.00000000};
    l_U250 = {0.00000000, 0.00000000, 0.00000000};
    l_U253 = 0;
    l_U254 = 0;
    l_U255 = 0;
    l_U256 = 0;
    l_U257 = 0;
    l_U258 = 0;
    l_U259 = nil;
    l_U260 = {0.00000000, 0.00000000, 0.00000000};
    l_U263 = 0;
    l_U264 = 0;
    l_U265 = 0;
    l_U429 = 0;
    l_U430 = 0;
    l_U431 = 0;
    l_U432 = 0;
    l_U433 = 0;
    l_U434 = 0;
    l_U435 = {0, 0, 0};
    l_U438 = {0, 0, 0};
    l_U441 = 1.00000000;
    l_U442 = 0.00000000;
    l_U443 = -1;
    l_U445 = 0;
    l_U446 = 0;
    l_U447 = 1500;
    l_U457 = 0;
    l_U458 = 0;
    StrCopy( ref l_U705, "LEVEL_S_OFFICE_CORPSE", 32 );
    l_U723 = 0;
    l_U724 = 1;
     /* WRITESCRIPTLOG */ sub_469( "SA", "Script s_fire_Fire_Hall.sc is starting...", 0 );
    l_U457 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
         /* P_HANDLE_FAILURE */ sub_606();
        if (l_U458 == 0)
        {
             /* P_HANDLE_EVENTS */ sub_10010();
        }
        WAIT( 0 );
    }
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_fire_Fire_Hall" );
     /* WRITESCRIPTLOG */ sub_469( "SA", "Script s_fire_Fire_Hall.sc is terminating...", 0 );
    return;
}

/* WRITESCRIPTLOG */ void sub_469(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    DISPLAYF( "[{0}][{1}]{3} {2} {3}", 4, 513, uVar5, 1537, uParam0, 1537, uParam1, 1537, sParam2 );
    return;
}

/* P_HANDLE_FAILURE */ void sub_606()
{
    if (g_U665 == 3)
    {
        switch (l_U458)
        {
            case 0:
            if ( /* RESTARTING_CHECKPOINT */ sub_707())
            {
                l_U458 = 3;
            }
            if ((IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )) == 1)
            {
                l_U458 = 1;
                 /* WRITESCRIPTLOG */ sub_469( "SA", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            if (g_U1583)
            {
                if ( /* F_HANDLE_KILL_MAX_FROM_SMOKE_INHALE */ sub_1343())
                {
                    AUDIO_MUSIC_SUSPEND( 5000 );
                    l_U458 = 1;
                }
            }
            break;
            case 1:
            if ( /* F_CHECK_QUIT_RETRY */ sub_1808( NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )) ))
            {
                l_U458 = 2;
                 /* WRITESCRIPTLOG */ sub_469( "SA", "eFailState = FAIL_WAITING_FOR_RESPAWN", 0 );
            }
            break;
            case 2:
            if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() ))) AND (NOT IS_LAST_MAN_STANDING_ACTIVE())))
            {
                DO_SCREEN_FADE_OUT( 0 );
                AUDIO_MUSIC_SUSPEND( 500 );
                 /* KILL_ANY_MISSION_SPEECH */ sub_3200( 0 );
                 /* KILL_ANY_AMBIENT_SPEECH */ sub_3400( 0 );
                DESTROY_ALL_CAMS();
                RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
                l_U458 = 3;
                 /* WRITESCRIPTLOG */ sub_469( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
             /* WRITESCRIPTLOG */ sub_469( "SA", "eFailState = FAIL_CLEANUP_ALL", 0 );
            DO_SCREEN_FADE_OUT( 0 );
            if (g_U1605 == 2)
            {
                 /* F_LOAD_BINK_FIRE */ sub_3737( 3 );
            }
             /* P_CLEAN_UP_KILL_MAX_FROM_SMOKE_INHALE */ sub_4153();
             /* P_STOP_COUGHING_TIMER */ sub_4425();
             /* P_CLEANUP_ALL */ sub_4579();
            l_U458 = 4;
             /* WRITESCRIPTLOG */ sub_469( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
             /* WRITESCRIPTLOG */ sub_469( "SA", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            if (l_U459._fU0)
            {
                 /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5334( ref l_U459,  /* PLAYER_PED_ID */ sub_1003() );
            }
            l_U458 = 5;
             /* WRITESCRIPTLOG */ sub_469( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
             /* WRITESCRIPTLOG */ sub_469( "SA", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U457 = 1;
            l_U458 = 0;
             /* WRITESCRIPTLOG */ sub_469( "SA", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

/* RESTARTING_CHECKPOINT */ int sub_707()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
        {
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1003(), 0 );
            SET_PLAYER_FORCED_AIM(  /* PLAYER_ID */ sub_1041(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1041(), 1 );
            if ((IS_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1003() )) == 0)
            {
                SET_PED_VISIBLE(  /* PLAYER_PED_ID */ sub_1003(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

/* PLAYER_PED_ID */ int sub_1003()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED(  /* PLAYER_ID */ sub_1041() );
    }
    return 0;
}

/* PLAYER_ID */ void sub_1041()
{
    return GET_PLAYER_ID();
}

/* F_HANDLE_KILL_MAX_FROM_SMOKE_INHALE */ int sub_1343()
{
    if ( /* ISTIMERDONE */ sub_1395( ref g_U1556 ))
    {
        g_U743 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
        SETUP_BULLET_CAMERA_SCENE( g_U743, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
        SET_CAM_ACTIVE( g_U743, 1 );
        return 1;
    }
    return 0;
}

/* ISTIMERDONE */ int sub_1395(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

/* F_CHECK_QUIT_RETRY */ int sub_1808(int iParam0)
{
    iParam0 = 1;
    switch (l_U446)
    {
        case 0:
        if (NOT ( /* HASTIMERBEENACTIVATED */ sub_1890( ref l_U448 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
            {
                l_U447 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
             /* CREATETIMER */ sub_2024( ref l_U448, l_U447, 1, 1 );
             /* STARTTIMER */ sub_2174( ref l_U448 );
        }
        if ( /* ISTIMERDONE */ sub_1395( ref l_U448 ))
        {
             /* WRITESCRIPTLOG */ sub_469( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1041() )))
            {
                SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1041(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U446 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U446 = 2;
            }
            else
            {
                l_U446 = 3;
            }
        }
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_469( "NS", "Player will QUIT", 0 );
         /* P_POSTQUITRETRYCLEANUP */ sub_2638();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_469( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
         /* P_POSTQUITRETRYCLEANUP */ sub_2638();
        return 1;
        break;
    }
    return 0;
}

/* HASTIMERBEENACTIVATED */ int sub_1890(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

/* CREATETIMER */ void sub_2024(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

/* STARTTIMER */ void sub_2174(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

/* P_POSTQUITRETRYCLEANUP */ void sub_2638()
{
     /* WRITESCRIPTLOG */ sub_469( "NS", "P_PostFailRetryCleanup", 0 );
     /* RESETTIMER */ sub_2713( ref l_U448 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD(  /* PLAYER_ID */ sub_1041() )))
    {
        SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1041(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U445 = 0;
    l_U445 = l_U445;
    l_U446 = 0;
    return;
}

/* RESETTIMER */ void sub_2713(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

/* KILL_ANY_MISSION_SPEECH */ void sub_3200(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_MISSION_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* KILL_ANY_AMBIENT_SPEECH */ void sub_3400(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        PRINTSTRING( "\n KILL_ANY_AMBIENT_SPEECH CALLED***************************************" );
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 3) AND (g_U1[I] >= 1))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

/* F_LOAD_BINK_FIRE */ int sub_3737(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_LOAD_BINK_FIRE", 0 );
    switch (uParam0)
    {
        case 1:
         /* WRITESCRIPTLOG */ sub_469( "SA", "BINK_FIRE_LOADING", 0 );
        PRELOAD_MOVIE( 0, "FIRE_TEST2", 1, 0 );
        SET_MOVIE_LOOP( 0, 1 );
        PLAY_MOVIE( 0, 0 );
        g_U1605 = 2;
        return 1;
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_469( "SA", "BINK_FIRE_PLAYING", 0 );
        return 1;
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_469( "SA", "BINK_FIRE_STOPPED", 0 );
        STOP_MOVIE( 0 );
        g_U1605 = 3;
        return 1;
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_469( "SA", "BINK_FIRE_RESTART", 0 );
        PLAY_MOVIE( 0, 0 );
        g_U1605 = 2;
        return 1;
        break;
        case 5:
         /* WRITESCRIPTLOG */ sub_469( "SA", "BINK_FIRE_RELEASE", 0 );
        STOP_MOVIE( 0 );
        RELEASE_MOVIE( 0 );
        g_U1605 = 0;
        return 1;
        break;
    }
    return 0;
}

/* P_CLEAN_UP_KILL_MAX_FROM_SMOKE_INHALE */ void sub_4153()
{
     /* WRITESCRIPTLOG */ sub_469( "NS", "P_CLEAN_UP_KILL_MAX_FROM_SMOKE_INHALE()", 0 );
     /* RESETTIMER */ sub_2713( ref g_U1556 );
     /* RESETTIMER */ sub_2713( ref g_U1574 );
     /* CLEANCAMERA */ sub_4278( ref g_U743 );
    g_U1583 = 0;
    CLEAR_TIMECYCLE_MODIFIER_OVERRIDE( 0 );
    DEACTIVATE_SPECIAL_FX_MODIFIER( "LAST_MAN_STANDING_DEATH" );
    return;
}

/* CLEANCAMERA */ void sub_4278(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

/* P_STOP_COUGHING_TIMER */ void sub_4425()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_STOP_COUGHING_TIMER", "###" );
    g_U1585 = 0;
    g_U1587 = 0;
    l_U267 = 0;
    l_U266 = 3;
    l_U268 = 0;
    DEACTIVATE_SPECIAL_FX_MODIFIER( "FIRE_COUGH" );
    STOP_SOUND( g_U1598, 0 );
     /* RESETTIMER */ sub_2713( ref g_U1538 );
    return;
}

/* P_CLEANUP_ALL */ void sub_4579()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_CLEANUP_ALL", 0 );
    CLEAR_TIMECYCLE_MODIFIER_OVERRIDE( 0 );
     /* RESETTIMER */ sub_2713( ref l_U756 );
     /* RESETTIMER */ sub_2713( ref l_U765 );
     /* RESETTIMER */ sub_2713( ref l_U774 );
     /* RESETTIMER */ sub_2713( ref l_U783 );
     /* RESETTIMER */ sub_2713( ref l_U792 );
    ISEQ_UNREGISTER_ENTITY( 1484113481, "enemy" );
     /* TERMINATEISEQ */ sub_4711( 1484113481, 1 );
    ISEQ_UNREGISTER_ENTITY( 586742169, "player" );
     /* TERMINATEISEQ */ sub_4711( 586742169, 1 );
     /* CLEANPEDARRAY */ sub_5048( ref l_U726 );
    return;
}

/* TERMINATEISEQ */ void sub_4711(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to terminate does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 1)
    {
        ISEQ_TERMINATE( uParam0 );
    }
    ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
    if (iParam1 == 1)
    {
        while ((ISEQ_IS_LOADED( uParam0 )) == 1)
        {
            DISPLAYF( "[SP]### Waiting for interactive sequence to terminate: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* CLEANPEDARRAY */ void sub_5048(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
         /* CLEANPED */ sub_5098( (uParam0^)[I] );
    }
    return;
}

/* CLEANPED */ void sub_5098(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

/* P_RESTORE_PLAYER_DATA_CHECKPOINT */ void sub_5334(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

     /* WRITESCRIPTLOG */ sub_469( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
     /* CLOSE_CURRENT_LEVEL_CONTEXT */ sub_5553( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
         /* LOADCOLLISIONFORPED */ sub_6717( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7031( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7510( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7031( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7510( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPONTOHOLSTER */ sub_7031( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7510( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_7826( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7510( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 =  /* F_GIVEPEDWEAPON */ sub_7826( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
         /* P_RESTORE_WEAPON_ATTACHMENTS */ sub_7510( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if (( /* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ sub_8398( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
     /* START_NEW_LEVEL_CONTEXT */ sub_8600( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING(  /* PLAYER_PED_ID */ sub_1003(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
     /* WRITESCRIPTLOG */ sub_469( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

/* CLOSE_CURRENT_LEVEL_CONTEXT */ void sub_5553(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5615( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

/* GET_MISSION_INDEX_FROM_NAME */ int sub_5615(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    }
    else
    {
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
        PRINTSTRING( uParam0 );
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

/* LOADCOLLISIONFORPED */ void sub_6717(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPONTOHOLSTER */ void sub_7031(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_7435( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* WRITE_STRING */ void sub_7435(unknown uParam0)
{
    PRINTSTRING( uParam0 );
    PRINTNL();
    return;
}

/* P_RESTORE_WEAPON_ATTACHMENTS */ void sub_7510(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

/* F_GIVEPEDWEAPON */ void sub_7826(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                    DISPLAYF( "[SP]### Waiting for a weapon to exist: {} ###", 1, 513, uParam1 );
                }
            }
        }
    }
    else
    {
         /* WRITE_STRING */ sub_7435( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

/* F_CAN_GIVE_AMMO_TO_REGULAR_WEAPON_TYPE */ int sub_8398(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

/* START_NEW_LEVEL_CONTEXT */ void sub_8600(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5615( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
     /* CLEAR_GG_CONTEXTS */ sub_8698( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

/* CLEAR_GG_CONTEXTS */ void sub_8698(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

/* P_HANDLE_EVENTS */ void sub_10010()
{
    switch (l_U457)
    {
        case 0:
         /* WRITESCRIPTLOG */ sub_469( "SA", "eCheckpointState = CHECKPOINT_IDLE", 0 );
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_469( "SA", "eCheckpointState = CHECKPOINT_INIT_SCRIPT_DATA", 0 );
        if (g_U1605 == 0)
        {
             /* F_LOAD_BINK_FIRE */ sub_3737( 1 );
        }
        else if (g_U1605 == 3)
        {
             /* F_LOAD_BINK_FIRE */ sub_3737( 4 );
        }
         /* P_INIT_SCRIPT_VARIABLES */ sub_10278();
         /* P_INIT_GAMEPLAY_STRUCTS */ sub_14028();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        SET_WEATHER_TYPE_NOW_PERSIST( "EXTRASUNNY" );
        FREEZE_TIME_OF_DAY( 18, 0 );
        SET_TIMECYCLE_MODIFIER_OVERRIDE( "SMOKE_DAMAGE_LOW", "SMOKE_DAMAGE_HIGH", g_U1590, 1.00000000, 0 );
         /* SETUP_SCRIPTED_SPEECH */ sub_15179( "SOFFAUD" );
        ENABLE_GRAVITY_WELL( "s_office_fireatrium_gravitywells", "GRAVITY_WELL_FLAME_BURST", 0, 0, 0, 0 );
        l_U457 = 2;
         /* WRITESCRIPTLOG */ sub_469( "SA", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
        break;
        case 2:
         /* WRITESCRIPTLOG */ sub_469( "SA", "eCheckpointState = CHECKPOINT_INIT_REQUEST_ASSETS", 0 );
         /* P_REQUEST_ASSETS */ sub_15552();
        l_U457 = 3;
         /* WRITESCRIPTLOG */ sub_469( "SA", "eCheckpointState = CHECKPOINT_INIT_LOAD_ASSETS", 0 );
        break;
        case 3:
        if ( /* F_HAVE_ASSETS_LOADED */ sub_16557())
        {
            l_U457 = 4;
        }
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_469( "SA", "eCheckpointState = CHECKPOINT_START_GAMEPLAY", 0 );
         /* P_START_GAMEPLAY */ sub_16927();
        if (g_U665 == 3)
        {
            l_U457 = 5;
             /* WRITESCRIPTLOG */ sub_469( "SA", "eCheckpointState = CHECKPOINT_WAIT_FOR_ENEMY_SPAWN", 0 );
        }
        else
        {
            l_U457 = 6;
             /* WRITESCRIPTLOG */ sub_469( "SA", "eCheckpointState = CHECKPOINT_WAITING_TO_CROSS", 0 );
        }
        break;
        case 5:
        if (I_SEQUENCE_QUERY_STATE( "S_OFFICE_INJURED_CP", 3 ))
        {
            if ((NOT l_U783._fU16) AND (NOT l_U783._fU20))
            {
                 /* STARTTIMER */ sub_2174( ref l_U783 );
            }
            if ( /* ISTIMERDONE */ sub_1395( ref l_U783 ))
            {
                if ((IS_DEATH_PANEL_WIPE_ALLOWED()) || (NOT IS_SCREEN_FADED_IN()))
                {
                    DO_SCREEN_FADE_IN( 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "OFFICE_ACTION_SONG_02", "OFFICE_ACTION_2_4", "", 0.00000000, 0, 0, -1082130432, 0 );
                    l_U457 = 6;
                }
            }
        }
        break;
        case 6:
         /* P_HANDLE_CHECKPOINT_REACHED */ sub_19120();
        break;
        case 7:
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_24269( ref l_U663,  /* PLAYER_PED_ID */ sub_1003(), 0 ))
        {
            PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 0 );
            PLAY_IMAGEFX( "FLICKER_VIBRATE_LIGHTEN", 4, 0 );
        }
        if ( /* F_ISPEDINTRIGGERBOXFIRSTTIME */ sub_24269( ref l_U684,  /* PLAYER_PED_ID */ sub_1003(), 0 ))
        {
            PLAY_IMAGEFX( "DISTORT_INTERLACE_MID_INVRT_01", 4, 0 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19165( ref l_U579, 0 ))
        {
             /* P_SETDOORLOCKED */ sub_10739( ref g_U1298, 1 );
             /* P_SETDOORLOCKED */ sub_10739( ref g_U1305, 1 );
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19165( ref l_U516, 0 ))
        {
            g_U749 = 1;
        }
         /* P_HANDLE_WALKING_INTO_ARCH */ sub_24589();
         /* P_HANDLE_SHOOTER */ sub_24734();
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19165( ref l_U621, 0 ))
        {
             /* P_PLAY_SOFF_MWTDBRD */ sub_27084();
        }
        if (g_U665 == 3)
        {
             /* P_HANDLE_GLOBAL_FIRE_EVENTS */ sub_27287();
        }
        if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19165( ref l_U558, 0 ))
        {
             /* P_STOP_COUGHING_TIMER */ sub_4425();
            g_U750 = 1;
            l_U457 = 8;
        }
        break;
        case 8:
         /* WRITESCRIPTLOG */ sub_469( "SA", "eCheckpointState = CHECKPOINT_FINISHED", 0 );
         /* P_CLEANUP_ALL */ sub_4579();
         /* P_UNLOAD_ASSETS */ sub_31440();
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        break;
    }
    return;
}

/* P_INIT_SCRIPT_VARIABLES */ void sub_10278()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "INITIALIZE_SCRIPT_DATA", 0 );
    l_U725 = 0;
     /* P_SETDOORMINMAXLIMIT */ sub_10370( ref g_U1298, 0.00000000, 85.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_10370( ref g_U1305, -85.00000000, 0.00000000 );
    if (g_U665 == 3)
    {
         /* P_SETDOORLOCKED */ sub_10739( ref g_U1298, 1 );
         /* P_SETDOORLOCKED */ sub_10739( ref g_U1305, 1 );
    }
    else
    {
         /* P_OPENDOOR */ sub_10911( ref g_U1298, 1, 1, 0.60000000 );
         /* P_OPENDOOR */ sub_10911( ref g_U1305, 0, 1, 0.10000000 );
    }
     /* P_SETDOORMINMAXLIMIT */ sub_10370( ref g_U1312, -120.00000000, 120.00000000 );
     /* P_SETDOORMINMAXLIMIT */ sub_10370( ref g_U1319, -120.00000000, 120.00000000 );
     /* P_SETDOORLOCKED */ sub_10739( ref g_U1312, 1 );
     /* P_SETDOORLOCKED */ sub_10739( ref g_U1319, 1 );
     /* CREATETIMER */ sub_2024( ref l_U792, 700, 1, 0 );
     /* CREATETIMER */ sub_2024( ref l_U756, 1000, 1, 0 );
     /* CREATETIMER */ sub_2024( ref l_U765, 10000, 1, 0 );
     /* CREATETIMER */ sub_2024( ref l_U774, 1000, 1, 0 );
     /* CREATETIMER */ sub_2024( ref l_U783, 1000, 1, 0 );
    l_U783._fU32 = 1;
    if (g_U665 == 3)
    {
         /* P_INIT_COUGHING_LOGIC */ sub_11238();
    }
     /* P_INIT_FIRE_POINTS */ sub_12182();
    return;
}

/* P_SETDOORMINMAXLIMIT */ void sub_10370(int iParam0, float fParam1, float fParam2)
{
    if (( /* F_DOESDOOREXIST */ sub_10405( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10489( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        PRINTSTRING( "[SP]### Error: Door fMinLimit greater than fMaxLimit (default min:-81.0 max:81.0) ###" );
        PRINTNL();
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

/* F_DOESDOOREXIST */ int sub_10405(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

/* P_PRINTDOORNOTEXIST */ void sub_10489(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

/* P_SETDOORLOCKED */ void sub_10739(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if (( /* F_DOESDOOREXIST */ sub_10405( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10489( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

/* P_OPENDOOR */ void sub_10911(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if (( /* F_DOESDOOREXIST */ sub_10405( iParam0 )) == 0)
    {
         /* P_PRINTDOORNOTEXIST */ sub_10489( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

/* P_INIT_COUGHING_LOGIC */ void sub_11238()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_INIT_COUGHING_LOGIC", "###" );
    g_U1585 = 0;
    g_U1587 = 1;
    g_U1598 = GET_SOUND_ID();
    l_U267 = 0;
    l_U266 = 0;
    l_U268 = 0;
     /* P_CREATETRIGGERBOX */ sub_11419( ref g_U1340, "InFirAtr00", -978.00000000, 32.34000000, -2.50000000, 15.00000000, 30.00000000, 19.80000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref g_U1361, "InFirAtr01", -988.78000000, 23.59000000, -2.50000000, 15.00000000, 13.00000000, 19.80000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref g_U1382, "InFireCub00", -991.71000000, 37.54000000, -2.50000000, 14.00000000, 15.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref g_U1403, "InFireCub01", -1010.48000000, 32.34000000, -2.50000000, 28.00000000, 30.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref g_U1424, "InFireCub02", -1028.92000000, 30.17000000, -2.50000000, 10.00000000, 7.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref g_U1445, "InFireBrd00", -1031.12000000, 15.25000000, -2.50000000, 14.00000000, 22.50000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref g_U1466, "InFirArc01", -1009.07000000, 5.14000000, -2.50000000, 30.00000000, 24.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref g_U1487, "InFirArc00", -1028.87000000, -0.18000000, -2.50000000, 11.00000000, 8.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref g_U1508, "InFirRods00", -987.34000000, 3.39000000, -2.50000000, 14.00000000, 28.00000000, 20.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* RESETTIMER */ sub_2713( ref g_U1547 );
     /* CREATETIMER */ sub_2024( ref g_U1547, g_U1597, 1, 0 );
     /* RESETTIMER */ sub_2713( ref g_U1529 );
     /* CREATETIMER */ sub_2024( ref g_U1529, g_U1599, 1, 0 );
     /* RESETTIMER */ sub_2713( ref g_U1538 );
     /* CREATETIMER */ sub_2024( ref g_U1538, GET_RANDOM_INT_IN_RANGE( g_U1601, g_U1602 ), 1, 0 );
    return;
}

/* P_CREATETRIGGERBOX */ void sub_11419(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

/* P_INIT_FIRE_POINTS */ void sub_12182()
{
    l_U2[0] = {-975.81300000, 24.29370000, 0.20000000};
    l_U2[1] = {-976.55800000, 22.32690000, 0.20000000};
    l_U2[2] = {-977.87300000, 20.86910000, 0.20000000};
    l_U2[3] = {-986.78000000, 23.85550000, 0.20000000};
    l_U2[4] = {-986.77100000, 25.82820000, 0.20000000};
    l_U2[5] = {-986.86200000, 27.80760000, 0.20000000};
    l_U2[6] = {-978.74000000, 33.56000000, 0.20000000};
    l_U2[7] = {-975.94700000, 33.13140000, 0.20000000};
    l_U2[8] = {-973.73800000, 30.97250000, 0.20000000};
    l_U2[9] = {-975.79000000, 26.29060000, 0.20000000};
    l_U2[10] = {-979.32800000, 19.46870000, 0.20000000};
    l_U2[11] = {-976.15100000, 28.33880000, 0.20000000};
    l_U2[12] = {-986.57800000, 18.69000000, 0.20000000};
    l_U2[13] = {-985.88000000, 21.00350000, 0.20000000};
    l_U45[0] = {-1001.50000000, 22.94000000, 4.90000000};
    l_U45[1] = {-1005.94000000, 26.53000000, 5.27000000};
    l_U45[2] = {-1001.13000000, 22.81000000, 4.90000000};
    l_U45[3] = {-997.86000000, 18.44390000, 4.90000000};
    l_U45[4] = {-1008.24000000, 22.64000000, 5.23000000};
    l_U45[5] = {-1011.02000000, 30.78660000, 5.23000000};
    l_U45[6] = {-1001.09000000, 27.87930000, 4.90000000};
    l_U45[7] = {-1002.04000000, 22.75000000, 4.90000000};
    l_U45[8] = {-996.57700000, 24.18540000, 4.90000000};
    l_U45[9] = {-996.96300000, 26.56050000, 4.90000000};
    l_U45[10] = {-1000.70000000, 37.59880000, 5.06841000};
    l_U45[11] = {-998.59600000, 37.62690000, 5.06841000};
    l_U45[12] = {-987.43300000, 30.83000000, 2.24344000};
    l_U45[13] = {-987.43700000, 32.53640000, 2.24185000};
    l_U45[14] = {-987.41700000, 34.50890000, 2.24185000};
    l_U45[15] = {-987.39700000, 36.57120000, 2.24185000};
    l_U45[16] = {-988.29700000, 38.13670000, 2.24344000};
    l_U45[17] = {-990.87400000, 38.24230000, 2.24344000};
    l_U45[19] = {-1008.28000000, 22.71000000, 5.23000000};
    l_U45[20] = {-1011.42000000, 20.05670000, 5.23000000};
    l_U45[21] = {-1000.78000000, 29.16000000, 4.90000000};
    l_U45[22] = {-996.20800000, 38.47680000, 5.06841000};
    l_U45[23] = {-1006.67000000, 26.33000000, 8.91000000};
    l_U45[24] = {-1013.05000000, 24.90050000, 5.23000000};
    l_U45[25] = {-1009.73000000, 29.52650000, 5.23000000};
    l_U45[26] = {-1012.81000000, 22.84860000, 5.23000000};
    l_U45[27] = {-1001.05000000, 30.78970000, 4.90000000};
    l_U45[28] = {-1001.75000000, 37.02490000, 5.06841000};
    l_U45[29] = {-1003.65000000, 18.17000000, 5.12000000};
    l_U45[30] = {-1008.37000000, 22.79000000, 5.23000000};
    l_U45[31] = {-1008.87000000, 27.82960000, 5.23000000};
    l_U45[32] = {-1009.37000000, 18.15310000, 5.12000000};
    l_U145[0] = {-1028.76000000, 10.36350000, 5.12000000};
    l_U145[1] = {-1033.35000000, 17.81970000, 5.12000000};
    l_U145[2] = {-1028.18000000, 21.06960000, 5.12000000};
    l_U145[3] = {-1028.89000000, 23.32580000, 5.12000000};
    l_U145[4] = {-1028.18000000, 25.39780000, 5.12000000};
    l_U145[5] = {-1033.35000000, 19.14410000, 5.12000000};
    l_U145[6] = {-1033.18000000, 12.51890000, 5.12000000};
    l_U145[7] = {-1034.57000000, 23.21270000, 5.12000000};
    l_U145[8] = {-1035.38000000, 25.88970000, 5.12000000};
    l_U145[9] = {-1034.96000000, 24.39860000, 5.12000000};
    l_U145[10] = {-1033.35000000, 13.93000000, 5.12000000};
    l_U145[11] = {-1028.45000000, 8.15473000, 5.12000000};
    l_U145[12] = {-1027.82000000, 4.90000000, 5.27000000};
    l_U145[13] = {-1032.84000000, 7.41310000, 5.12000000};
    l_U145[14] = {-1032.83000000, 5.65683000, 5.12000000};
    l_U145[15] = {-1028.15000000, 6.52000000, 5.27000000};
    l_U194[0] = {-1002.87000000, 3.46000000, 5.11000000};
    l_U194[1] = {-1000.20000000, 8.51000000, 5.11000000};
    l_U194[2] = {-998.83000000, 7.76000000, 5.27000000};
    l_U194[3] = {-1013.62000000, 3.49000000, 5.11000000};
    l_U194[4] = {-1017.99000000, 3.50199000, 5.11000000};
    l_U194[5] = {-1021.71000000, 4.45000000, 5.11000000};
    l_U194[6] = {-1020.13000000, 4.54000000, 5.11000000};
    l_U194[7] = {-1023.06000000, 4.79000000, 5.11000000};
    l_U219[0] = {-988.29200000, 5.26253000, 5.11000000};
    l_U219[1] = {-988.22500000, 7.23000000, 5.11000000};
    l_U219[2] = {-988.34100000, 9.27425000, 5.11000000};
    return;
}

/* P_INIT_GAMEPLAY_STRUCTS */ void sub_14028()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "LOAD_ASSETS", 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14127( ref l_U729[0], -1029.67700000, 19.01000000, 4.90000000, 11.58000000, 407429255, 7, 3, 2, 0, 0 );
     /* P_CREATEPEDSTRUCTWITHNAME */ sub_14127( ref l_U729[1], -1032.49100000, 11.56300000, 5.90100000, -98.89100000, 407429255, 7, 3, 2, 0, 0 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U495, "tbChkpntFireHall", -1031.08000000, 24.50000000, 4.70000000, 3.37000000, 6.00000000, 3.39000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U537, "tbBoardRoomForceWalk", -1030.22000000, 7.06000000, 4.27000000, 8.00000000, 6.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U558, "bKillFireHall", -1030.22000000, 3.38000000, 4.27000000, 4.00000000, 4.00000000, 5.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U516, "tbPreloadFireOffice", -1031.02000000, 20.27000000, 4.71000000, 8.00000000, 2.07000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U579, "bCloseDoors", -1031.02000000, 22.53000000, 4.71000000, 8.00000000, 2.07000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U600, "tbUpdateBoardroomDoors", -1030.83000000, 30.08000000, 4.70000000, 6.00000000, 7.00000000, 3.39000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U621, "tbPlayMonoMWTDBRD", -1031.02000000, 10.36000000, 4.71000000, 8.00000000, 2.07000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U642, "tbPlayMonoMDKTBNG", -1031.02000000, 17.95000000, 4.71000000, 8.00000000, 2.07000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U684, "tbCeilingTileImageFX", -1030.07000000, 9.98238000, 4.27000000, 4.00000000, 8.00000000, 5.00000000, 0.00000000, 0.00000000, -90.17080000, 1 );
     /* P_CREATETRIGGERBOX */ sub_11419( ref l_U663, "tbImageFX_HALL", -1031.02000000, 17.56000000, 4.71000000, 8.00000000, 2.07000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    return;
}

/* P_CREATEPEDSTRUCTWITHNAME */ void sub_14127(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

/* SETUP_SCRIPTED_SPEECH */ void sub_15179(unknown uParam0)
{
    StrCopy( ref g_U157._fU0, uParam0, 16 );
     /* CLEARPEDCONVERSATIONDATA */ sub_15223();
    return;
}

/* CLEARPEDCONVERSATIONDATA */ void sub_15223()
{
    int I;

    for ( I = 0; I <= 8; I++ )
    {
        g_U157._fU16[I]._fU0 = nil;
        g_U157._fU16[I]._fU4 = 0;
        g_U157._fU92[I] = 0;
    }
    return;
}

/* P_REQUEST_ASSETS */ void sub_15552()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "LOAD_ASSETS", 0 );
     /* LOADMODEL */ sub_15612( -569568960, 0 );
     /* LOADWEAPON */ sub_15863( -862236369, 0 );
     /* LOADANIMDICT */ sub_16014( ref l_U705, 0, 1 );
     /* LOADISEQ */ sub_16186( 1484113481, 0 );
    return;
}

/* LOADMODEL */ void sub_15612(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
         /* WRITE_STRING */ sub_7435( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load model: {!f1} : {1} ###", 2, 1, -874832622, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADWEAPON */ void sub_15863(unknown uParam0, boolean bParam1)
{
    REQUEST_WEAPON( uParam0 );
    if (bParam1)
    {
        while ((HAS_WEAPON_LOADED( uParam0 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting to load weapon: {!f1} : {1} ###", 2, 1, 199730165, 513, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADANIMDICT */ void sub_16014(unknown uParam0, unknown uParam1, int iParam2)
{
    REQUEST_ANIM_DICT( uParam0, uParam1 );
    "[doubled result, dropped if not asigned]";
    if (iParam2 == 1)
    {
        while ((HAS_ANIM_DICT_LOADED( uParam0, uParam1 )) == 0)
        {
            DISPLAYF( "[SP]### Waiting for an animation dictionary to be loaded: {} ###", 1, 1537, uParam0 );
            WAIT( 0 );
        }
    }
    return;
}

/* LOADISEQ */ void sub_16186(unknown uParam0, int iParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;

    if ((ISEQ_DOES_EXIST( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The interactive sequence you are trying to load does not exist!!!!", 0 );
    }
    if ((ISEQ_IS_LOADED( uParam0 )) == 0)
    {
        ISEQ_REQUEST( uParam0 );
        ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
        if (iParam1 == 1)
        {
            while ((ISEQ_QUERY_STATE( uParam0, 1 )) == 1)
            {
                DISPLAYF( "[SP]### Waiting for interactive sequence to be loaded: {0} {1} ###", 2, 1281, ref uVar4, 513, uParam0 );
                WAIT( 0 );
            }
        }
    }
    return;
}

/* F_HAVE_ASSETS_LOADED */ int sub_16557()
{
    if (HAS_MODEL_LOADED( -569568960 ))
    {
         /* WRITESCRIPTLOG */ sub_469( "SA", "Models loaded...", 0 );
    }
    else
    {
        return 0;
    }
    if (HAS_WEAPON_LOADED( -862236369 ))
    {
         /* WRITESCRIPTLOG */ sub_469( "SA", "Weapon's loaded...", 0 );
    }
    else
    {
        return 0;
    }
    if (HAS_ANIM_DICT_LOADED( ref l_U705, 0 ))
    {
         /* WRITESCRIPTLOG */ sub_469( "SA", "Anim Dicts loaded...", 0 );
    }
    else
    {
        return 0;
    }
    if ((ISEQ_QUERY_STATE( 1484113481, 2 )) AND (ISEQ_IS_LOADED( 1484113481 )))
    {
         /* WRITESCRIPTLOG */ sub_469( "SA", "ISeq's loaded and ready...", 0 );
    }
    else
    {
        return 0;
    }
    return 1;
}

/* P_START_GAMEPLAY */ void sub_16927()
{
    unknown uVar2;
    unknown uVar3;

     /* WRITESCRIPTLOG */ sub_469( "SA", "P_START_GAMEPLAY", 0 );
     /* P_SETUP_DEAD_BODIES */ sub_16986();
    if (g_U665 == 3)
    {
        SET_CAMERA_OVERRIDE( "", "", 0, 1, 1 );
        CAMERA_USE_HANDY_CAM( 1, 5.00000000, 1 );
        AUD_SET_IS_POWER_ON( 0 );
        ENABLE_DUAL_WIELD_IN_INVENTORY( 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
        {
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1003(), 1 );
            uVar2 = GET_HASH_KEY( ref g_U1137 );
            uVar3 = GET_INTERIOR_FROM_NAME( ref g_U1097, 0 );
            SET_INTERIOR_ACTIVE( uVar3, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar3, uVar2 );
            SET_PLAYER_CAN_USE_SHOOTDODGE(  /* PLAYER_ID */ sub_1041(), 0 );
            FREEZE_PED_POSITION(  /* PLAYER_PED_ID */ sub_1003(), 0 );
        }
         /* P_SETUP_MAX */ sub_18084();
    }
    return;
}

/* P_SETUP_DEAD_BODIES */ void sub_16986()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_SETUP_DEAD_BODIES", 0 );
    l_U726[0] =  /* CREATEPED */ sub_17058( ref l_U729[0] );
    if (NOT (IS_PED_DEAD( l_U726[0] )))
    {
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U726[0], 1 );
        SET_PED_AS_ONE_SHOT_KILL( l_U726[0], 1 );
        SET_ROOM_FOR_PED_BY_NAME( l_U726[0], ref g_U1137 );
         /* F_GIVEPEDWEAPON */ sub_7826( l_U726[0], -862236369, 25000, 0, 0 );
        ISEQ_REGISTER_ENTITY( 1484113481, "enemy", l_U726[0], 0 );
        ISEQ_START( 1484113481 );
    }
    return;
}

/* CREATEPED */ void sub_17058(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
         /* LOADMODEL */ sub_15612( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
     /* SETPEDDEFAULTSTATS */ sub_17549( iParam0->_fU40 );
     /* SETPEDDEFAULTTEMPLATE */ sub_17650( iParam0->_fU40 );
    return iParam0->_fU40;
}

/* SETPEDDEFAULTSTATS */ void sub_17549(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

/* SETPEDDEFAULTTEMPLATE */ void sub_17650(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

/* P_SETUP_MAX */ void sub_18084()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_SETUP_MAX", 0 );
    if (g_U665 == 3)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
        {
             /* TELEPORTPED */ sub_18185(  /* PLAYER_PED_ID */ sub_1003(), g_U751[3], g_U851[3] );
            SET_ROOM_FOR_PED_BY_NAME(  /* PLAYER_PED_ID */ sub_1003(), ref g_U1137 );
            SET_PED_PROOFS(  /* PLAYER_PED_ID */ sub_1003(), 0, 0, 0, 0, 0 );
            SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1003(), 0 );
            AUDIO_SET_PED_FOOTSTEPS_VOLUME(  /* PLAYER_PED_ID */ sub_1003(), g_U1588 );
            SET_PLAYER_CAN_USE_COVER(  /* PLAYER_ID */ sub_1041(), 1 );
            if (( /* HAS_SAVEFILE_LOADED */ sub_18336( ref l_U459 )) == 0)
            {
                 /* F_GIVEPEDWEAPON */ sub_7826(  /* PLAYER_PED_ID */ sub_1003(), -862236369, 50, 0, 0 );
                SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1003(), g_U1595, 0 );
            }
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U885[3], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U919[3], 1065353216, 0 );
        SET_PAYNEKILLER_AMT( 0 );
        SET_ADRENALINE_NOT_ALLOW( 0 );
        SET_CAM_VIEW_MODE( 0 );
         /* P_RESET_COUGHING_TIMER */ sub_18645();
    }
    return;
}

/* TELEPORTPED */ void sub_18185(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

/* HAS_SAVEFILE_LOADED */ int sub_18336(unknown uParam0)
{
     /* WRITESCRIPTLOG */ sub_469( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
             /* P_RESTORE_PLAYER_DATA_CHECKPOINT */ sub_5334( uParam0,  /* PLAYER_PED_ID */ sub_1003() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

/* P_RESET_COUGHING_TIMER */ void sub_18645()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_RESET_COUGHING_TIMER", "###" );
    g_U1585 = 1;
    g_U1587 = 1;
    l_U267 = 0;
    l_U266 = 3;
    l_U268 = 1;
    return;
}

/* P_HANDLE_CHECKPOINT_REACHED */ void sub_19120()
{
    int iVar2;

    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19165( ref l_U495, 0 ))
    {
        DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1312._fU0, g_U1312._fU4 ), 0 );
        DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1319._fU0, g_U1319._fU4 ), 0 );
        if (l_U724)
        {
             /* WRITESCRIPTLOG */ sub_469( "SA", "Saving checkpoint", 0 );
            iVar2 = 1;
            if (g_U666 == 3)
            {
                iVar2 = 0;
            }
            g_U665 = 3;
            g_U666 = 3;
             /* P_SAVE_PLAYER_DATA_CHECKPOINT */ sub_19547( ref l_U459, g_U665,  /* PLAYER_PED_ID */ sub_1003(), g_U751[3], g_U851[3], g_U885[3], g_U919[3], iVar2 );
            l_U724 = 0;
        }
         /* P_RESET_COUGHING_TIMER */ sub_18645();
         /* STARTTIMER */ sub_2174( ref l_U756 );
        l_U457 = 7;
    }
    if ( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19165( ref l_U600, 0 ))
    {
        DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1312._fU0, g_U1312._fU4 ), 0 );
        DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U1319._fU0, g_U1319._fU4 ), 0 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ void sub_19165(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 =  /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

/* F_ISPEDINTRIGGERBOX */ int sub_19241(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

/* P_SAVE_PLAYER_DATA_CHECKPOINT */ void sub_19547(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

     /* WRITESCRIPTLOG */ sub_469( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
         /* WRITESCRIPTLOG */ sub_469( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
         /* START_NEW_LEVEL_CONTEXT */ sub_8600( iParam1 );
         /* CLOSE_OLD_LEVEL_CONTEXT */ sub_19838( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_20315( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_20315( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_20315( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_20315( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
             /* P_SAVE_WEAPON_ATTACHMENTS */ sub_20315( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if ( /* F_WEAPONS_SAME_AMMO */ sub_20575( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
             /* P_PRINT_CHECKPOINT_DATA */ sub_22155( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
     /* WRITESCRIPTLOG */ sub_469( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

/* CLOSE_OLD_LEVEL_CONTEXT */ void sub_19838(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 =  /* GET_MISSION_INDEX_FROM_NAME */ sub_5615( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
         /* WRITESCRIPTLOG */ sub_469( "TEH", "Ending context", 0 );
         /* WRITESCRIPTLOG */ sub_469( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

/* P_SAVE_WEAPON_ATTACHMENTS */ void sub_20315(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

/* F_WEAPONS_SAME_AMMO */ void sub_20575(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

/* P_PRINT_CHECKPOINT_DATA */ void sub_22155(int iParam0)
{
     /* WRITE_STRING */ sub_7435( "CHECKPOINT DATA" );
    PRINTSTRING( "---Position: " );
     /* WRITE_VECTOR */ sub_22243( iParam0->_fU4 );
    PRINTSTRING( "---Heading: " );
     /* WRITE_FLOAT */ sub_22320( iParam0->_fU16 );
    PRINTSTRING( "---fRelativeGameCamHeading: " );
     /* WRITE_FLOAT */ sub_22320( iParam0->_fU20 );
    PRINTSTRING( "---fRelativeGameCamPitch: " );
     /* WRITE_FLOAT */ sub_22320( iParam0->_fU24 );
    PRINTSTRING( "---nHealth: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU28 );
    PRINTSTRING( "---wtRightHolster: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU56 );
    PRINTSTRING( "---wtLeftHolster: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU60 );
    PRINTSTRING( "---wtRifleHolster: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU64 );
    PRINTSTRING( "---wtRightHand: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU68 );
    PRINTSTRING( "---wtLeftHand: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU72 );
    PRINTSTRING( "---nWeaponRightHolsterAmmo: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU76 );
    PRINTSTRING( "---nWeaponLeftHolsterAmmo: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU80 );
    PRINTSTRING( "---nWeaponRifleHolsterAmmo: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU84 );
    PRINTSTRING( "---nWeaponRightHandAmmo: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU88 );
    PRINTSTRING( "---nWeaponLeftHandAmmo: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU92 );
    PRINTSTRING( "---fAdrenaline: " );
     /* WRITE_FLOAT */ sub_22320( iParam0->_fU32 );
    PRINTSTRING( "---nPayneKillers: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU36 );
    PRINTSTRING( "---nHour: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU40 );
    PRINTSTRING( "---nMinute: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU44 );
    PRINTSTRING( "---fSweatAmount: " );
     /* WRITE_FLOAT */ sub_22320( iParam0->_fU136 );
    PRINTSTRING( "---bTimeFrozen: " );
     /* WRITE_BOOL */ sub_23190( iParam0->_fU140 );
    PRINTSTRING( "---checkpointIndex: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU52 );
     /* WRITE_STRING */ sub_7435( "---nRightHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU96 );
     /* WRITE_STRING */ sub_7435( "---nRightHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU100 );
     /* WRITE_STRING */ sub_7435( "---nLeftHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU104 );
     /* WRITE_STRING */ sub_7435( "---nLeftHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU108 );
     /* WRITE_STRING */ sub_7435( "---nRifleHolsterAttachmentEnabled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU112 );
     /* WRITE_STRING */ sub_7435( "---nRifleHolsterAttachmentToggled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU116 );
     /* WRITE_STRING */ sub_7435( "---nRightHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU120 );
     /* WRITE_STRING */ sub_7435( "---nRightHandAttachmentToggled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU124 );
     /* WRITE_STRING */ sub_7435( "---nLeftHandAttachmentEnabled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU128 );
     /* WRITE_STRING */ sub_7435( "---nLeftHandAttachmentToggled: " );
     /* WRITE_INT */ sub_22489( iParam0->_fU132 );
    PRINTSTRING( "[CHECKPOINT DATA SIZE]: " );
     /* WRITE_INT */ sub_22489( l_U1 );
    PRINTSTRING( "[CHECKPOINT DATA REF SIZE]: " );
     /* WRITE_INT */ sub_22489( 144 );
    return;
}

/* WRITE_VECTOR */ void sub_22243(unknown uParam0, unknown uParam1, unknown uParam2)
{
    PRINTVECTOR( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_FLOAT */ void sub_22320(unknown uParam0)
{
    PRINTFLOAT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_INT */ void sub_22489(unknown uParam0)
{
    PRINTINT( uParam0 );
    PRINTNL();
    return;
}

/* WRITE_BOOL */ void sub_23190(boolean bParam0)
{
    if (bParam0)
    {
        PRINTSTRING( "TRUE" );
    }
    else
    {
        PRINTSTRING( "FALSE" );
    }
    PRINTNL();
    return;
}

/* F_ISPEDINTRIGGERBOXFIRSTTIME */ void sub_24269(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 =  /* F_ISPEDINTRIGGERBOX */ sub_19241( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

/* P_HANDLE_WALKING_INTO_ARCH */ void sub_24589()
{
    if ( /* F_ISPLAYERINTRIGGERBOX */ sub_24634( l_U537 ))
    {
        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1003(), 1 );
    }
    else
    {
        SET_PED_FORCED_TO_WALK(  /* PLAYER_PED_ID */ sub_1003(), 0 );
    }
    return;
}

/* F_ISPLAYERINTRIGGERBOX */ void sub_24634(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return  /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), uParam0 );
}

/* P_HANDLE_SHOOTER */ void sub_24734()
{
    if ( /* ISTIMERDONE */ sub_1395( ref l_U756 ))
    {
         /* WRITESCRIPTLOG */ sub_469( "SA", "Triggered enemy shooting", 0 );
         /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24819( ref l_U713 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 0, l_U726[0], "M6_CP_01_DED", ref l_U713, 2, 0 );
         /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 1, l_U726[0], "M6_CP_01_DED", ref l_U713, 2, 0 );
         /* PLAY_SINGLE_SPEECH */ sub_25225( "SOFF_HLFDEDGY", ref l_U713, 4, 1 );
        if (((IS_PED_DEAD( l_U726[0] )) == 0) AND ((DOES_PED_EXIST( l_U726[0] )) == 1))
        {
            PED_SET_ACTION_INTENTION( l_U726[0], 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
             /* STARTTIMER */ sub_2174( ref l_U765 );
        }
    }
    if ((NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() ))) AND (NOT (IS_PED_DEAD( l_U726[0] ))))
    {
        if ((( /* GET_DISTANCE_BETWEEN_PEDS */ sub_26264(  /* PLAYER_PED_ID */ sub_1003(), l_U726[0], 1 )) < 2.00000000) AND (l_U765._fU20))
        {
             /* WRITESCRIPTLOG */ sub_469( "SA", "Killing enemy", 0 );
             /* P_KILL_PED */ sub_26470( l_U726[0] );
             /* P_PLAY_SOFF_MDKTBNG */ sub_26548();
            l_U725 = 1;
        }
    }
    if (NOT l_U725)
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
        {
            if (( /* F_ISPLAYERINTRIGGERBOXFIRSTTIME */ sub_19165( ref l_U642, 0 )) || ( /* ISTIMERDONE */ sub_1395( ref l_U765 )))
            {
                 /* P_PLAY_SOFF_MDKTBNG */ sub_26548();
                l_U725 = 1;
            }
            else if (HAS_PED_BEEN_DAMAGED_BY_PED( l_U726[0],  /* PLAYER_PED_ID */ sub_1003(), 0 ))
            {
                 /* STARTTIMER */ sub_2174( ref l_U792 );
                l_U725 = 1;
            }
        }
    }
    if ( /* ISTIMERDONE */ sub_1395( ref l_U792 ))
    {
         /* P_PLAY_SOFF_MKTBRNG */ sub_26870();
    }
    return;
}

/* RESET_SCRIPT_SPEECH_STRUCT */ void sub_24819(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

/* ADD_PED_FOR_SCRIPT_SPEECH */ void sub_24942(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

/* PLAY_SINGLE_SPEECH */ void sub_25225(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return  /* PLAY_SINGLE_SPEECH_FROM_BLOCK */ sub_25270( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

/* PLAY_SINGLE_SPEECH_FROM_BLOCK */ void sub_25270(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return  /* PLAYSPEECHMAIN */ sub_25357( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

/* PLAYSPEECHMAIN */ int sub_25357(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT ( /* CANTHISSPEECHBEPLAYED */ sub_25409( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
     /* COPYHIDDENSPEECHSTUCT */ sub_25927( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

/* CANTHISSPEECHBEPLAYED */ int sub_25409(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

/* COPYHIDDENSPEECHSTUCT */ void sub_25927(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

/* GET_DISTANCE_BETWEEN_PEDS */ void sub_26264(unknown uParam0, unknown uParam1, boolean bParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar5 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        uVar8 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    }
    if (bParam2)
    {
        return VDIST( uVar5, uVar8 );
        break;
    }
    return VDIST( uVar5._fU0, uVar5._fU4, 0, uVar8._fU0, uVar8._fU4, 0 );
}

/* P_KILL_PED */ void sub_26470(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

/* P_PLAY_SOFF_MDKTBNG */ void sub_26548()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_PLAY_SOFF_MDKTBNG", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1003() )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24819( ref l_U359 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 0,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U359, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 1,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U359, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25225( "SOFF_MDKTBNG", ref l_U359, 2, 1 );
        }
    }
    return;
}

/* P_PLAY_SOFF_MKTBRNG */ void sub_26870()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_PLAY_SOFF_MKTBRNG", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1003() )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24819( ref l_U349 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 0,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U349, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 1,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U349, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25225( "SOFF_MKTBRNG", ref l_U349, 2, 1 );
        }
    }
    return;
}

/* P_PLAY_SOFF_MWTDBRD */ void sub_27084()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_PLAY_SOFF_MWTDBRD", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1003() )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24819( ref l_U369 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 0,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U369, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 1,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U369, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25225( "SOFF_MWTDBRD", ref l_U369, 2, 1 );
        }
    }
    return;
}

/* P_HANDLE_GLOBAL_FIRE_EVENTS */ void sub_27287()
{
     /* P_HANDLE_COUGHING_WIDGET */ sub_27327();
     /* P_HANDLE_COUGHING_DEBUG_KEYS */ sub_28052();
    if (g_U1587)
    {
         /* P_HANDLE_FIRE_REACTIONS */ sub_28397();
    }
    if ((g_U1584) AND (g_U1585))
    {
         /* P_HANDLE_SMOKE_FX_LOGIC */ sub_28939();
         /* P_HANDLE_MAX_COUGHING_SFX */ sub_29195();
         /* P_HANDLE_MAX_IDLING */ sub_30168();
    }
    return;
}

/* P_HANDLE_COUGHING_WIDGET */ void sub_27327()
{
    if (NOT l_U429)
    {
        START_WIDGET_GROUP( "Fire Widget" );
        ADD_WIDGET_BOOL( "Enable/Disable Smoke/Coughing", ref g_U1584 );
        ADD_WIDGET_FLOAT_SLIDER( "Fire react distance", ref g_U1589, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 );
        ADD_WIDGET_FLOAT_SLIDER( "Smoke Blend in rate", ref g_U1591, 0, 1, 0.01000000 );
        ADD_WIDGET_FLOAT_SLIDER( "Smoke Blend out rate", ref g_U1592, 0, 1, 0.01000000 );
        ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 );
        ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 );
        STOP_WIDGET_GROUP();
        l_U429 = 1;
    }
    return;
}

/* P_HANDLE_COUGHING_DEBUG_KEYS */ void sub_28052()
{
    if ( /* F_DEBUG_CHECK_FOR_SCRIPT_INVINCIBILITY_KEY */ sub_28093())
    {
        if (g_U1584)
        {
             /* WRITESCRIPTLOG */ sub_469( "SA", "Disabling Oxygen Drain", 0 );
            PRINT_STRING_WITH_LITERAL_STRING( "STRING", "Disabling Oxygen Drain", 2000, 1 );
            g_U1584 = 0;
        }
        else
        {
             /* WRITESCRIPTLOG */ sub_469( "SA", "Enabling Oxygen Drain", 0 );
            PRINT_STRING_WITH_LITERAL_STRING( "STRING", "Enabling Oxygen Drain", 2000, 1 );
            g_U1584 = 1;
        }
    }
    return;
}

/* F_DEBUG_CHECK_FOR_SCRIPT_INVINCIBILITY_KEY */ int sub_28093()
{
    if ((IS_MARKETING_KEYBOARD_KEY_JUST_PRESSED( 49 )) || (IS_KEYBOARD_KEY_JUST_PRESSED( 49 )))
    {
        return 1;
    }
    return 0;
}

/* P_HANDLE_FIRE_REACTIONS */ void sub_28397()
{
    if (( /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), g_U1361 )) || ( /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), g_U1340 )))
    {
         /* P_FIRE_REACT_CHECK */ sub_28474( ref l_U2, 14 );
    }
    else if (( /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), g_U1424 )) || (( /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), g_U1403 )) || ( /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), g_U1382 ))))
    {
         /* P_FIRE_REACT_CHECK */ sub_28474( ref l_U45, 33 );
    }
    else if ( /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), g_U1445 ))
    {
         /* P_FIRE_REACT_CHECK */ sub_28474( ref l_U145, 16 );
    }
    else if (( /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), g_U1466 )) || ( /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), g_U1487 )))
    {
         /* P_FIRE_REACT_CHECK */ sub_28474( ref l_U194, 8 );
    }
    else if ( /* F_ISPEDINTRIGGERBOX */ sub_19241(  /* PLAYER_PED_ID */ sub_1003(), g_U1508 ))
    {
         /* P_FIRE_REACT_CHECK */ sub_28474( ref l_U219, 3 );
    };;;;;
    return;
}

/* P_FIRE_REACT_CHECK */ void sub_28474(unknown uParam0, int iParam1)
{
    int I;

    I = 0;
    for ( I = 0; I < iParam1; I++ )
    {
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
        {
            if (( /* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ sub_28552(  /* PLAYER_PED_ID */ sub_1003(), (uParam0^)[I] )) <= g_U1589)
            {
                PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1003(), 55, 1000, (uParam0^)[I] );
            }
        }
    }
    return;
}

/* GET_DISTANCE_BETWEEN_PED_AND_VECTOR */ void sub_28552(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
    }
    else
    {
        return -1.00000000;
    }
    return VDIST( uVar6, uParam1 );
}

/* P_HANDLE_SMOKE_FX_LOGIC */ void sub_28939()
{
    switch (l_U267)
    {
        case 0:
        if (l_U268 == 2)
        {
            l_U267 = 1;
        }
        break;
        case 1:
         /* WRITESCRIPTLOG */ sub_469( "SA", "SMKFX_BLEND_IN", 0 );
        l_U267 = 2;
        break;
        case 2:
        if (l_U268 != 2)
        {
            l_U267 = 3;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_469( "SA", "SMKFX_BLEND_OUT", 0 );
        l_U267 = 4;
        break;
        case 4:
         /* WRITESCRIPTLOG */ sub_469( "SA", "SMKFX_IDLE", 0 );
        l_U267 = 0;
        break;
    }
    return;
}

/* P_HANDLE_MAX_COUGHING_SFX */ void sub_29195()
{
    switch (l_U266)
    {
        case 0: break;
        case 1:
         /* WRITESCRIPTLOG */ sub_469( "SA", "CL_SETUP", 0 );
         /* RESETTIMER */ sub_2713( ref g_U1538 );
         /* CREATETIMER */ sub_2024( ref g_U1538, GET_RANDOM_INT_IN_RANGE( g_U1601, g_U1602 ), 1, 0 );
         /* STARTTIMER */ sub_2174( ref g_U1538 );
        l_U266 = 2;
        break;
        case 2:
        if ( /* ISTIMERDONE */ sub_1395( ref g_U1538 ))
        {
             /* WRITESCRIPTLOG */ sub_469( "SA", "CL_MAX_CAN_COUGH", 0 );
            if ((GET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1003() )) > g_U1593)
            {
                 /* P_RANDOM_COUGH_STAGE_1 */ sub_29428();
            }
            else
            {
                 /* P_RANDOM_COUGH_STAGE_2 */ sub_29836();
            }
            l_U266 = 1;
        }
        break;
        case 3:
         /* WRITESCRIPTLOG */ sub_469( "SA", "CL_MAX_CANNOT_COUGH", 0 );
         /* RESETTIMER */ sub_2713( ref g_U1538 );
        l_U266 = 0;
        break;
    }
    return;
}

/* P_RANDOM_COUGH_STAGE_1 */ void sub_29428()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_RANDOM_COUGH_STAGE_1", 0 );
    if ((GET_RANDOM_INT_IN_RANGE( 1, 3 )) == 1)
    {
         /* P_LIGHT_COUGH */ sub_29515();
    }
    else
    {
         /* P_MED_COUGH */ sub_29673();
    }
    return;
}

/* P_LIGHT_COUGH */ void sub_29515()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_LIGHT_COUGH", "###" );
    PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1003(), 51, 1000, 0.00000000, 0.00000000, 0.00000000 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
    {
        PLAY_SOUND_FROM_PED( g_U1598, "MAX_COUGHS_SMALL",  /* PLAYER_PED_ID */ sub_1003() );
    }
    return;
}

/* P_MED_COUGH */ void sub_29673()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_MED_COUGH", "###" );
    PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1003(), 52, 1000, 0.00000000, 0.00000000, 0.00000000 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
    {
        PLAY_SOUND_FROM_PED( g_U1598, "MAX_COUGHS_MEDIUM",  /* PLAYER_PED_ID */ sub_1003() );
    }
    return;
}

/* P_RANDOM_COUGH_STAGE_2 */ void sub_29836()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_RANDOM_COUGH_STAGE_2", 0 );
    if ((GET_RANDOM_INT_IN_RANGE( 1, 4 )) == 1)
    {
         /* P_MED_COUGH */ sub_29673();
    }
    else
    {
         /* P_HEAVY_COUGH */ sub_29933();
    }
    return;
}

/* P_HEAVY_COUGH */ void sub_29933()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_HEAVY_COUGH", "###" );
    PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1003(), 53, 1000, 0.00000000, 0.00000000, 0.00000000 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
    {
        PLAY_SOUND_FROM_PED( g_U1598, "MAX_COUGHS_LARGE_A",  /* PLAYER_PED_ID */ sub_1003() );
    }
    return;
}

/* P_HANDLE_MAX_IDLING */ void sub_30168()
{
    boolean bVar2;

    bVar2 = true;
    switch (l_U268)
    {
        case 0: break;
        case 1:
        if ((GET_PED_SPEED(  /* PLAYER_PED_ID */ sub_1003() )) > 0.10000000)
        {
            bVar2 = false;
        }
        if (bVar2)
        {
            if ((NOT g_U1529._fU16) AND (NOT g_U1529._fU20))
            {
                 /* STARTTIMER */ sub_2174( ref g_U1529 );
            }
        }
        else
        {
             /* RESETTIMER */ sub_2713( ref g_U1529 );
        }
        if ( /* ISTIMERDONE */ sub_1395( ref g_U1529 ))
        {
             /* P_PLAY_RANDOM_SMOKE_WARNING */ sub_30344();
             /* RESETTIMER */ sub_2713( ref g_U1529 );
            l_U266 = 1;
            l_U268 = 2;
        }
        break;
        case 2:
        if ((NOT g_U1547._fU16) AND (NOT g_U1547._fU20))
        {
             /* STARTTIMER */ sub_2174( ref g_U1547 );
        }
        if ( /* ISTIMERDONE */ sub_1395( ref g_U1547 ))
        {
            SET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1003(), (GET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1003() )) - g_U1596, 0 );
             /* RESETTIMER */ sub_2713( ref g_U1547 );
             /* STARTTIMER */ sub_2174( ref g_U1547 );
        }
        if ((GET_PED_HEALTH(  /* PLAYER_PED_ID */ sub_1003() )) < g_U1594)
        {
            l_U268 = 3;
        }
        if ((GET_PED_SPEED(  /* PLAYER_PED_ID */ sub_1003() )) > 0.10000000)
        {
             /* RESETTIMER */ sub_2713( ref g_U1529 );
             /* RESETTIMER */ sub_2713( ref g_U1547 );
            l_U266 = 3;
            l_U268 = 1;
        }
        break;
        case 3:
         /* P_KILL_MAX_FROM_SMOKE_INHALE */ sub_31005();
        l_U268 = 0;
        break;
    }
    return;
}

/* P_PLAY_RANDOM_SMOKE_WARNING */ void sub_30344()
{
    if ((GET_RANDOM_FLOAT_IN_RANGE( 0, 1 )) > 0.50000000)
    {
         /* P_PLAY_SOFF_MDSNTM */ sub_30406();
    }
    else
    {
         /* P_PLAY_SOFF_SHTPRMP */ sub_30599();
    }
    return;
}

/* P_PLAY_SOFF_MDSNTM */ void sub_30406()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_PLAY_SOFF_MDSNTM", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1003() )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24819( ref l_U409 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 0,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U409, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 1,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U409, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25225( "SOFF_MDSNTM", ref l_U409, 2, 1 );
        }
    }
    return;
}

/* P_PLAY_SOFF_SHTPRMP */ void sub_30599()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_PLAY_SOFF_SHTPRMP", 0 );
    if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
    {
        if (NOT (IS_SCRIPTED_SPEECH_PLAYING(  /* PLAYER_PED_ID */ sub_1003() )))
        {
             /* RESET_SCRIPT_SPEECH_STRUCT */ sub_24819( ref l_U419 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 0,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U419, 2, 0 );
             /* ADD_PED_FOR_SCRIPT_SPEECH */ sub_24942( 1,  /* PLAYER_PED_ID */ sub_1003(), "MAX", ref l_U419, 2, 0 );
             /* PLAY_SINGLE_SPEECH */ sub_25225( "SOFF_SHTPRMP", ref l_U419, 2, 1 );
        }
    }
    return;
}

/* P_KILL_MAX_FROM_SMOKE_INHALE */ void sub_31005()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_KILL_MAX_FROM_SMOKE_INHALE", "###" );
    SET_PLAYER_CONTROL(  /* PLAYER_ID */ sub_1041(), 0, 0 );
    DISPLAY_HUD( 0 );
    ADD_SPECIAL_FX_MODIFIER( "FIRE_COUGH", 1.00000000, 0.00000000, g_U1591, g_U1592 );
    if (g_U665 == 1)
    {
        ISEQ_REGISTER_ENTITY( -654795811, "MAX",  /* PLAYER_PED_ID */ sub_1003(), 0 );
        ISEQ_START( -654795811 );
    }
    else
    {
        SET_PLAYER_CAN_USE_COVER(  /* PLAYER_ID */ sub_1041(), 0 );
        if (NOT (IS_PED_DEAD(  /* PLAYER_PED_ID */ sub_1003() )))
        {
            PED_SET_ACTION_INTENTION(  /* PLAYER_PED_ID */ sub_1003(), 47, 1000, 0.00000000, 0.00000000, 0.00000000 );
        }
    }
    g_U1583 = 1;
     /* RESETTIMER */ sub_2713( ref g_U1556 );
     /* CREATETIMER */ sub_2024( ref g_U1556, 2500, 1, 0 );
     /* STARTTIMER */ sub_2174( ref g_U1556 );
    return;
}

/* P_UNLOAD_ASSETS */ void sub_31440()
{
     /* WRITESCRIPTLOG */ sub_469( "SA", "P_UNLOAD_ASSETS", 0 );
     /* UNLOADMODEL */ sub_31502( -569568960 );
    return;
}

/* UNLOADMODEL */ void sub_31502(unknown uParam0)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 1)
    {
        SET_MODEL_AS_NO_LONGER_NEEDED( uParam0 );
    }
    else
    {
         /* WRITE_STRING */ sub_7435( "[SP]### ERROR! (UnloadModel) Trying to unload a model that isn't in the img! ###" );
    }
    return;
}


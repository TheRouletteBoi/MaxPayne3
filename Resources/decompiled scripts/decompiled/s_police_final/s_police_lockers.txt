void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U73 = {0, 0, 0};
    StrCopy( ref l_U76, "DUMMY", 32 );
    l_U84 = 1;
    l_U89 = 0;
    l_U90 = 0;
    l_U91 = 0;
    l_U94 = 0;
    l_U140 = 0;
    l_U141 = 0;
    l_U142 = 1500;
    l_U161 = 12;
    l_U219 = 0;
    l_U220 = 0;
    l_U222 = 1;
    l_U223 = 0;
    l_U235 = 0;
    l_U1182 = {19.91000000, -5.31000000, 1.09000000};
    l_U1185 = {19.75000000, -5.45000000, 1.40000000};
    l_U1188 = -40.00000000;
    sub_485( "SP", "Script s_police_lockers.sc is starting up...", 0 );
    sub_534();
    l_U220 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_782();
        if (l_U223 == 0)
        {
            sub_12452();
        }
        WAIT( 0 );
    }
    sub_5451( 1 );
    sub_54580();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_police_lockers" );
    sub_485( "SP", "Script s_police_lockers.sc is terminating...", 0 );
    return;
}

void sub_485(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_534()
{
    sub_485( "GA", "P_LRG_POPULATE_SCRIPT_ARRAYS start", 0 );
    l_U208[0] = g_U3227;
    l_U208[1] = -657242783;
    l_U208[2] = g_U812;
    l_U208[3] = g_U813;
    l_U208[4] = g_U818;
    l_U208[5] = g_U819;
    l_U215[0] = -862236369;
    l_U215[1] = 434544317;
    l_U215[2] = 1308526797;
    sub_485( "GA", "P_LRG_POPULATE_SCRIPT_ARRAYS end", 0 );
    return;
}

void sub_782()
{
    if (g_U821 == 6)
    {
        switch (l_U223)
        {
            case 0:
            if ((sub_937()) || (IS_PED_DEAD( sub_864() )))
            {
                l_U223 = 1;
                sub_485( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            sub_1432( 1 );
            if (sub_4090())
            {
                l_U223 = 3;
            }
            else if ((sub_4130( 0 )) == 1)
            {
                l_U223 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_864() )))
            {
                l_U223 = 3;
                sub_485( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_485( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_864() ))) AND (NOT (IS_PLAYER_DEAD( sub_886() ))))
            {
                SET_PLAYER_CONTROL( sub_886(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_864() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_864(), 0 );
                }
            }
            if ((g_U862[7]._fU40 != 4) AND (g_U862[7]._fU40 != 0))
            {
                sub_485( "CR", "Shutting down script for MCE_ATRIUM.", 0 );
                sub_5352( ref g_U862[7] );
                SET_EXITFLAG_FOR_SCRIPT( g_U862[7]._fU32 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            AUDIO_MUSIC_STOP_ONESHOT();
            sub_5451( 0 );
            sub_7849( 6 );
            l_U223 = 4;
            sub_485( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_485( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_8230( ref l_U172, sub_864() );
            l_U223 = 5;
            sub_485( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_485( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U220 = 1;
            l_U222 = 0;
            l_U223 = 0;
            sub_485( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_864()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_886() );
    }
    return 0;
}

void sub_886()
{
    return GET_PLAYER_ID();
}

int sub_937()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_864() )))
        {
            SET_PED_FORCED_TO_WALK( sub_864(), 0 );
            SET_PLAYER_FORCED_AIM( sub_886(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_886(), 1 );
            if ((IS_PED_VISIBLE( sub_864() )) == 0)
            {
                SET_PED_VISIBLE( sub_864(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1432(boolean bParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_864() )))
    {
        if (NOT (IS_PED_IN_COMBAT( sub_864() )))
        {
            if ((NOT l_U152._fU16) AND (NOT l_U152._fU20))
            {
                sub_485( "AT", "Starting painkiller dialogue timer.", 0 );
                sub_1558( ref l_U152, 3500, 1, 0 );
                sub_1694( ref l_U152 );
            }
            if ((l_U152._fU16) AND (sub_1810()))
            {
                sub_485( "AT", "Dialogue detected. Restarting painkiller dialogue timer.", 0 );
                sub_1558( ref l_U152, 3500, 1, 0 );
                sub_1694( ref l_U152 );
            }
            iVar3 = GET_PAYNEKILLER_AMT();
            if (iVar3 > l_U161)
            {
                if (NOT sub_1810())
                {
                    if ((l_U152._fU16) || (sub_2013( ref l_U152 )))
                    {
                        if (g_U4303 < 6)
                        {
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 500 )) < 300)
                            {
                                sub_485( "GA", "Playing painkiller monologue.", 0 );
                                sub_2266( ref l_U162 );
                                sub_2348( 0, sub_864(), "MAX", ref l_U162, 2, 0 );
                                sub_2348( 1, sub_864(), "MAX", ref l_U162, 2, 0 );
                                sub_2590( "SPOL_PLFNDPL", ref l_U162, 8, 1 );
                                g_U4303++;
                            }
                            else
                            {
                                sub_485( "GA", "Not playing painkiller speech, failed random chance test.", 0 );
                            }
                        }
                        else
                        {
                            sub_485( "GA", "Not Playing painkiller speech, already played all 6 lines.", 0 );
                        }
                    }
                    else
                    {
                        sub_485( "GA", "Not playing painkiller speech, not long enough since last dialogue.", 0 );
                    }
                }
                else
                {
                    sub_485( "GA", "Not playing painkiller speech, another speech is currently playing.", 0 );
                }
            }
            l_U161 = iVar3;
        }
        if (sub_3720( l_U162 ))
        {
            if (NOT HAS_CUTSCENE_FINISHED())
            {
                sub_485( "GA", "Killing painkiller speech for cutscene playing.", 0 );
                sub_3960( ref l_U162, 0 );
            }
        }
    }
    if (bParam0)
    {
        sub_1558( ref l_U152, 20000, 1, 0 );
        sub_1694( ref l_U152 );
    }
    return;
}

void sub_1558(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1694(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_1810()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

int sub_2013(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2266(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_2348(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_2590(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_2614( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_2614(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_2669( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_2669(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_2704( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_3198( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_2704(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_3198(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_3720(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_3733( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_3733(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_3960(int iParam0, unknown uParam1)
{
    if (NOT (sub_3733( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_4090()
{
    return g_U648;
}

int sub_4130(int iParam0)
{
    iParam0 = 1;
    switch (l_U141)
    {
        case 0:
        if (NOT (sub_4191( ref l_U143 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_864() )))
            {
                l_U142 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1558( ref l_U143, l_U142, 1, 1 );
            sub_1694( ref l_U143 );
        }
        if (sub_2013( ref l_U143 ))
        {
            sub_485( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_864() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_886() )))
            {
                SET_PLAYER_CONTROL( sub_886(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U141 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U141 = 2;
            }
            else
            {
                l_U141 = 3;
            }
        }
        break;
        case 2:
        sub_485( "NS", "Player will QUIT", 0 );
        sub_4650();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_485( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4650();
        return 1;
        break;
    }
    return 0;
}

int sub_4191(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4650()
{
    sub_485( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4700( ref l_U143 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_886() )))
    {
        SET_PLAYER_CONTROL( sub_886(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U140 = 0;
    l_U140 = l_U140;
    l_U141 = 0;
    return;
}

void sub_4700(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5352(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5451(boolean bParam0)
{
    sub_485( "GA", "P_CLEANUP_LRG start", 0 );
    sub_5499( g_U4375 );
    sub_5499( g_U4376 );
    sub_5499( g_U4377 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_06_PP_concat" )) || (CUTSCENE_IS_LOADED( "MID_06_PP_concat" )))
    {
        CLEAR_NAMED_CUTSCENE( "MID_06_PP_concat" );
    }
    ISEQ_TERMINATE( -724192985 );
    ISEQ_TERMINATE( 1507052255 );
    sub_5676( -724192985, ref g_U2662 );
    sub_5676( 1507052255, ref g_U2662 );
    ISEQ_TERMINATE( -1750685803 );
    sub_5676( -1750685803, ref g_U2662 );
    ISEQ_TERMINATE( 1772865089 );
    sub_5676( 1772865089, ref g_U2662 );
    ISEQ_TERMINATE( -822154135 );
    sub_5676( -822154135, ref g_U2662 );
    ENABLE_AMBIENT_ZONE( "S_POLICE_ZONE_CAFE_GUNFIGHT", 0 );
    ENABLE_WALLA_ZONE( "S_POLICE_WZ_CAFE", 0 );
    if (NOT bParam0)
    {
        sub_6213( ref g_U4308 );
        sub_6213( ref g_U4321 );
        sub_6213( ref g_U4315 );
        sub_6213( ref g_U4311 );
        sub_5499( g_U4330 );
        sub_5499( g_U4332 );
        sub_5499( g_U4331 );
        sub_5499( g_U4333 );
    }
    sub_6411( ref l_U224 );
    sub_6444( g_U667._fU0 );
    sub_6444( g_U793._fU0 );
    if (NOT bParam0)
    {
        sub_6411( ref g_U4325 );
    }
    sub_6552( ref l_U1096, 0 );
    sub_7432();
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U364._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U343._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U317._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U631._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U662._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U683._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U744._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U437._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U458._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U765._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1027._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U845._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U786._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( "tb_LRG_PlayerInCafeteria[0]" );
    GAMEPLAY_HELPER_BOX_DESTROY( "tb_LRG_PlayerInCafeteria[1]" );
    sub_485( "GA", "P_CLEANUP_LRG end", 0 );
    return;
}

void sub_5499(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5676(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5788( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_5788(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_6213(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6247( (uParam0^)[I] );
    }
    return;
}

void sub_6247(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_6411(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_6444( (uParam0^)[I] );
    }
    return;
}

void sub_6444(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_6552(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_6596( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_6596( iParam0, 0 );
        sub_6796( iParam0, 0 );
        if ((IS_PED_DEAD( sub_864() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_864() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_864(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_6596(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_6796(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_6947( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_6947(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_7008( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_7008( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_7008(int iParam0)
{
    if (((IS_PED_DEAD( sub_864() )) == 0) AND ((IS_PLAYER_DEAD( sub_886() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_864() )) == 1) || (((IS_PED_GETTING_UP( sub_864() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_864() )) == 1) || (((IS_PED_IN_COVER( sub_864() )) == 1) || (((IS_PED_DUCKING( sub_864() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_864() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_7432()
{
    sub_485( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_485( "CCB", "Stopping the Precinct_Lockers context...", 0 );
    END_CONTEXT( "Precinct_Lockers" );
    return;
}

void sub_7849(unknown uParam0)
{
    char[64] cVar3;
    unknown uVar19;

    if (NOT (IS_PED_DEAD( sub_864() )))
    {
        sub_7901( sub_864(), g_U2953[uParam0], g_U3083[uParam0] );
        FREEZE_PED_POSITION( sub_864(), 1 );
        if (NOT (IS_STRING_NULL( ref g_U1091[uParam0]._fU0 )))
        {
            StrCopy( ref cVar3, "Loading room: ", 64 );
            ConcatString(ref cVar3, ref g_U1091[uParam0]._fU0, 64);
            uVar19 = GET_INTERIOR_FROM_NAME( ref g_U1091[uParam0]._fU64, 0 );
            SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, GET_HASH_KEY( ref g_U1091[uParam0]._fU0 ) );
        }
        FREEZE_PED_POSITION( sub_864(), 0 );
    }
    return;
}

void sub_7901(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_8230(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_485( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_8414( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_9491( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9783( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_10143( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9783( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_10143( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9783( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_10143( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_10428( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_10143( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_10428( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_10143( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_10921( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_11082( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_864(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_485( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_8414(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_8446( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_8446(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_9491(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9783(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_10099( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_10099(unknown uParam0)
{
    return;
}

void sub_10143(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_10428(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_10099( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_10921(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_11082(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_8446( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_11154( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_11154(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_12452()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    int I;

    iVar2 = l_U220;
    switch (l_U220)
    {
        case 0: break;
        case 1:
        sub_485( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_12648();
        sub_13345();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U220 = 2;
        sub_485( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_485( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        g_U822[6] = 0;
        sub_17275();
        sub_20816();
        l_U220 = 3;
        sub_485( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_23438( ref g_U2613 )) AND ((sub_23247( ref g_U2662 )) AND ((sub_23126( ref g_U2468 )) AND (sub_23000( ref g_U2741 )))))
        {
            if ((NOT l_U172._fU0) AND (g_U820 == 6))
            {
                l_U220 = 4;
                sub_485( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U220 = 6;
                sub_485( "SP", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
            }
        }
        break;
        case 4:
        sub_485( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U842[6] = 1;
        l_U222 = 0;
        if (NOT (sub_23792( ref l_U172 )))
        {
            sub_10428( sub_864(), 434544317, 200, 0, 0 );
            sub_9783( sub_864(), -862236369, 0, 200, 0 );
            sub_9783( sub_864(), -862236369, 1, 200, 0 );
            l_U220 = 5;
            sub_485( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U220 = 6;
            sub_485( "GA", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_864() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_864(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_864(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_864(), 0, 0 ) ))))
            {
                g_U821 = 6;
                sub_24320( ref l_U172, g_U821, sub_864(), g_U2953[6], g_U3083[6], g_U3127[6], g_U3171[6], 1 );
                l_U220 = 6;
                sub_485( "GA", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
            }
        }
        break;
        case 6:
        if (l_U221)
        {
            l_U233 = 1;
            l_U385 = 1;
            l_U481 = 1;
        }
        if (sub_28025())
        {
            if (sub_30543())
            {
                l_U220 = 7;
                sub_485( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 7:
        if (l_U221)
        {
            g_U822[6] = 1;
            AUD_SET_IS_POWER_ON( 0 );
            SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
            sub_31548();
        }
        if (g_U842[6])
        {
            sub_33261();
            sub_33401( ref g_U3757, 1 );
            sub_33401( ref g_U3764, 1 );
            sub_33614( ref g_U3757, 1 );
            sub_33614( ref g_U3764, 1 );
            sub_33789( ref uVar3, -1034343557, 16.87891000, -27.38570000, 1.10029000, 0.00000000, 0.00000000, 0.00000000 );
            sub_33789( ref uVar17, -1034343557, 30.07707000, -27.38570000, 1.10029000, 0.00000000, 0.00000000, 0.00000000 );
            sub_33789( ref uVar10, -1034343557, 21.91167000, -21.81485000, 1.10029000, 0.00000000, 0.00000000, 0.00000000 );
            sub_33789( ref uVar24, -1034343557, 25.07726000, -21.81485000, 1.10029000, 0.00000000, 0.00000000, 0.00000000 );
            sub_33973( ref uVar3, -100.00000000, 100.00000000 );
            sub_33973( ref uVar17, -100.00000000, 100.00000000 );
            sub_33973( ref uVar10, -100.00000000, 100.00000000 );
            sub_33973( ref uVar24, -100.00000000, 100.00000000 );
            sub_34123( ref uVar3, 1 );
            sub_34123( ref uVar17, 1 );
            sub_34198( ref uVar3, 1, 1, 1065353216 );
            sub_34198( ref uVar17, 0, 1, 1065353216 );
            ENABLE_AMBIENT_ZONE( "S_POLICE_ZONE_CAFE_GUNFIGHT", 1 );
            ENABLE_WALLA_ZONE( "S_POLICE_WZ_CAFE", 1 );
            sub_17379( -1674641852, ref g_U2468 );
            l_U220 = 8;
            sub_485( "GA", "eCheckpointState = CP_HANDLE_LOCKER_ROOM_BLEND_TO_GAMEPLAY", 0 );
        }
        break;
        case 8:
        if (l_U222)
        {
            if (g_U821 != 6)
            {
                g_U821 = 6;
                sub_24320( ref l_U172, g_U821, sub_864(), g_U2953[6], g_U3083[6], g_U3127[6], g_U3171[6], 1 );
            }
            l_U219 = 1;
            sub_34607();
            l_U220 = 9;
            sub_485( "GA", "eCheckpointState = CP_GAMEPLAY_GYM_CAF_COMBAT", 0 );
        }
        else if (l_U221)
        {
            sub_35309( 1, 0, 0, 1 );
            sub_35468();
            if (NOT l_U219)
            {
                sub_35765();
                l_U219 = 1;
            }
            sub_34607();
            sub_485( "AT", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_3_5", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_3_5", 0, 0, -1, -1, -1082130432, 0 );
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
        if (sub_36115())
        {
            sub_36306( 1, 1 );
            l_U220 = 9;
            sub_485( "GA", "eCheckpointState = CP_GAMEPLAY_GYM_CAF_COMBAT", 0 );
        }
        break;
        case 9:
        if (l_U221)
        {
            sub_36651( 1 );
            sub_1558( ref l_U308, 2000, 1, 0 );
            sub_1694( ref l_U308 );
            sub_19771( "EXPL_CAM", ref g_U2741 );
            sub_17379( -1257962541, ref g_U2468 );
            sub_17379( -1514674887, ref g_U2468 );
            sub_17379( 743953242, ref g_U2468 );
        }
        if (NOT l_U232)
        {
            if (sub_23126( ref g_U2468 ))
            {
                sub_37551();
                l_U232 = 1;
            }
        }
        sub_38125();
        if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3806._fU0, g_U3806._fU4 ) ))
        {
            if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3806._fU0, g_U3806._fU4 ) ))
            {
                DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3806._fU0, g_U3806._fU4 ), 0 );
            }
        }
        if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3813._fU0, g_U3813._fU4 ) ))
        {
            if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3813._fU0, g_U3813._fU4 ) ))
            {
                DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3813._fU0, g_U3813._fU4 ), 0 );
            }
        }
        if (sub_2013( ref l_U308 ))
        {
            sub_41421();
        }
        sub_41513( ref g_U4315, -1.00000000, 0, 1 );
        sub_41513( ref g_U4321, -1.00000000, 0, 1 );
        sub_41677();
        if (l_U233 == 4)
        {
            if (NOT l_U338)
            {
                if (sub_42041())
                {
                    sub_485( "GA", "Force music PRECINCT_FINAL mood PRECINCT_01_3_4_5, fade in over 2 seconds", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_3_4_5", "", 0, 2000, -1, -1082130432, 0 );
                    sub_485( "AT", "Requesting oneshot: PRECINCT_ONESHOT_7", 0 );
                    AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_7", 0 );
                    sub_43138( ref g_U4315, sub_864() );
                    sub_43322( ref g_U4315[2], 2, 1 );
                    l_U338 = 1;
                }
            }
            if ((NOT l_U235) AND ((sub_43652( ref g_U4315 )) < 4))
            {
                if (sub_43761( "Y", "Less", 65507 ))
                {
                    sub_44009();
                }
            }
            if ((sub_43652( ref g_U4315 )) == 0)
            {
                if (NOT l_U339)
                {
                    sub_485( "AT", "Force music PRECINCT_FINAL mood PRECINCT_01_1", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1", "", 0, 6000, 10000, -1082130432, 0 );
                    l_U339 = 1;
                    sub_1694( ref l_U1048 );
                }
                if (sub_44331( l_U845 ))
                {
                    sub_1432( 0 );
                    if ((sub_44379()) AND (NOT sub_1810()))
                    {
                        if (sub_2013( ref l_U1048 ))
                        {
                            sub_38424( "SPOL_DWDLGYM", ref l_U866 );
                        }
                    }
                }
            }
        }
        if (NOT l_U631._fU64)
        {
            if (l_U342)
            {
                if ((sub_44331( l_U343 )) || (sub_44331( l_U364 )))
                {
                    sub_485( "AT", "AI can enter restrooms!", 0 );
                    sub_44566( g_U4315[1] );
                    sub_44566( g_U4315[0] );
                    sub_44566( g_U4315[2] );
                    sub_44566( g_U4315[3] );
                    sub_44566( g_U4315[4] );
                    l_U342 = 0;
                }
            }
            else if ((NOT (sub_44331( l_U343 ))) AND (NOT (sub_44331( l_U364 ))))
            {
                sub_485( "AT", "AI must leave restrooms!", 0 );
                sub_30014( ref l_U340, g_U4315[1], 1 );
                sub_30014( ref l_U341, g_U4315[1], 1 );
                sub_30014( ref l_U340, g_U4315[0], 1 );
                sub_30014( ref l_U341, g_U4315[0], 1 );
                sub_30014( ref l_U340, g_U4315[2], 1 );
                sub_30014( ref l_U341, g_U4315[2], 1 );
                sub_30014( ref l_U340, g_U4315[3], 1 );
                sub_30014( ref l_U341, g_U4315[3], 1 );
                sub_30014( ref l_U340, g_U4315[4], 1 );
                sub_30014( ref l_U341, g_U4315[4], 1 );
                l_U342 = 1;
            }
        }
        if (NOT l_U480)
        {
            if (sub_44958( -1674641852, ref g_U2468 ))
            {
                l_U480 = 1;
            }
        }
        if (l_U480)
        {
            if (sub_45062())
            {
                if (sub_42056( ref l_U631, 0 ))
                {
                    sub_44566( g_U4315[1] );
                    sub_44566( g_U4315[0] );
                    sub_44566( g_U4315[2] );
                    sub_44566( g_U4315[3] );
                    sub_44566( g_U4315[4] );
                    if (NOT l_U235)
                    {
                        sub_6247( g_U4315[3] );
                        sub_6247( g_U4315[4] );
                    }
                    sub_45936();
                    sub_485( "AT", "Playing oneshot: PRECINCT_ONESHOT_2", 0 );
                    AUDIO_MUSIC_PLAY_ONESHOT();
                    sub_485( "AT", "Force music PRECINCT_FINAL mood PRECINCT_01_1_2", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2", "", 0, 3000, -1, -1082130432, 0 );
                    ENABLE_AMBIENT_ZONE( "S_POLICE_ZONE_CAFE_GUNFIGHT", 0 );
                    ENABLE_WALLA_ZONE( "S_POLICE_WZ_CAFE", 0 );
                    l_U704 = 1;
                }
            }
        }
        if (l_U631._fU64)
        {
            if (NOT l_U436)
            {
                if (ISEQ_QUERY_STATE( -1750685803, 3 ))
                {
                    sub_47390( ref g_U4321[0], ref l_U551[0]._fU44, ref l_U551[0]._fU0, l_U551[0]._fU36, l_U551[0]._fU40, 5.00483400, -7.16432600, 1.90826000, "VIG04A_UFE1" );
                    sub_47390( ref g_U4321[1], ref l_U551[1]._fU44, ref l_U551[1]._fU0, l_U551[1]._fU36, l_U551[1]._fU40, 6.74331900, -7.16691400, 1.70000000, "VIG04A_UFE2" );
                }
                if (ISEQ_QUERY_STATE( 1772865089, 3 ))
                {
                    sub_47390( ref g_U4321[2], ref l_U551[2]._fU44, ref l_U551[2]._fU0, l_U551[2]._fU36, l_U551[2]._fU40, 4.71949000, -4.27667700, 1.70000000, "pi_IS_VIG04B_UFE" );
                }
                if (sub_47820())
                {
                    sub_43138( ref g_U4321, sub_864() );
                    l_U436 = 1;
                }
            }
            if (NOT l_U479)
            {
                if (ISEQ_QUERY_STATE( -822154135, 3 ))
                {
                    sub_47390( ref g_U4311[0], ref l_U588[0]._fU44, ref l_U588[0]._fU0, l_U588[0]._fU36, l_U588[0]._fU40, 12.08524000, -6.76195900, 1.70000000, "pi_IS_VIG04C_RIOTER1" );
                    sub_47390( ref g_U4311[1], ref l_U588[1]._fU44, ref l_U588[1]._fU0, l_U588[1]._fU36, l_U588[1]._fU40, 6.27424800, -11.99631000, 1.70000000, "pi_IS_VIG04C_RIOTER2" );
                    sub_47390( ref g_U4311[2], ref l_U588[2]._fU44, ref l_U588[2]._fU0, l_U588[2]._fU36, l_U588[2]._fU40, 6.27424800, -11.99631000, 1.70000000, "pi_IS_VIG04C_RIOTER3" );
                }
                if ((sub_48865()) || (((sub_43652( ref g_U4321 )) == 0) || ((sub_48619()) || ((sub_44331( l_U458 )) || (sub_44331( l_U437 ))))))
                {
                    sub_485( "AT", "Rioters retreating!", 0 );
                    sub_48998();
                    sub_46074( ref g_U4308 );
                    l_U479 = 1;
                }
            }
            if (NOT l_U435)
            {
                if ((sub_43652( ref g_U4311 )) == 0)
                {
                    sub_485( "AT", "Untethering UFE!", 0 );
                    sub_49491( ref g_U4321 );
                    l_U435 = 1;
                }
            }
            sub_49552();
            sub_49914();
            if ((sub_42056( ref l_U683, 0 )) || (sub_42056( ref l_U662, 0 )))
            {
                sub_485( "GA", "Player near cafeteria.", 0 );
                sub_485( "AT", "Requesting oneshot: PRECINCT_ONESHOT_DOOR_ENTERED", 0 );
                AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_DOOR_ENTERED", 0 );
            }
            if ((NOT l_U1096._fU56) AND (((sub_43652( ref g_U4315 )) == 0) AND ((sub_43652( ref g_U4321 )) == 0)))
            {
                if (sub_50933( "EXPL_CAM", ref g_U2741 ))
                {
                    sub_485( "AT", "Enabling Fisher POI.", 0 );
                    sub_17000( ref l_U1096, 1 );
                }
                else
                {
                    sub_485( "AT", "EXPL_CAM hasn't loaded yet!", 0 );
                }
                sub_1694( ref l_U1057 );
            }
            if (((sub_43652( ref g_U4315 )) == 0) AND (((sub_43652( ref g_U4321 )) == 0) AND (sub_51132( ref l_U876, 0 ))))
            {
                sub_1432( 0 );
                if ((sub_44379()) AND (NOT sub_1810()))
                {
                    if (sub_2013( ref l_U1057 ))
                    {
                        sub_38424( "SPOL_PLLOITCF", ref l_U1017 );
                    }
                }
            }
        }
        if ((l_U704 != 4) AND (l_U704 != 0))
        {
            sub_51401();
        }
        if (((l_U765._fU64) || (sub_42056( ref l_U765, 0 ))) AND (NOT l_U739))
        {
            if (((ABSF( sub_52147( ref g_U3834 ) )) > 0.10000000) || ((ABSF( sub_52147( ref g_U3827 ) )) > 0.10000000))
            {
                SET_WEATHER_TYPE_NOW_PERSIST( "RAIN" );
                sub_485( "GA", "Playing music one shot PRECINCT_ONESHOT_DOOR_ENTERED", 0 );
                AUDIO_MUSIC_PLAY_ONESHOT();
                sub_485( "AT", "Player is in the Atrium! Attack!", 0 );
                sub_49491( ref g_U4315 );
                sub_49491( ref g_U4321 );
                sub_52410();
                for ( I = 0; I < 3; I++ )
                {
                    if (NOT (sub_38593( g_U4311[I], l_U765 )))
                    {
                        sub_49176( g_U4311[I] );
                    }
                }
                l_U739 = 1;
            }
        }
        if ((l_U739) AND (NOT l_U743))
        {
            if ((sub_52829() == 1) AND ((sub_52762( g_U3834, 0.15000000 )) AND ((sub_52762( g_U3827, 0.15000000 )) AND (sub_44331( l_U765 )))))
            {
                sub_52976();
                l_U743 = 1;
            }
        }
        if ((l_U385 == 4) AND ((l_U233 == 4) AND (l_U704 == 4)))
        {
            if ((((sub_43652( ref g_U4308 )) + (sub_43652( ref g_U4315 ))) + (sub_43652( ref g_U4321 ))) == 1)
            {
                sub_53336( ref g_U4308 );
                sub_53336( ref g_U4315 );
                sub_53336( ref g_U4321 );
            }
        }
        if ((l_U704 == 4) AND ((l_U233 == 4) AND (l_U385 == 4)))
        {
            if ((((sub_43652( ref g_U4308 )) + (sub_43652( ref g_U4315 ))) + (sub_43652( ref g_U4321 ))) == 0)
            {
                if (NOT l_U742)
                {
                    sub_485( "AT", "Force music PRECINCT_FINAL mood PRECINCT_01_1_2", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1", "", 0, -1, 10000, -1082130432, 0 );
                    l_U742 = 1;
                }
                if (NOT g_U862[7]._fU36)
                {
                    g_U862[7]._fU36 = 1;
                }
                if (sub_44331( l_U1027 ))
                {
                    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
                    BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                    l_U220 = 11;
                    sub_485( "GA", "eCheckpointState = CP_GYM_EXIT_FROM_BULLET_CAM", 0 );
                    break;
                }
                if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT IS_BULLET_CAMERA_ACTIVE()))
                {
                    l_U220 = 10;
                    sub_485( "GA", "eCheckpointState = CP_GAMEPLAY_ACTIVATE_SECURITY_MONITORS", 0 );
                }
            }
        }
        break;
        case 10:
        if (l_U221)
        {
            sub_485( "GA", "Player has entered atrium.", 0 );
            AUD_SET_IS_POWER_ON( 1 );
            sub_1694( ref l_U807 );
        }
        sub_38125();
        sub_1432( 0 );
        if (sub_42056( ref l_U1027, 0 ))
        {
            sub_485( "GA", "Player entered security room.", 0 );
            sub_1694( ref l_U1066 );
            if ((NOT (IS_PLAYER_DEAD( sub_886() ))) AND (NOT (IS_PED_DEAD( sub_864() ))))
            {
                SET_PED_FORCED_TO_WALK( sub_864(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_886(), 0 );
            }
        }
        if ((sub_44379()) AND ((NOT (sub_44331( l_U1027 ))) AND (NOT (sub_44331( l_U786 )))))
        {
            if (sub_2013( ref l_U807 ))
            {
                sub_2266( ref l_U825 );
                sub_38424( "SPOL_ATRMDED", ref l_U825 );
                sub_1694( ref l_U816 );
            }
            if (sub_2013( ref l_U816 ))
            {
                sub_2266( ref l_U835 );
                sub_38424( "SPOL_PLTKTLNG", ref l_U835 );
            }
        }
        if (sub_2013( ref l_U1066 ))
        {
            g_U842[7] = 1;
            l_U220 = 12;
            sub_485( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 11:
        if (l_U221)
        {
            AUD_SET_IS_POWER_ON( 1 );
        }
        if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            g_U842[7] = 1;
            l_U220 = 12;
            sub_485( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 12:
        if (NOT HAS_CUTSCENE_FINISHED())
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U220 = 0;
            sub_485( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U220 != iVar2)
    {
        l_U221 = 1;
    }
    else
    {
        l_U221 = 0;
    }
    return;
}

void sub_12648()
{
    int I;

    sub_485( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U221 = 1;
    l_U232 = 0;
    l_U233 = 0;
    l_U234 = 0;
    l_U338 = 0;
    l_U342 = 1;
    l_U235 = 0;
    l_U385 = 0;
    l_U386 = 0;
    l_U481 = 0;
    l_U482 = 0;
    l_U480 = 0;
    for ( I = 0; I < 3; I++ )
    {
        l_U551[I]._fU36 = 50;
        l_U551[I]._fU40 = 150;
        l_U551[I]._fU44 = 0;
        sub_1558( ref l_U551[I]._fU0, l_U551[I]._fU36, 1, 0 );
        l_U625[I] = 0;
    }
    l_U588[0]._fU36 = 50;
    l_U588[0]._fU40 = 150;
    l_U588[0]._fU44 = 0;
    sub_1558( ref l_U588[0]._fU0, l_U588[0]._fU36, 1, 0 );
    l_U588[1]._fU36 = 50;
    l_U588[1]._fU40 = 150;
    l_U588[1]._fU44 = 0;
    sub_1558( ref l_U588[1]._fU0, l_U588[1]._fU36, 1, 0 );
    l_U588[2]._fU36 = 100;
    l_U588[2]._fU40 = 400;
    l_U588[2]._fU44 = 0;
    sub_1558( ref l_U588[2]._fU0, l_U588[2]._fU36, 1, 0 );
    l_U629 = 0;
    l_U630 = 0;
    l_U436 = 0;
    l_U435 = 0;
    sub_1558( ref l_U523[0], 500, 1, 0 );
    sub_1558( ref l_U523[1], 800, 1, 0 );
    sub_1558( ref l_U523[2], 1000, 1, 0 );
    l_U704 = 0;
    l_U705 = 0;
    l_U739 = 0;
    l_U740 = 0;
    l_U743 = 0;
    l_U479 = 0;
    l_U742 = 0;
    l_U339 = 0;
    sub_1558( ref l_U807, 1000, 1, 0 );
    sub_1558( ref l_U816, 25000, 1, 0 );
    sub_1558( ref l_U1048, 8000, 1, 0 );
    sub_1558( ref l_U1057, 8000, 1, 0 );
    sub_1558( ref l_U1066, 1500, 1, 0 );
    l_U1095 = 0;
    sub_485( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_13345()
{
    unknown[2] uVar2;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;

    sub_485( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_13430( ref l_U236[0], 24.25000000, -21.25000000, 0.10000000, 180.00000000, 167832229, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U236[1], 24.29000000, -24.00000000, 0.10000000, 180.00000000, 1795224003, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U236[2], 22.65000000, -23.98000000, 0.10000000, 180.00000000, -1610923162, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U236[3], 21.35529000, -18.21194000, 0.01296800, 270.00000000, 765074858, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U236[4], 20.72750000, -17.82870000, 0.01296800, 270.00000000, -1058268732, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U387[0], 15.56000000, -5.95000000, 0.00000000, 135.00000000, -1058268732, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U387[1], 13.64000000, -7.67900000, 0.00000000, 45.00000000, 765074858, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U387[2], 9.11600000, -16.79200000, 0.00000000, 0.00000000, 1632535816, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U483[0], 3.48600000, -2.50000000, 0.00000000, -180.00000000, 2084898483, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U483[1], 5.49600000, -0.95200000, 0.00000000, -135.00000000, 574615680, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U483[2], 4.12300000, -5.41200000, 0.00000000, -135.00000000, -1469305866, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U706[0], 7.03000000, 25.01000000, 0.01000000, -120.00000000, 1307502853, 7, 3, 2, 0, 0 );
    sub_13430( ref l_U706[1], 11.50000000, 26.80000000, 0.01000000, -167.61000000, 1291612119, 7, 3, 2, 0, 0 );
    sub_14130( ref l_U364, "tbPlayerInBathroomF", 30.79000000, -23.32000000, 0.00000000, 7.88000000, 11.35000000, 3.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_14130( ref l_U343, "tbPlayerInBathroomM", 16.18000000, -23.74000000, 0.00000000, 7.34000000, 11.35000000, 3.00000000, 0.00039616, 0.00000000, -90.00000000, 1 );
    sub_14130( ref l_U317, "tb_LRG_StartGymAmbush", 14.14000000, -40.40000000, 0.00000000, 1.86000000, 2.66000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14130( ref l_U631, "tb_LRG_IntoHallway", 23.26000000, -17.20000000, -0.15000000, 3.50000000, 5.59000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14130( ref l_U662, "tb_LRG_NearCafeteria[0]", 13.48000000, -11.66000000, 0.01000000, 7.05000000, 4.05000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14130( ref l_U683, "tb_LRG_NearCafeteria[1]", 4.34000000, -14.98000000, -0.01000000, 6.61000000, 6.06000000, 4.02000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14130( ref l_U744, "tb_LRG_KillRioters", 16.67000000, 8.65000000, 0.00000000, 2.64000000, 18.12000000, 3.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_14130( ref l_U437, "tb_LRG_SendOffRioters_Failsafe1", 13.97000000, -13.70000000, 0.00000000, 1.86000000, 7.94000000, 3.00000000, 0.00000000, 0.00000000, -81.01000000, 1 );
    sub_14130( ref l_U458, "tb_LRG_SendOffRioters_Failsafe2", 5.40000000, -12.85000000, 0.00000000, 1.86000000, 8.69000000, 3.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_14130( ref l_U765, "tb_LRG_InAtrium", 16.25000000, 16.56000000, -0.50000000, 31.39000000, 25.18000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14130( ref l_U1027, "tb_LRG_SecurityRoom", 9.69000000, 26.10000000, 0.01000000, 8.45000000, 5.40000000, 3.04000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14130( ref l_U845, "tb_LRG_PlayerInGym", 23.55000000, -31.59000000, -0.50000000, 26.37000000, 21.67000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14130( ref l_U786, "tb_LRG_CloseToSecurityRoomDontPlaySpeech", 11.10000000, 20.17000000, 0.02000000, 7.00000000, 8.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    array(ref uVar2, 2);
    sub_14130( ref uVar2[0], "tb_LRG_PlayerInCafeteria[0]", 4.69000000, -8.95000000, -0.50000000, 7.43000000, 18.18000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14130( ref uVar2[1], "tb_LRG_PlayerInCafeteria[1]", 5.60000000, -15.09000000, -0.50000000, 8.00000000, 5.63000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15382( ref l_U876, ref uVar2 );
    sub_15739( ref l_U340, "tethStayOutOfBathroom1", 20.82000000, -35.53000000, 0.00000000, 15.97000000, 27.19000000, 3.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_15739( ref l_U341, "tethStayOutOfBathroom2", 23.46000000, -24.09000000, 0.00000000, 7.73000000, 2.97000000, 3.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_15739( ref l_U741, "teth_LRG_SecurityRoom", 9.75000000, 26.11000000, 0.01000000, 8.45000000, 5.73000000, 3.04000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_15739( ref l_U433, "tethOffice", 17.59000000, -6.54000000, 0.00000000, 9.08000000, 9.11000000, 3.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_15739( ref l_U434, "tethKitchen", 5.36000000, -15.01000000, 0.00000000, 6.15000000, 8.88000000, 3.00000000, 0.00000000, 0.00000000, -90.00000000, 1 );
    sub_16130( ref l_U1096, 2, l_U1182, l_U1182, l_U1182, 1.50000000, 3.00000000, 1, 0 );
    sub_16807( ref l_U1096, 30, "POI_POL_FISHER" );
    sub_16968( ref l_U1096, 0 );
    sub_17000( ref l_U1096, 0 );
    sub_17060( ref l_U1096, 1 );
    sub_485( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_13430(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_14130(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_15382(int iParam0, unknown uParam1)
{
    int iVar4;
    int I;

    iVar4 = (uParam1^);
    if (iVar4 > 6)
    {
        sub_485( "[SA]", "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
        SCRIPT_ASSERT( "P_CreateTriggerRegion() ERRROR: max number of trigger boxes exceeded.", 0 );
    }
    for ( I = 0; I < iVar4; I++ )
    {
        iParam0->_fU0[I] = {(uParam1^)[I]};
    }
    iParam0->_fU508 = iVar4;
    iParam0->_fU548 = 0;
    iParam0->_fU552 = 0;
    iParam0->_fU556 = 0;
    iParam0->_fU560 = 0;
    return;
}

void sub_15739(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_16130(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_16145( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_16513( iParam0 );
    return;
}

void sub_16145(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_16513(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_16592( iParam0 );
    return;
}

void sub_16592(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_6596( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_6596( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_6596( iParam0, 1 );
            }
            else
            {
                sub_6596( iParam0, 0 );
            };;;
        }
        else
        {
            sub_6596( iParam0, 0 );
        }
    }
    else
    {
        sub_6596( iParam0, 0 );
    }
    return;
}

void sub_16807(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_16838( iParam0 );
    return;
}

void sub_16838(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_16968(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_17000(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_6947( iParam0 );
    return;
}

void sub_17060(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_17275()
{
    sub_485( "GA", "P_REQUEST_LRG_PERSISTENT_ASSETS start", 0 );
    sub_17344( ref l_U208, ref g_U2468 );
    sub_18752( ref l_U215, ref g_U2613 );
    sub_19771( "LEVEL_S_POLICE_CP_05", ref g_U2741 );
    sub_19771( ref g_U3553, ref g_U2741 );
    sub_485( "GA", "P_REQUEST_LRG_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_17344(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_17379( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_17379(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_17414( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_17545( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_17414(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_17545( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_17545( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_17545( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18193( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_17545( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_17545( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17545(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17565( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_17565(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_18193(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_18752(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_18787( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_18787(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18808( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_18940( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18808(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_18940( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_18940( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_18940( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18193( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_18940( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_18940( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18940(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17565( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_19771(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19792( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_19929( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19792(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_19929( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_19929( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_19929( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_18193( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_19929( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_19929( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19929(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17565( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20816()
{
    sub_485( "GA", "P_REQUEST_LRG_NONPERSISTENT_ASSETS start", 0 );
    sub_20889( -724192985, ref g_U2662 );
    sub_20889( 1507052255, ref g_U2662 );
    sub_20889( -1750685803, ref g_U2662 );
    sub_20889( 1772865089, ref g_U2662 );
    sub_20889( -822154135, ref g_U2662 );
    sub_485( "GA", "P_REQUEST_LRG_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_20889(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_20924( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_21076( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_20924(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_21076( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_21076( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_21076( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_21076( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18193( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18193( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_21076( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_21076( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21076(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_17565( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_23000(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23126(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23247(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_23438(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23792(unknown uParam0)
{
    sub_485( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_8230( uParam0, sub_864() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_24320(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_485( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_485( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_11082( iParam1 );
        sub_24579( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_25030( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_25030( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_25030( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_25030( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_25030( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_25262( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_26820( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_485( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_24579(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_8446( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_485( "TEH", "Ending context", 0 );
        sub_485( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_25030(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_25262(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_26820(int iParam0)
{
    sub_10099( "CHECKPOINT DATA" );
    sub_26859( iParam0->_fU4 );
    sub_26882( iParam0->_fU16 );
    sub_26882( iParam0->_fU20 );
    sub_26882( iParam0->_fU24 );
    sub_26925( iParam0->_fU28 );
    sub_26925( iParam0->_fU56 );
    sub_26925( iParam0->_fU60 );
    sub_26925( iParam0->_fU64 );
    sub_26925( iParam0->_fU68 );
    sub_26925( iParam0->_fU72 );
    sub_26925( iParam0->_fU76 );
    sub_26925( iParam0->_fU80 );
    sub_26925( iParam0->_fU84 );
    sub_26925( iParam0->_fU88 );
    sub_26925( iParam0->_fU92 );
    sub_26882( iParam0->_fU32 );
    sub_26925( iParam0->_fU36 );
    sub_26925( iParam0->_fU40 );
    sub_26925( iParam0->_fU44 );
    sub_26882( iParam0->_fU136 );
    sub_27130( iParam0->_fU140 );
    sub_26925( iParam0->_fU52 );
    sub_10099( "---nRightHolsterAttachmentEnabled: " );
    sub_26925( iParam0->_fU96 );
    sub_10099( "---nRightHolsterAttachmentToggled: " );
    sub_26925( iParam0->_fU100 );
    sub_10099( "---nLeftHolsterAttachmentEnabled: " );
    sub_26925( iParam0->_fU104 );
    sub_10099( "---nLeftHolsterAttachmentToggled: " );
    sub_26925( iParam0->_fU108 );
    sub_10099( "---nRifleHolsterAttachmentEnabled: " );
    sub_26925( iParam0->_fU112 );
    sub_10099( "---nRifleHolsterAttachmentToggled: " );
    sub_26925( iParam0->_fU116 );
    sub_10099( "---nRightHandAttachmentEnabled: " );
    sub_26925( iParam0->_fU120 );
    sub_10099( "---nRightHandAttachmentToggled: " );
    sub_26925( iParam0->_fU124 );
    sub_10099( "---nLeftHandAttachmentEnabled: " );
    sub_26925( iParam0->_fU128 );
    sub_10099( "---nLeftHandAttachmentToggled: " );
    sub_26925( iParam0->_fU132 );
    sub_26925( l_U1 );
    sub_26925( 144 );
    return;
}

void sub_26859(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_26882(unknown uParam0)
{
    return;
}

void sub_26925(unknown uParam0)
{
    return;
}

void sub_27130(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_28025()
{
    unknown uVar2;

    switch (l_U233)
    {
        case 1:
        sub_485( "GA", "e_LRG_GymEnemiesSpawn = ENTITY_STATE_INIT", 0 );
        sub_28144( ref l_U302, 1056964608, 0 );
        l_U234 = 0;
        l_U233 = 2;
        sub_485( "GA", "e_LRG_GymEnemiesSpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U4315[l_U234] = sub_28403( ref l_U236[l_U234] );
        sub_29242( g_U4315[l_U234], ref l_U302 );
        if ((l_U234 == 4) || (l_U234 == 1))
        {
            uVar2 = sub_10428( g_U4315[l_U234], 434544317, 25000, 0, 0 );
        }
        else
        {
            uVar2 = sub_10428( g_U4315[l_U234], 1308526797, 25000, 0, 0 );
        }
        ENABLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
        TOGGLE_WEAPON_ATTACHMENT( uVar2, 14, 1 );
        if (NOT (IS_PED_DEAD( g_U4315[l_U234] )))
        {
            if (l_U234 < 3)
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U4315[l_U234], ref g_U3269 );
            }
            else
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U4315[l_U234], ref g_U3333 );
            }
            sub_29725( ref g_U4315[l_U234], "AIT_EXPERT", 4, 10, 1 );
            SET_PED_SEEING_RANGE( g_U4315[l_U234], 22.00000000, 75 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4315[l_U234], 1 );
        }
        sub_30014( ref l_U340, g_U4315[l_U234], 1 );
        sub_30014( ref l_U341, g_U4315[l_U234], 1 );
        sub_30119( g_U4315[l_U234] );
        l_U234++;
        if (l_U234 >= 5)
        {
            l_U233 = 3;
            sub_485( "GA", "e_LRG_GymEnemiesSpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U302._fU0, 1 );
        sub_30356( ref g_U4315, "pi_LRG_GymEnemy" );
        l_U233 = 4;
        sub_485( "GA", "e_LRG_GymEnemiesSpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_28144(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_28403(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_28573( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_29042( iParam0->_fU40 );
    sub_29122( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_28573(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_10099( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_29042(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_29122(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_29242(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_10099( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_28144( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_28144( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_29725(unknown uParam0, unknown uParam1, float fParam2, float fParam3, boolean bParam4)
{
    sub_29762( "MAL_SetTemplateAndRanges" );
    sub_10099( uParam1 );
    sub_26882( fParam2 );
    sub_26882( fParam3 );
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_AI_TEMPLATE( (uParam0^), uParam1 );
        if (fParam2 > -1)
        {
            SET_PED_COMBAT_RANGE_MIN( (uParam0^), fParam2 );
        }
        if (fParam3 > -1)
        {
            SET_PED_COMBAT_RANGE_MAX( (uParam0^), fParam3 );
        }
    }
    if (NOT bParam4)
    {
        sub_29894( uParam0, 1, 0 );
    }
    return;
}

void sub_29762(unknown uParam0)
{
    unknown uVar3;

    uVar3 = GET_REAL_GAME_TIMER();
    return;
}

void sub_29894(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        SET_PED_COMBAT_ATTRIBUTES( (uParam0^), uParam1, uParam2 );
    }
    return;
}

void sub_30014(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_30119(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_30356(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

int sub_30543()
{
    switch (l_U385)
    {
        case 1:
        sub_485( "GA", "e_LRG_HallEnemiesSpawn = ENTITY_STATE_INIT", 0 );
        sub_28144( ref l_U427, 1056964608, 0 );
        l_U386 = 0;
        l_U385 = 2;
        sub_485( "GA", "e_LRG_HallEnemiesSpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U4321[l_U386] = sub_28403( ref l_U387[l_U386] );
        sub_29242( g_U4321[l_U386], ref l_U427 );
        if (NOT (IS_PED_DEAD( g_U4321[l_U386] )))
        {
            if ((l_U386 == 1) || (l_U386 == 0))
            {
                sub_30014( ref l_U433, g_U4321[l_U386], 1 );
                SET_ROOM_FOR_PED_BY_NAME( g_U4321[l_U386], "F2_CompRM_01" );
            }
            else
            {
                sub_30014( ref l_U434, g_U4321[l_U386], 1 );
                SET_ROOM_FOR_PED_BY_NAME( g_U4321[l_U386], ref g_U3333 );
            }
            SET_PED_AI_TEMPLATE( g_U4321[l_U386], "AIT_EXPERT" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4321[l_U386], 1 );
            SET_PED_SEEING_RANGE( g_U4321[l_U386], 13.00000000, 75 );
            SET_PED_HEARING_RANGE( g_U4321[l_U386], 13.00000000 );
            SET_PED_CONSUMING_AMMO( g_U4321[l_U386], 0 );
        }
        l_U386++;
        if (l_U386 >= 3)
        {
            l_U385 = 3;
            sub_485( "GA", "e_LRG_HallEnemiesSpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U427._fU0, 1 );
        sub_30356( ref g_U4321, "pi_LRG_HallEnemy" );
        sub_10428( g_U4321[0], 1308526797, 25000, 0, 0 );
        sub_10428( g_U4321[1], 1308526797, 25000, 0, 0 );
        sub_10428( g_U4321[2], 1308526797, 25000, 0, 0 );
        sub_31291( ref g_U4321 );
        l_U385 = 4;
        sub_485( "GA", "e_LRG_HallEnemiesSpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_31291(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_30119( (uParam0^)[I] );
    }
    return;
}

void sub_31548()
{
    sub_485( "GA", "P_LRG_CREATE_PLACEMENTS start", 0 );
    l_U224[0] = sub_31645( -4072149, 7.47000000, -40.14000000, 0.83000000, 0.00000000, 0.00000000, 1.10000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U224[0], ref g_U3261 );
    l_U224[1] = sub_31645( -4072149, 7.44800000, -30.93000000, 1.62900000, 0.00000000, 0.00000000, 2.50000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U224[1], ref g_U3261 );
    l_U224[5] = sub_31645( -4072149, 30.84000000, -21.97000000, 0.42000000, 0.00000000, 0.00000000, 30.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U224[5], "f2_shower_01" );
    g_U4325[0] = sub_31645( -4072149, 26.59000000, 11.88000000, 0.80000000, 0.00000000, 0.00000000, 0.80000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4325[0], ref g_U3357 );
    g_U4325[3] = sub_31645( -4072149, 13.85000000, 24.17000000, 1.02000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4325[3], "f2_lobby_Office02" );
    sub_32089();
    sub_32795();
    sub_32933();
    sub_33063();
    sub_485( "GA", "P_LRG_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_31645(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_32089()
{
    sub_485( "CO", "P_CREATE_S_POL_GG_MP_02", 0 );
    sub_32201( ref g_U667, g_U812, 1693985502, -302533334, 12.20000000, -25.92000000, 0.05000000, 0.00000000, 0.00000000, 1.00000000, "f2_shower_02" );
    sub_32330( ref g_U667 );
    return;
}

void sub_32201(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_485( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_32330(int iParam0)
{
    sub_485( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_32391( iParam0->_fU12 )) == 1)
        {
            sub_485( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_485( "CO", "has never been collected.", 0 );
        }
        if ((sub_32391( iParam0->_fU12 )) == 0)
        {
            sub_6444( iParam0->_fU0 );
            iParam0->_fU0 = sub_31645( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_485( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_485( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_32391(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_32795()
{
    sub_485( "CO", "P_CREATE_S_POL_GG_MP_03", 0 );
    sub_32201( ref g_U685, g_U813, 672837924, -598011407, 5.65000000, 22.73000000, 0.80000000, 1.50000000, 0.00000000, 1.00000000, "f2_lobby_Office01" );
    sub_32330( ref g_U685 );
    return;
}

void sub_32933()
{
    sub_485( "CO", "P_CREATE_S_POL_GG_G6_02", 0 );
    sub_32201( ref g_U775, g_U818, 1497945839, -1420691957, 28.68000000, 13.98000000, 0.01000000, 1.50000000, 0.00000000, 10.00000000, "1f2_lobby" );
    sub_32330( ref g_U775 );
    return;
}

void sub_33063()
{
    sub_485( "CO", "P_CREATE_S_POL_GG_G6_03", 0 );
    sub_32201( ref g_U793, g_U819, 61877183, -985585175, 2.70000000, -12.27000000, 0.55000000, 1.50000000, 0.00000000, 5.00000000, "f2_corridor_02" );
    sub_32330( ref g_U793 );
    return;
}

void sub_33261()
{
    sub_485( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_485( "CCB", "Starting the Precinct_Lockers context...", 0 );
    START_CONTEXT( "Precinct_Lockers" );
    return;
}

void sub_33401(int iParam0, int iParam1)
{
    if ((sub_33413( iParam0 )) == 0)
    {
        sub_33479( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_33413(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_33479(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_33614(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_33413( iParam0 )) == 0)
    {
        sub_33479( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_33789(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_33973(int iParam0, float fParam1, float fParam2)
{
    if ((sub_33413( iParam0 )) == 0)
    {
        sub_33479( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_34123(int iParam0, unknown uParam1)
{
    if ((sub_33413( iParam0 )) == 0)
    {
        sub_33479( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_34198(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_33413( iParam0 )) == 0)
    {
        sub_33479( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_34607()
{
    unknown uVar2;
    unknown uVar3;

    sub_485( "AT", "P_LRG_MOVE_GYM_ENEMIES_TO_COVER start", 0 );
    sub_34676( g_U4315[0] );
    sub_34676( g_U4315[1] );
    sub_34676( g_U4315[2] );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "1B771D5A_471EB808_Corner1", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "1B771D5A_471EB808_Corner2", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "1B771D5A_B7850355_Corner2", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "floor2", "Corner_Position64", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "1B771D5A_39B01D2B_Corner2", 1 );
    MARK_COVERPOINTMP3_SEARCHABLE( "GenCover", "1B771D5A_638A70DF_Corner2", 1 );
    OPEN_SEQUENCE_TASK( ref uVar2 );
    TASK_SEARCH_FOR_UNSEEN_ENEMY( 0, 1 );
    CLOSE_SEQUENCE_TASK( uVar2 );
    if (NOT (IS_PED_DEAD( g_U4315[0] )))
    {
        TASK_PERFORM_SEQUENCE( g_U4315[0], uVar2 );
    }
    CLEAR_SEQUENCE_TASK( uVar2 );
    OPEN_SEQUENCE_TASK( ref uVar3 );
    TASK_SEARCH_FOR_UNSEEN_ENEMY( 0, 1 );
    CLOSE_SEQUENCE_TASK( uVar3 );
    if (NOT (IS_PED_DEAD( g_U4315[1] )))
    {
        TASK_PERFORM_SEQUENCE( g_U4315[1], uVar3 );
    }
    CLEAR_SEQUENCE_TASK( uVar3 );
    return;
}

void sub_34676(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_35309(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_864() )))
        {
            SET_PLAYER_CONTROL( sub_886(), 0, uParam2 );
            SET_PED_DUCKING( sub_864(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_864() );
            }
            SET_PED_INVINCIBLE( sub_864(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_35468()
{
    sub_485( "GA", "P_LRG_START_BOUT start", 0 );
    ISEQ_REGISTER_ENTITY( -724192985, "Max", sub_864(), 0 );
    sub_7901( sub_864(), g_U2953[6], g_U3083[6] );
    ISEQ_START( -724192985 );
    if (NOT (IS_PED_DEAD( sub_864() )))
    {
        FREEZE_PED_POSITION( sub_864(), 1 );
    }
    if (NOT (IS_PLAYER_DEAD( sub_886() )))
    {
        SNAP_PLAYER_TO_COVERPOINT( sub_886(), "floor2", "Corner_Position65", 1 );
    }
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[6], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[6], 1065353216, 0 );
    sub_485( "GA", "P_LRG_START_BOUT end", 0 );
    return;
}

void sub_35765()
{
    sub_485( "CMT", "Removing pre-riot interiors...", 0 );
    SET_HELPER_ENABLED( "cs_13_01_B", 0, 0 );
    SET_HELPER_ENABLED( "cs_13_01_A", 0, 0 );
    SET_HELPER_ENABLED( "cs_13_01_C", 0, 0 );
    SET_HELPER_ENABLED( "MILO_cell_preriot_interior", 0, 1 );
    SET_HELPER_ENABLED( "exchange_pre_interior", 0, 1 );
    return;
}

int sub_36115()
{
    if ((ISEQ_QUERY_STATE( -724192985, 3 )) AND (IS_SCREEN_FADED_OUT()))
    {
        sub_485( "GA", "Blendout is playing, fading in screen.", 0 );
        DO_SCREEN_FADE_IN( 0 );
    }
    if ((ISEQ_QUERY_ENTITY_STATE( -724192985, "Max", 6 )) || (ISEQ_QUERY_ENTITY_STATE( -724192985, "Max", 5 )))
    {
        if (NOT (IS_PED_DEAD( sub_864() )))
        {
            FREEZE_PED_POSITION( sub_864(), 0 );
        }
        return 1;
    }
    return 0;
}

void sub_36306(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_864() )))
    {
        SET_PLAYER_CONTROL( sub_886(), 1, 0 );
        SET_PED_INVINCIBLE( sub_864(), 0 );
        if (bParam0)
        {
            sub_36387();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_36387()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_864() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_864(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_864(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_864(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_864(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_36651(boolean bParam0)
{
    sub_485( "GA", "P_CREATE_LOBBY_ELEVATOR_DOORS start", 0 );
    sub_5499( g_U4330 );
    g_U4330 = sub_36749( g_U3227, g_U4363, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4330 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4330, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4330, ref g_U3357 );
        if (bParam0)
        {
            SET_OBJECT_AS_PATH_OBSTACLE( g_U4330 );
        }
    }
    sub_5499( g_U4332 );
    g_U4332 = sub_36749( g_U3227, g_U4366, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4332 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4332, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4332, ref g_U3357 );
        if (bParam0)
        {
            SET_OBJECT_AS_PATH_OBSTACLE( g_U4332 );
        }
    }
    sub_5499( g_U4331 );
    g_U4331 = sub_36749( g_U3227, g_U4369, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4331 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4331, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4331, ref g_U3357 );
        if (bParam0)
        {
            SET_OBJECT_AS_PATH_OBSTACLE( g_U4331 );
        }
    }
    sub_5499( g_U4333 );
    g_U4333 = sub_36749( g_U3227, g_U4372, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4333 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4333, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4333, ref g_U3357 );
        if (bParam0)
        {
            SET_OBJECT_AS_PATH_OBSTACLE( g_U4333 );
        }
    }
    sub_485( "GA", "P_CREATE_LOBBY_ELEVATOR_DOORS end", 0 );
    return;
}

void sub_36749(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_28573( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_37551()
{
    sub_485( "AT", "Making lobby objects.", 0 );
    g_U4375 = sub_37634( -1257962541, 16.45100000, 25.82800000, 0.01300000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4375 ))
    {
        FREEZE_OBJECT_POSITION( g_U4375, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4375, "f2_lobby" );
    }
    g_U4376 = sub_37634( -1514674887, 16.45100000, 25.82800000, 0.01300000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4376 ))
    {
        FREEZE_OBJECT_POSITION( g_U4376, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4376, "f2_lobby" );
    }
    g_U4377 = sub_37634( 743953242, 16.49900000, 25.71500000, 0.04900000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4377 ))
    {
        FREEZE_OBJECT_POSITION( g_U4377, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4377, "f2_lobby" );
    }
    return;
}

void sub_37634(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_28573( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_38125()
{
    if (NOT (sub_38139( ref l_U1096 )))
    {
        if ((sub_38174( ref l_U1096 )) == 1)
        {
            sub_38424( "EXPLORE_ITEM", ref l_U1085 );
        }
    }
    if (sub_38507( ref l_U1096 ))
    {
        sub_485( "AT", "Starting Fisher investigation.", 0 );
        sub_35309( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( "EXPL_CAM", "EXPL_CAM_GND_15_F_CAM", 1, l_U1185, l_U1188, 0, 0 );
        if (NOT (IS_PED_DEAD( sub_864() )))
        {
            SET_PLAYER_THREAT_REACTION( sub_864(), 0 );
            CLEAR_PED_TASKS_IMMEDIATELY( sub_864() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            sub_40450();
            SET_PED_VISIBLE( sub_864(), 0 );
        }
        sub_7901( sub_864(), 19.68657000, -6.07008000, 0.01309500, 354.23640000 );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( 5.69607000, 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( -11.97211000, 1065353216, 0 );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "spol_Note" )))
        {
            sub_40868( 0 );
            sub_38424( "SPOL_NFRMFTBK", ref l_U1075 );
            FOUND_EXPLORATION_ITEM( "spol_Note" );
        }
        l_U1095 = 1;
    }
    if (l_U1095)
    {
        if ((NOT IS_ANIMATED_CAMERA_PLAYING()) || (CAMERA_ANIMATED_CURRENT_TIME() > 3000))
        {
            sub_485( "AT", "Ending Fisher exploration item.", 0 );
            CAMERA_ANIMATED_STOP( 0, 0 );
            if (NOT (IS_PED_DEAD( sub_864() )))
            {
                sub_1558( ref l_U1189, 1000, 1, 0 );
                sub_1694( ref l_U1189 );
                SET_PED_VISIBLE( sub_864(), 1 );
            }
            sub_36306( 0, 1 );
            sub_6552( ref l_U1096, 1 );
            l_U1095 = 0;
        }
    }
    if (sub_2013( ref l_U1189 ))
    {
        SET_PLAYER_THREAT_REACTION( sub_864(), 1 );
    }
    return;
}

void sub_38139(int iParam0)
{
    return iParam0->_fU56;
}

int sub_38174(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_38139( iParam0 )) == 0)))
    {
        if ((sub_38330() == 1) AND (((IS_PED_RELOADING( sub_864() )) == 0) AND (((IS_PED_GETTING_UP( sub_864() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_864() )) == 0) AND (((IS_PED_IN_COVER( sub_864() )) == 0) AND (((IS_PED_DUCKING( sub_864() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

int sub_38330()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_38424(unknown uParam0, unknown uParam1)
{
    sub_2266( uParam1 );
    sub_2348( 0, sub_864(), "MAX", uParam1, 2, 0 );
    sub_2348( 1, sub_864(), "MAX", uParam1, 2, 0 );
    sub_2590( uParam0, uParam1, 8, 1 );
    return;
}

int sub_38507(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_864() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_864() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_38593( sub_864(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_38593( sub_864(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_6947( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_7008( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_38330() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_6552( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_6596( iParam0, 0 );
                            sub_6796( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_6596( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_864() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_864(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_6596( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_6796( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_864() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_864(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_864() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_864(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_864() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_864(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_6596( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_6796( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_864() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_864() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_864() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_864(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_6796( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_38593(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_40450()
{
    sub_485( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD( sub_864() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
            sub_485( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( sub_864(), "/Global/Player" );
        }
    }
    sub_485( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

void sub_40868(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_41421()
{
    int I;

    for ( I = 0; I < 5; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U4315[I] )))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4315[I], 0 );
        }
    }
    return;
}

void sub_41513(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_41550( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_41550(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_6247( uParam0 );
            }
        }
    }
    return;
}

void sub_41677()
{
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3827._fU0, g_U3827._fU4 ) ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3827._fU0, g_U3827._fU4 ) ))
        {
            sub_485( "GA", "Setting Atrium left door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3827._fU0, g_U3827._fU4 ), 0 );
        }
    }
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3834._fU0, g_U3834._fU4 ) ))
    {
        if (DOOR_GET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3834._fU0, g_U3834._fU4 ) ))
        {
            sub_485( "GA", "Setting Atrium right door to not react to bullets.", 0 );
            DOOR_SET_IS_AFFECTED_BY_BULLETS( DOOR_FIND_CLOSEST( g_U3834._fU0, g_U3834._fU4 ), 0 );
        }
    }
    return;
}

int sub_42041()
{
    unknown uVar2;

    if (sub_42056( ref l_U317, 0 ))
    {
        sub_485( "AT", "Player in trigger box! Alerting UFE!", 0 );
        sub_41421();
        return 1;
    }
    if (sub_42233( ref g_U4315[0], sub_864(), 1, 1, 1, 1, 1 ))
    {
        sub_485( "AT", "i_LRG_Gym_FrontPillar is aware of player! Alerting UFE!", 0 );
        return 1;
    }
    if (sub_42233( ref g_U4315[1], sub_864(), 1, 1, 1, 1, 1 ))
    {
        sub_485( "AT", "i_LRG_Gym_BackPillar is aware of player! Alerting UFE!", 0 );
        return 1;
    }
    if (NOT (IS_PED_DEAD( sub_864() )))
    {
        uVar2 = sub_864();
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( 24.29000000, -36.49000000, 0.00000000, 25.00000000, 1, ref uVar2 ))
        {
            sub_485( "AT", "Shots fired! Alerting UFE!", 0 );
            sub_41421();
            return 1;
        }
    }
    return 0;
}

void sub_42056(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_38593( sub_864(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_42233(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, int iParam6)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        if ((uParam3) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 1 )))
        {
            if (iParam6 == 1)
            {
                sub_485( "MF", "ped has SEEN target ped", 0 );
            }
            return 1;
        }
        else if ((uParam4) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 8 )))
        {
            if (iParam6 == 1)
            {
                sub_485( "MF", "ped has BEEN SHOT AT by target ped", 0 );
            }
            return 1;
        }
        else if ((uParam2) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 2 )))
        {
            if (iParam6 == 1)
            {
                sub_485( "MF", "ped has HEARD target ped", 0 );
            }
            return 1;
        }
        else if ((uParam5) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 4 )))
        {
            if (iParam6 == 1)
            {
                sub_485( "MF", "ped has BEEN TOLD ABOUT target ped", 0 );
            }
            return 1;
        };;;;
    }
    return 0;
}

void sub_43138(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_43172( ref (uParam0^)[I], uParam1 );
        sub_43237( ref (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_43172(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        REGISTER_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_43237(unknown uParam0, unknown uParam1)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        SET_LOCKED_TARGET( (uParam0^), uParam1 );
    }
    return;
}

void sub_43322(unknown uParam0, unknown uParam1, unknown uParam2)
{
    sub_43343( uParam0, sub_864(), uParam1, uParam2 );
    return;
}

void sub_43343(unknown uParam0, unknown uParam1, unknown uParam2, boolean bParam3)
{
    unknown uVar6;

    sub_29762( "MAL_UnblockAndCombatPed" );
    OPEN_SEQUENCE_TASK( ref uVar6 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        sub_29762( "MAL_UnblockAndCombatPed: Victim is not dead" );
        TASK_COMBAT_PED( 0, uParam1 );
    }
    CLOSE_SEQUENCE_TASK( uVar6 );
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        sub_29762( "MAL_UnblockAndCombatPed: Ped is not dead" );
        if (bParam3)
        {
            CLEAR_PED_TASKS_IMMEDIATELY( (uParam0^) );
        }
        else
        {
            CLEAR_PED_TASKS( (uParam0^) );
        }
        SET_PED_COMBAT_MOVEMENT( (uParam0^), uParam2 );
        TASK_PERFORM_SEQUENCE( (uParam0^), uVar6 );
    }
    CLEAR_SEQUENCE_TASK( uVar6 );
    return;
}

void sub_43652(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

int sub_43761(unknown uParam0, unknown uParam1, float fParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    float fVar8;

    uVar5 = {sub_43776( sub_864() )};
    if (ARE_STRINGS_EQUAL( uParam0, "X" ))
    {
        fVar8 = uVar5._fU0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Y" ))
    {
        fVar8 = uVar5._fU4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "Z" ))
    {
        fVar8 = uVar5._fU8;
    };;;
    if (ARE_STRINGS_EQUAL( uParam1, "Greater" ))
    {
        if (fVar8 > fParam2)
        {
            return 1;
        }
    }
    else if (ARE_STRINGS_EQUAL( uParam1, "Less" ))
    {
        if (fVar8 < fParam2)
        {
            return 1;
        }
    }
    return 0;
}

vector sub_43776(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        return "[dynamic result, ret vals = 3]";
        break;
        GET_PED_COORDS( uParam0 );
        "[doubled result, dropped if not asigned]";
        "[doubled result, dropped if not asigned]";
        break;
    }
    return vector( 0, 0, 0);
}

void sub_44009()
{
    sub_34676( g_U4315[3] );
    sub_44039( ref g_U4315[3] );
    sub_43322( ref g_U4315[3], 2, 0 );
    sub_34676( g_U4315[4] );
    sub_44039( ref g_U4315[4] );
    sub_43322( ref g_U4315[4], 2, 0 );
    l_U235 = 1;
    return;
}

void sub_44039(unknown uParam0)
{
    sub_44056( uParam0, sub_864() );
    return;
}

void sub_44056(unknown uParam0, unknown uParam1)
{
    sub_43172( uParam0, uParam1 );
    sub_43237( uParam0, uParam1 );
    return;
}

void sub_44331(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_38593( sub_864(), uParam0 );
}

int sub_44379()
{
    if ((l_U152._fU16) || (sub_2013( ref l_U152 )))
    {
        return 1;
    }
    return 0;
}

void sub_44566(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

int sub_44958(int iParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU4 == 3)
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_45062()
{
    switch (l_U481)
    {
        case 1:
        sub_485( "GA", "e_LRG_HallRiotersSpawn = ENTITY_STATE_INIT", 0 );
        l_U482 = 0;
        l_U481 = 2;
        sub_485( "GA", "e_LRG_HallRiotersSpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U4311[l_U482] = sub_28403( ref l_U483[l_U482] );
        if (NOT (IS_PED_DEAD( g_U4311[l_U482] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( g_U4311[l_U482], ref g_U3333 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4311[l_U482], 1 );
            SET_PED_AS_ONE_SHOT_KILL( g_U4311[l_U482], 1 );
            SET_PED_STAND_GROUND_ON_PLAYER_IMPACT( g_U4311[l_U482], 1 );
            SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT( g_U4311[l_U482], 0 );
            SET_PED_RESIST_TO_OBJECT_COLLISION( g_U4311[l_U482], 1 );
            "[doubled result, dropped if not asigned]";
            "[doubled result, dropped if not asigned]";
            SET_PED_CONSUMING_AMMO( g_U4311[l_U482], 0 );
            SET_PED_HEALTH( g_U4311[l_U482], 101, 0 );
            SET_PED_OBLIVIOUS_TO_DANGER( g_U4311[l_U482], 1 );
            SET_PED_CAN_BE_MELEED( g_U4311[l_U482], 0 );
        }
        l_U482++;
        if (l_U482 >= 3)
        {
            l_U481 = 3;
            sub_485( "GA", "e_LRG_HallRiotersSpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_30356( ref g_U4311, "pi_LRG_HallRioter" );
        sub_10428( g_U4311[0], 1308526797, 25000, 0, 0 );
        sub_10428( g_U4311[1], 1308526797, 25000, 0, 0 );
        sub_10428( g_U4311[2], -862236369, 25000, 0, 0 );
        sub_31291( ref g_U4311 );
        l_U481 = 4;
        sub_485( "GA", "e_LRG_HallRiotersSpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_45936()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    sub_485( "AT", "P_LRG_START_HALLWAY_GAMEPLAY start", 0 );
    sub_33789( ref uVar2, 924526578, 13.07538000, -5.76907000, 1.12802000, 0.00000000, 0.00000000, 0.00000000 );
    sub_33973( ref uVar2, 65436, 110 );
    sub_34198( ref uVar2, 1, 1, 1065353216 );
    sub_34123( ref uVar2, 1 );
    sub_46074( ref g_U4321 );
    sub_46074( ref g_U4311 );
    sub_7901( g_U4321[0], l_U387[0]._fU0, l_U387[0]._fU12 );
    if (NOT (IS_PED_DEAD( g_U4321[0] )))
    {
        ISEQ_REGISTER_ENTITY( -1750685803, "VIG_04A_PP_UFE1", g_U4321[0], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4321[0], 0 );
    }
    sub_1694( ref l_U551[0]._fU0 );
    sub_7901( g_U4321[1], l_U387[1]._fU0, l_U387[1]._fU12 );
    if (NOT (IS_PED_DEAD( g_U4321[1] )))
    {
        ISEQ_REGISTER_ENTITY( -1750685803, "VIG_04A_PP_UFE2", g_U4321[1], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4321[1], 0 );
    }
    sub_1694( ref l_U551[1]._fU0 );
    sub_7901( g_U4321[2], l_U387[2]._fU0, l_U387[2]._fU12 );
    if (NOT (IS_PED_DEAD( g_U4321[2] )))
    {
        ISEQ_REGISTER_ENTITY( 1772865089, "VIG_04B_PP_UFE", g_U4321[2], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4321[2], 0 );
    }
    sub_1694( ref l_U551[2]._fU0 );
    sub_7901( g_U4311[0], l_U483[0]._fU0, l_U483[0]._fU12 );
    if (NOT (IS_PED_DEAD( g_U4311[0] )))
    {
        ISEQ_REGISTER_ENTITY( -822154135, "VIG_04C_PP_RIOTER", g_U4311[0], 0 );
    }
    sub_1694( ref l_U588[0]._fU0 );
    sub_7901( g_U4311[1], l_U483[1]._fU0, l_U483[1]._fU12 );
    if (NOT (IS_PED_DEAD( g_U4311[1] )))
    {
        ISEQ_REGISTER_ENTITY( -822154135, "VIG_04C_PP_RIOTER1", g_U4311[1], 0 );
    }
    sub_1694( ref l_U588[1]._fU0 );
    sub_7901( g_U4311[2], l_U483[2]._fU0, l_U483[2]._fU12 );
    if (NOT (IS_PED_DEAD( g_U4311[2] )))
    {
        ISEQ_REGISTER_ENTITY( -822154135, "VIG_04C_PP_RIOTER2", g_U4311[2], 0 );
    }
    sub_1694( ref l_U588[2]._fU0 );
    ISEQ_START( -1750685803 );
    ISEQ_START( 1772865089 );
    ISEQ_START( -822154135 );
    if ((NOT (IS_PED_DEAD( sub_864() ))) AND (NOT (IS_PED_DEAD( g_U4321[2] ))))
    {
        sub_2266( ref l_U652 );
        sub_2348( 1, g_U4321[2], "M13_UFE_32_AVG", ref l_U652, 2, 0 );
        sub_2348( 0, sub_864(), "MAX", ref l_U652, 2, 0 );
        sub_2590( "SPOL_VIG04A", ref l_U652, 8, 1 );
    }
    return;
}

void sub_46074(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_34676( (uParam0^)[I] );
    }
    return;
}

void sub_47390(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    char[64] cVar11;
    char[64] cVar27;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        if ((uParam1^))
        {
            if (sub_2013( uParam2 ))
            {
                SET_PED_SHOOTS_AT_COORD( (uParam0^), uParam5 );
                sub_1558( uParam2, GET_RANDOM_INT_IN_RANGE( uParam3, uParam4 ), 1, 0 );
                sub_1694( uParam2 );
            }
        }
        if ((NOT (uParam1^)) AND ((PED_GET_ACTION_INTENTION_STATUS( (uParam0^), 47 )) == 3))
        {
            StrCopy( ref cVar11, uParam8, 64 );
            ConcatString(ref cVar11, " can shoot!", 64);
            sub_485( "AT", ref cVar11, 0 );
            (uParam1^) = 1;
        }
        else if (((uParam1^)) AND ((PED_GET_ACTION_INTENTION_STATUS( (uParam0^), 47 )) == 1))
        {
            StrCopy( ref cVar27, uParam8, 64 );
            ConcatString(ref cVar27, " cannot shoot!", 64);
            sub_485( "AT", ref cVar27, 0 );
            (uParam1^) = 0;
        }
    }
    return;
}

int sub_47820()
{
    if (sub_42233( ref g_U4321[0], sub_864(), 1, 1, 1, 1, 1 ))
    {
        sub_485( "AT", "VIG04A_UFE1 is aware of the player!", 0 );
        return 1;
    }
    if (sub_42233( ref g_U4321[1], sub_864(), 1, 1, 1, 1, 1 ))
    {
        sub_485( "AT", "VIG04A_UFE2 is aware of the player!", 0 );
        return 1;
    }
    if (sub_42233( ref g_U4321[2], sub_864(), 1, 1, 1, 1, 1 ))
    {
        sub_485( "AT", "VIG04B_UFE is aware of the player!", 0 );
        return 1;
    }
    if ((sub_43652( ref g_U4311 )) == 0)
    {
        sub_485( "AT", "All the rioters died! Alerting UFE!", 0 );
        return 1;
    }
    if (((ISEQ_QUERY_STATE( 1772865089, 5 )) || (ISEQ_QUERY_STATE( 1772865089, 6 ))) || ((ISEQ_QUERY_STATE( -1750685803, 5 )) || (ISEQ_QUERY_STATE( -1750685803, 6 ))))
    {
        sub_485( "AT", "Sequence complete! Alerting UFE!", 0 );
        return 1;
    }
    return 0;
}

int sub_48619()
{
    int I;

    for ( I = 0; I < g_U4311; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U4311[I] )))
        {
            if (IS_PED_ON_SCREEN( g_U4311[I], 0 ))
            {
                sub_485( "AT", "Rioter is on screen!", 0 );
                l_U625[I]++;
            }
            else
            {
                l_U625[I] = 0;
            }
            if (l_U625[I] > 45)
            {
                sub_485( "AT", "Rioter has been on screen long enough!", 0 );
                return 1;
            }
        }
    }
    return 0;
}

int sub_48865()
{
    int I;

    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U4311[I] )))
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U4311[I], 48 )) == 3)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_48998()
{
    int I;

    sub_33401( ref g_U3827, 0 );
    sub_33401( ref g_U3834, 0 );
    sub_49033( ref g_U3827, 1 );
    sub_49033( ref g_U3834, 1 );
    for ( I = 0; I < 3; I++ )
    {
        if (NOT (IS_PED_DEAD( g_U4311[I] )))
        {
            if (I == 0)
            {
                if (NOT (IS_PED_DEAD( g_U4311[I] )))
                {
                    sub_49176( g_U4311[I] );
                }
            }
            else
            {
                sub_7901( g_U4311[I], l_U483[I]._fU0, l_U483[I]._fU12 );
                PED_FINISH_ACTION_INTENTION( g_U4311[I], 47 );
                PED_SET_ACTION_INTENTION( g_U4311[I], 56, 2000, 0.00000000, 0.00000000, 0.00000000 );
                SET_PED_RELATIONSHIP_GROUP( g_U4311[I], 0 );
                l_U588[I]._fU44 = 0;
            }
            if (I == 1)
            {
                SET_PED_DUCKING( g_U4311[I], 1 );
            }
        }
    }
    return;
}

void sub_49033(int iParam0, unknown uParam1)
{
    if ((sub_33413( iParam0 )) == 0)
    {
        sub_33479( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_AUTO_CLOSE( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_49176(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_49491(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_44566( (uParam0^)[I] );
    }
    return;
}

void sub_49552()
{
    if (NOT (IS_PED_DEAD( g_U4311[1] )))
    {
        if (NOT l_U629)
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U4311[1], 49 )) == 3)
            {
                sub_485( "AT", "Turning off rioter 2's collision!", 0 );
                SET_PED_COLLISION( g_U4311[1], 0 );
                l_U629 = 1;
            }
        }
        else if ((PED_GET_ACTION_INTENTION_STATUS( g_U4311[1], 49 )) == 1)
        {
            sub_485( "AT", "Turning back on rioter 2's collision!", 0 );
            SET_PED_COLLISION( g_U4311[1], 1 );
            PED_FINISH_ACTION_INTENTION( g_U4311[1], 49 );
        }
        if (NOT l_U630)
        {
            if ((PED_GET_ACTION_INTENTION_STATUS( g_U4311[1], 50 )) == 3)
            {
                sub_485( "AT", "Smashing glass!", 0 );
                SMASH_GLASS_IN_RADIUS( "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( g_U4311[1] ), 0.25000000, 1.00000000 );
                l_U630 = 1;
            }
        }
    }
    return;
}

void sub_49914()
{
    int I;
    int J;

    if ((NOT l_U523[1]._fU20) AND (sub_38593( g_U4311[1], l_U744 )))
    {
        sub_485( "AT", "Starting VIG04C_RIOTER2 death timer.", 0 );
        sub_1694( ref l_U523[1] );
        for ( I = 0; I < 2; I++ )
        {
            if (NOT (IS_PED_DEAD( g_U4308[I] )))
            {
                REGISTER_TARGET( g_U4308[I], g_U4311[1] );
                TASK_SHOOT_AT_PED( g_U4308[I], g_U4311[1], 1000, -256437761, 0, 0, 0 );
            }
        }
    }
    if (sub_2013( ref l_U523[1] ))
    {
        sub_485( "AT", "Killing VIG04C_RIOTER2.", 0 );
        sub_50192( g_U4311[1], 5169, 1 );
        sub_50192( g_U4311[1], 65488, 1 );
        sub_50192( g_U4311[1], 3228, 1 );
        sub_49176( g_U4311[1] );
    }
    if ((NOT l_U523[2]._fU20) AND (sub_38593( g_U4311[2], l_U744 )))
    {
        sub_485( "AT", "Starting VIG04C_RIOTER3 death timer.", 0 );
        sub_1694( ref l_U523[2] );
        for ( J = 0; J < 2; J++ )
        {
            if (NOT (IS_PED_DEAD( g_U4308[J] )))
            {
                REGISTER_TARGET( g_U4308[J], g_U4311[2] );
                TASK_SHOOT_AT_PED( g_U4308[J], g_U4311[2], 1000, -256437761, 0, 0, 0 );
            }
        }
    }
    if (sub_2013( ref l_U523[2] ))
    {
        sub_485( "AT", "Killing VIG04C_RIOTER3.", 0 );
        sub_50192( g_U4311[2], 3228, 1 );
        sub_50192( g_U4311[2], 65488, 1 );
        sub_50192( g_U4311[2], 35232, 1 );
        sub_49176( g_U4311[2] );
    }
    return;
}

void sub_50192(unknown uParam0, unknown uParam1, int iParam2)
{
    int I;

    if (DOES_PED_EXIST( uParam0 ))
    {
        START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE( "Blood_headsoup_S_01", uParam0, 0, 0, 0, 0, 0, 0, uParam1, 1065353216 );
    }
    I = 0;
    if ((DOES_PED_EXIST( uParam0 )) == 1)
    {
        for ( I = 0; I < iParam2; I++ )
        {
            DAMAGE_DECALS_ON_PED( uParam0, 1.00000000 );
        }
    }
    return;
}

int sub_50933(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_51132(int iParam0, unknown uParam1)
{
    int Result;
    int I;
    int J;

    Result = 0;
    if (NOT (IS_PED_DEAD( sub_864() )))
    {
        for ( I = 0; I < iParam0->_fU508; I++ )
        {
            if (sub_44331( iParam0->_fU0[I] ))
            {
                Result = 1;
            }
        }
    }
    if ((uParam1) AND (Result))
    {
        for ( J = 0; J < iParam0->_fU508; J++ )
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( ref iParam0->_fU0[J]._fU0, 0 );
        }
    }
    iParam0->_fU548 = 1;
    return Result;
}

void sub_51401()
{
    switch (l_U704)
    {
        case 1:
        sub_485( "GA", "e_LRG_AtriumEnemySpawn = ENTITY_STATE_INIT", 0 );
        sub_28144( ref l_U733, 1056964608, 0 );
        l_U705 = 0;
        l_U704 = 2;
        sub_485( "GA", "e_LRG_AtriumEnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U4308[l_U705] = sub_28403( ref l_U706[l_U705] );
        sub_29242( g_U4308[l_U705], ref l_U733 );
        if (NOT (IS_PED_DEAD( g_U4308[l_U705] )))
        {
            if (l_U705 < 2)
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U4308[l_U705], "f2_lobby_Office02" );
            }
            else
            {
                SET_ROOM_FOR_PED_BY_NAME( g_U4308[l_U705], ref g_U3357 );
                SET_PED_PATH_CAN_AVOID_LINE_OF_FIRE( g_U4308[l_U705], 0 );
                SET_PED_CAN_AVOID_DEATH_ZONES( g_U4308[l_U705], 0 );
            }
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4308[l_U705], 1 );
        }
        l_U705++;
        if (l_U705 >= 2)
        {
            l_U704 = 3;
            sub_485( "GA", "e_LRG_AtriumEnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U733._fU0, 1 );
        sub_30356( ref g_U4308, "pi_LRG_AtriumEnemy" );
        sub_10428( g_U4308[0], -862236369, 25000, 0, 0 );
        sub_10428( g_U4308[1], -862236369, 25000, 0, 0 );
        sub_30014( ref l_U741, g_U4308[1], 1 );
        sub_31291( ref g_U4308 );
        l_U704 = 4;
        sub_485( "GA", "e_LRG_AtriumEnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_52147(int iParam0)
{
    int iVar3;
    float Result;

    if ((sub_33413( iParam0 )) == 0)
    {
        sub_33479( iParam0 );
    }
    iVar3 = 0;
    Result = 0.00000000;
    GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar3, ref Result );
    return Result;
}

void sub_52410()
{
    int I;

    sub_485( "GA", "P_LRG_ATRIUM_ENEMIES_SPOT_PLAYER start", 0 );
    for ( I = 0; I <= 1; I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_864() ))) AND (NOT (IS_PED_DEAD( g_U4308[I] ))))
        {
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4308[I], 0 );
            REGISTER_TARGET( g_U4308[I], sub_864() );
            TASK_COMBAT_PED( g_U4308[I], sub_864() );
        }
    }
    sub_485( "GA", "P_LRG_ATRIUM_ENEMIES_SPOT_PLAYER end", 0 );
    return;
}

int sub_52762(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, float fParam7)
{
    if ((ABSF( sub_52147( ref uParam0 ) )) < fParam7)
    {
        return 1;
        break;
    }
    return 0;
}

void sub_52829()
{
    int Result;
    int I;

    Result = sub_43652( ref g_U4308 );
    for ( I = 0; I <= 4; I++ )
    {
        if (sub_38593( g_U4315[I], l_U765 ))
        {
            Result++;
        }
    }
    for ( I = 0; I <= 2; I++ )
    {
        if (sub_38593( g_U4321[I], l_U765 ))
        {
            Result++;
        }
    }
    return Result;
}

void sub_52976()
{
    int I;

    sub_485( "GA", "P_LRG_DELETE_ENEMIES_NOT_IN_ATRIUM start", 0 );
    for ( I = 0; I <= 4; I++ )
    {
        if ((NOT (sub_38593( g_U4315[I], l_U765 ))) AND (NOT (IS_PED_DEAD( g_U4315[I] ))))
        {
            sub_6247( g_U4315[I] );
        }
    }
    for ( I = 0; I <= 2; I++ )
    {
        if ((NOT (sub_38593( g_U4321[I], l_U765 ))) AND (NOT (IS_PED_DEAD( g_U4321[I] ))))
        {
            sub_6247( g_U4321[I] );
        }
    }
    sub_485( "GA", "P_LRG_DELETE_ENEMIES_NOT_IN_ATRIUM end", 0 );
    return;
}

void sub_53336(unknown uParam0)
{
    int I;

    if ((sub_43652( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_54580()
{
    sub_485( "GA", "P_RELEASE_LRG_ASSETS start", 0 );
    sub_54639( -1257962541, ref g_U2468 );
    sub_54639( -1514674887, ref g_U2468 );
    sub_54639( 743953242, ref g_U2468 );
    sub_54639( -1674641852, ref g_U2468 );
    sub_54905( ref l_U208, ref g_U2468 );
    sub_54972( ref l_U215, ref g_U2613 );
    sub_55207( "LEVEL_S_POLICE_CP_05", ref g_U2741 );
    sub_55207( ref g_U3553, ref g_U2741 );
    sub_55207( "EXPL_CAM", ref g_U2741 );
    sub_485( "GA", "P_RELEASE_LRG_ASSETS end", 0 );
    return;
}

void sub_54639(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5788( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_54905(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_54639( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_54972(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_55007( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_55007(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_5788( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_55207(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5788( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


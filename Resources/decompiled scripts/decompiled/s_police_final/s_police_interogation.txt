void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U74 = 0;
    l_U75 = 0;
    l_U76 = 1500;
    l_U95 = 12;
    l_U142 = 0;
    l_U144 = 1;
    l_U145 = 0;
    l_U178 = 0;
    l_U179 = 0;
    l_U188 = 0;
    l_U273 = 0.25000000;
    l_U328 = -1;
    sub_401( "SP", "Script s_police_interogation.sc is starting up...", 0 );
    sub_450();
    l_U142 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_605();
        if (l_U145 == 0)
        {
            sub_11699();
        }
        WAIT( 0 );
    }
    sub_5281( 1 );
    sub_42092();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_police_interogation" );
    sub_401( "SP", "Script s_police_interogation.sc is terminating...", 0 );
    return;
}

void sub_401(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_450()
{
    sub_401( "GA", "P_IR_POPULATE_SCRIPT_ARRAYS start", 0 );
    l_U146[0] = 1979959192;
    l_U146[1] = 1108016832;
    sub_401( "GA", "P_IR_POPULATE_SCRIPT_ARRAYS end", 0 );
    return;
}

void sub_605()
{
    if (g_U821 == 1)
    {
        switch (l_U145)
        {
            case 0:
            if ((sub_760()) || (IS_PED_DEAD( sub_687() )))
            {
                l_U145 = 1;
                sub_401( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            sub_1255( 1 );
            if (sub_3913())
            {
                l_U145 = 3;
            }
            else if ((sub_3953( 0 )) == 1)
            {
                l_U145 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_687() )))
            {
                l_U145 = 3;
                sub_401( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_401( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_687() ))) AND (NOT (IS_PLAYER_DEAD( sub_709() ))))
            {
                SET_PLAYER_CONTROL( sub_709(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_687() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_687(), 0 );
                }
            }
            if ((g_U862[2]._fU40 != 4) AND (g_U862[2]._fU40 != 0))
            {
                sub_401( "CR", "Shutting down script for MCE_HOLDING_CELLS.", 0 );
                sub_5182( ref g_U862[2] );
                SET_EXITFLAG_FOR_SCRIPT( g_U862[2]._fU32 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            AUDIO_MUSIC_STOP_ONESHOT();
            sub_5281( 0 );
            sub_7096( 1 );
            l_U145 = 4;
            sub_401( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_401( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_7477( ref l_U106, sub_687() );
            l_U145 = 5;
            sub_401( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_401( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U142 = 1;
            l_U144 = 0;
            l_U145 = 0;
            sub_401( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_687()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_709() );
    }
    return 0;
}

void sub_709()
{
    return GET_PLAYER_ID();
}

int sub_760()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_687() )))
        {
            SET_PED_FORCED_TO_WALK( sub_687(), 0 );
            SET_PLAYER_FORCED_AIM( sub_709(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_709(), 1 );
            if ((IS_PED_VISIBLE( sub_687() )) == 0)
            {
                SET_PED_VISIBLE( sub_687(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1255(boolean bParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_687() )))
    {
        if (NOT (IS_PED_IN_COMBAT( sub_687() )))
        {
            if ((NOT l_U86._fU16) AND (NOT l_U86._fU20))
            {
                sub_401( "AT", "Starting painkiller dialogue timer.", 0 );
                sub_1381( ref l_U86, 3500, 1, 0 );
                sub_1517( ref l_U86 );
            }
            if ((l_U86._fU16) AND (sub_1633()))
            {
                sub_401( "AT", "Dialogue detected. Restarting painkiller dialogue timer.", 0 );
                sub_1381( ref l_U86, 3500, 1, 0 );
                sub_1517( ref l_U86 );
            }
            iVar3 = GET_PAYNEKILLER_AMT();
            if (iVar3 > l_U95)
            {
                if (NOT sub_1633())
                {
                    if ((l_U86._fU16) || (sub_1836( ref l_U86 )))
                    {
                        if (g_U4303 < 6)
                        {
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 500 )) < 300)
                            {
                                sub_401( "GA", "Playing painkiller monologue.", 0 );
                                sub_2089( ref l_U96 );
                                sub_2171( 0, sub_687(), "MAX", ref l_U96, 2, 0 );
                                sub_2171( 1, sub_687(), "MAX", ref l_U96, 2, 0 );
                                sub_2413( "SPOL_PLFNDPL", ref l_U96, 8, 1 );
                                g_U4303++;
                            }
                            else
                            {
                                sub_401( "GA", "Not playing painkiller speech, failed random chance test.", 0 );
                            }
                        }
                        else
                        {
                            sub_401( "GA", "Not Playing painkiller speech, already played all 6 lines.", 0 );
                        }
                    }
                    else
                    {
                        sub_401( "GA", "Not playing painkiller speech, not long enough since last dialogue.", 0 );
                    }
                }
                else
                {
                    sub_401( "GA", "Not playing painkiller speech, another speech is currently playing.", 0 );
                }
            }
            l_U95 = iVar3;
        }
        if (sub_3543( l_U96 ))
        {
            if (NOT HAS_CUTSCENE_FINISHED())
            {
                sub_401( "GA", "Killing painkiller speech for cutscene playing.", 0 );
                sub_3783( ref l_U96, 0 );
            }
        }
    }
    if (bParam0)
    {
        sub_1381( ref l_U86, 20000, 1, 0 );
        sub_1517( ref l_U86 );
    }
    return;
}

void sub_1381(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1517(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_1633()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

int sub_1836(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2089(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_2171(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_2413(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_2437( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_2437(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_2492( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_2492(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_2527( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_3021( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_2527(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_3021(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_3543(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_3556( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_3556(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_3783(int iParam0, unknown uParam1)
{
    if (NOT (sub_3556( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_3913()
{
    return g_U648;
}

int sub_3953(int iParam0)
{
    iParam0 = 1;
    switch (l_U75)
    {
        case 0:
        if (NOT (sub_4014( ref l_U77 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_687() )))
            {
                l_U76 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1381( ref l_U77, l_U76, 1, 1 );
            sub_1517( ref l_U77 );
        }
        if (sub_1836( ref l_U77 ))
        {
            sub_401( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_687() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_709() )))
            {
                SET_PLAYER_CONTROL( sub_709(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U75 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U75 = 2;
            }
            else
            {
                l_U75 = 3;
            }
        }
        break;
        case 2:
        sub_401( "NS", "Player will QUIT", 0 );
        sub_4473();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_401( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4473();
        return 1;
        break;
    }
    return 0;
}

int sub_4014(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4473()
{
    sub_401( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4523( ref l_U77 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_709() )))
    {
        SET_PLAYER_CONTROL( sub_709(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U74 = 0;
    l_U74 = l_U74;
    l_U75 = 0;
    return;
}

void sub_4523(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5182(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5281(boolean bParam0)
{
    unknown uVar3;

    sub_401( "GA", "P_CLEANUP_INTEROGATION start", 0 );
    sub_5338( l_U357 );
    if (NOT bParam0)
    {
        sub_401( "AT", "Disabling WALLA: S_POLICE_WZ_TRANSFER and AMBIENT: S_POLICE_ZONE_TRANSFER_GUNFIGHT", 0 );
        ENABLE_STATIC_EMITTER( "S_POLICE_SE_RIOT", 0 );
        ENABLE_STATIC_EMITTER( "S_POLICE_SE_RIOT_ONE_SHOTS", 0 );
        ENABLE_STATIC_EMITTER( "S_POLICE_SE_RIOT_VO_ONE_SHOTS", 0 );
        ENABLE_WALLA_ZONE( "S_POLICE_WZ_CELLS", 0 );
        ENABLE_WALLA_ZONE( "S_POLICE_WZ_TRANSFER", 0 );
        ENABLE_AMBIENT_ZONE( "S_POLICE_ZONE_TRANSFER_GUNFIGHT", 0 );
    }
    ISEQ_TERMINATE( -89244498 );
    sub_5708( -89244498, ref g_U2662 );
    ISEQ_TERMINATE( -1252604898 );
    sub_5708( -1252604898, ref g_U2662 );
    sub_6108( l_U328, 0 );
    sub_6271( ref l_U328 );
    sub_6453( ref l_U221 );
    if (NOT bParam0)
    {
        sub_6453( ref g_U4304 );
        sub_5338( g_U4344 );
        sub_6611( ref g_U4341 );
    }
    sub_5338( l_U191 );
    uVar3 = DOOR_FIND_CLOSEST( g_U3568._fU0, g_U3568._fU4 );
    if (DOES_OBJECT_EXIST( uVar3 ))
    {
        SET_OBJECT_VISIBLE( uVar3, 1 );
    }
    sub_6768( ref l_U180 );
    sub_6875();
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U276._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U307._fU0 );
    sub_401( "GA", "P_CLEANUP_INTEROGATION end", 0 );
    return;
}

void sub_5338(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5708(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5820( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_5820(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_6108(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_401( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_401( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_6271(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_401( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_401( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_6453(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6487( (uParam0^)[I] );
    }
    return;
}

void sub_6487(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_6611(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_6644( (uParam0^)[I] );
    }
    return;
}

void sub_6644(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_6768(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6802( (uParam0^)[I] );
    }
    return;
}

void sub_6802(unknown uParam0)
{
    if (IS_VEHICLE_DEAD( uParam0 ))
    {
        ;
    }
    if (DOES_VEHICLE_EXIST( uParam0 ))
    {
        DELETE_VEHICLE( ref uParam0 );
    }
    return;
}

void sub_6875()
{
    sub_401( "CCB", "P_STOP_SP_CHALLENGES", 0 );
    sub_401( "CCB", "Stopping the Precinct_Interrogation context...", 0 );
    END_CONTEXT( "Precinct_Interrogation" );
    return;
}

void sub_7096(unknown uParam0)
{
    char[64] cVar3;
    unknown uVar19;

    if (NOT (IS_PED_DEAD( sub_687() )))
    {
        sub_7148( sub_687(), g_U2953[uParam0], g_U3083[uParam0] );
        FREEZE_PED_POSITION( sub_687(), 1 );
        if (NOT (IS_STRING_NULL( ref g_U1091[uParam0]._fU0 )))
        {
            StrCopy( ref cVar3, "Loading room: ", 64 );
            ConcatString(ref cVar3, ref g_U1091[uParam0]._fU0, 64);
            uVar19 = GET_INTERIOR_FROM_NAME( ref g_U1091[uParam0]._fU64, 0 );
            SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, GET_HASH_KEY( ref g_U1091[uParam0]._fU0 ) );
        }
        FREEZE_PED_POSITION( sub_687(), 0 );
    }
    return;
}

void sub_7148(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_7477(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_401( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_7661( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8738( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9030( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_9390( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9030( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_9390( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9030( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_9390( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_9675( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_9390( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_9675( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_9390( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_10168( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_10329( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_687(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_401( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_7661(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7693( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7693(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8738(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9030(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_9346( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_9346(unknown uParam0)
{
    return;
}

void sub_9390(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_9675(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_9346( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_10168(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_10329(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7693( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_10401( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_10401(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11699()
{
    int iVar2;
    int I;
    int J;

    iVar2 = l_U142;
    switch (l_U142)
    {
        case 0: break;
        case 1:
        sub_401( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_11879();
        sub_12113();
        sub_12750();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U142 = 2;
        sub_401( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_401( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        g_U822[1] = 0;
        sub_12913();
        sub_17482();
        l_U142 = 3;
        sub_401( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_20486( ref g_U2889 )) AND ((sub_20295( ref g_U2662 )) AND ((sub_20168( ref g_U2741 )) AND ((sub_20047( ref g_U2613 )) AND (sub_19927( ref g_U2468 ))))))
        {
            if ((NOT l_U106._fU0) AND (g_U820 <= 1))
            {
                l_U142 = 4;
                sub_401( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U142 = 6;
                sub_401( "GA", "eCheckpointState = CP_PRE_BINK_SETUP", 0 );
            }
        }
        break;
        case 4:
        sub_401( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        if (g_U820 == 0)
        {
            l_U144 = 1;
        }
        else
        {
            l_U144 = 0;
        }
        if (NOT (sub_20858( ref l_U106 )))
        {
            sub_9675( sub_687(), -862236369, 200, 0, 0 );
            l_U142 = 5;
            sub_401( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U142 = 6;
            sub_401( "GA", "eCheckpointState = CP_PRE_BINK_SETUP", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_687() )))
        {
            if (g_U820 == 0)
            {
                l_U142 = 6;
                sub_401( "GA", "eCheckpointState = CP_PRE_BINK_SETUP", 0 );
            }
            else if (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_687(), 0, 0 ) ))
            {
                g_U821 = 1;
                sub_21373( ref l_U106, g_U821, sub_687(), g_U2953[1], g_U3083[1], g_U3127[1], g_U3171[1], 1 );
                l_U142 = 6;
                sub_401( "GA", "eCheckpointState = CP_PRE_BINK_SETUP", 0 );
            }
        }
        break;
        case 6:
        if (l_U143)
        {
            l_U192 = 1;
            sub_25064();
        }
        if ((l_U192 != 4) AND (l_U192 != 0))
        {
            sub_25664();
        }
        if ((l_U192 > 2) AND (l_U224 == 0))
        {
            l_U224 = 1;
        }
        if ((l_U224 != 4) AND (l_U224 != 0))
        {
            sub_27051();
        }
        if (l_U224 == 4)
        {
            if ((l_U144) AND (g_U821 == 0))
            {
                if (CUTSCENE_IS_LOADED( "13_01_PP_concat" ))
                {
                    g_U822[1] = 1;
                    l_U180[0] = sub_28297( 1979959192, 19.27000000, 46.79000000, 1.50000000, 0.00000000, 0, 0, 0 );
                    if (NOT (IS_VEHICLE_DEAD( l_U180[0] )))
                    {
                        SET_VEHICLE_COLOUR_COMBINATION( l_U180[0], 0 );
                        SET_VEHICLE_EXTRA( l_U180[0], 1, 0 );
                    }
                    l_U357 = sub_25152( 1108016832, 16.49900000, 25.71500000, 0.04900000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
                    if (DOES_OBJECT_EXIST( l_U357 ))
                    {
                        FREEZE_OBJECT_POSITION( l_U357, 1 );
                        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U357, "f2_lobby" );
                    }
                    l_U142 = 7;
                    sub_401( "GA", "eCheckpointState = CP_WAIT_FOR_BINK_MOVIE", 0 );
                }
                else
                {
                    sub_401( "GA", "Waiting for 13_01_PP_concat to load.", 0 );
                }
            }
            else
            {
                g_U822[1] = 1;
                if (NOT l_U188)
                {
                    sub_28818();
                    l_U188 = 1;
                }
                l_U142 = 7;
                sub_401( "GA", "eCheckpointState = CP_WAIT_FOR_BINK_MOVIE", 0 );
            }
        }
        break;
        case 7:
        if (l_U143)
        {
            sub_35575( ref l_U149, "13_01_PP_concat", 29122, 29252, 30753, 32306, 33690, 35291, 250, 0 );
            sub_35994( ref l_U149, ref g_U1091[1]._fU64, ref g_U1091[1]._fU0 );
            sub_36052();
            sub_36267();
            sub_36478( ref g_U3589, -125.00000000, 125.00000000 );
            sub_36583( ref g_U3589, 1, 1, 1065353216 );
            sub_36734( ref g_U3589, 1 );
            if (l_U144)
            {
                l_U149._fU4 = 1;
            }
            else
            {
                l_U149._fU4 = 7;
            }
        }
        if (sub_36828( ref l_U149 ))
        {
            if (l_U144)
            {
                PRELOAD_MOVIE( 0, "mid_07_pp_sh02", 0, 0 );
                PRELOAD_MOVIE( 2, "mid_07_pp_sh06", 0, 0 );
            }
            if (g_U821 != 1)
            {
                g_U821 = 1;
                sub_21373( ref l_U106, g_U821, sub_687(), g_U2953[1], g_U3083[1], g_U3127[1], g_U3171[1], 1 );
            }
            sub_38822();
            l_U142 = 8;
            sub_401( "GA", "eCheckpointState = CP_INTEROGATION_GAMEPLAY", 0 );
        }
        break;
        case 8:
        if (l_U143)
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        sub_39131( ref g_U4304, -1054867456, 0, 1 );
        if (NOT l_U226)
        {
            if (sub_39289())
            {
                for ( I = 0; I < g_U4304; I++ )
                {
                    if ((NOT (IS_PED_DEAD( sub_687() ))) AND (NOT (IS_PED_DEAD( g_U4304[I] ))))
                    {
                        if ((NOT (IS_PED_DEAD( sub_687() ))) AND (NOT (IS_PED_DEAD( g_U4304[I] ))))
                        {
                            REGISTER_TARGET( g_U4304[I], sub_687() );
                        }
                    }
                }
                l_U226 = 1;
            }
            else if ((ISEQ_QUERY_STATE( -1252604898, 6 )) || (ISEQ_QUERY_STATE( -1252604898, 5 )))
            {
                for ( J = 0; J < g_U4304; J++ )
                {
                    if ((NOT (IS_PED_DEAD( sub_687() ))) AND (NOT (IS_PED_DEAD( g_U4304[J] ))))
                    {
                        REGISTER_TARGET( g_U4304[J], sub_687() );
                    }
                    l_U226 = 1;
                }
            }
        }
        if ((NOT l_U274) AND (l_U226))
        {
            if (sub_40198())
            {
                sub_40310();
                l_U274 = 1;
            }
        }
        if ((l_U274) AND (NOT l_U306))
        {
            if ((IS_PED_DEAD( g_U4304[2] )) || (NOT (sub_40593( g_U4304[2], l_U307 ))))
            {
                sub_401( "GA", "Closing processing room door.", 0 );
                sub_36734( ref g_U3589, 0 );
                sub_34671( ref g_U3589, 0 );
                l_U306 = 1;
            }
        }
        if (NOT l_U275)
        {
            if ((sub_40749( ref g_U4304 )) <= 1)
            {
                sub_40840( ref g_U4304 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 0 );
                BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 1 );
                l_U275 = 1;
            }
        }
        if (((sub_40749( ref g_U4304 )) == 0) AND (NOT g_U862[2]._fU36))
        {
            g_U862[2]._fU36 = 1;
        }
        if ((sub_40749( ref g_U4304 )) == 0)
        {
            if ((NOT IS_LAST_MAN_STANDING_ACTIVE()) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
            {
                sub_34874( ref g_U3596, 0 );
                sub_36583( ref g_U3596, 1, 0, 1.00000000 );
                sub_34874( ref g_U3603, 0 );
                sub_36583( ref g_U3603, 1, 0, 1.00000000 );
                l_U328 = GET_SOUND_ID();
                PLAY_SOUND_FROM_COORD( l_U328, "PRISONER_EXCHANGE_DOOR_OPEN", 16.38000000, -6.40000000, -2.50000000 );
                sub_1381( ref l_U348, 5000, 1, 0 );
                sub_1517( ref l_U348 );
                if (NOT (sub_41224( l_U276 )))
                {
                    l_U142 = 9;
                    sub_401( "GA", "eCheckpointState = CP_INTEROGATION_EXIT_FROM_TRIGGERBOX", 0 );
                }
                else
                {
                    l_U142 = 10;
                    sub_401( "GA", "eCheckpointState = CP_FINISHED", 0 );
                }
            }
        }
        break;
        case 9:
        if (l_U143)
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            BULLET_CAMERA_TRACK_UNTIL_GROUNDED( 0 );
            sub_1517( ref l_U329 );
        }
        sub_1255( 0 );
        if (sub_1836( ref l_U329 ))
        {
            sub_6108( l_U328, 0 );
            sub_6271( ref l_U328 );
        }
        if (sub_41472())
        {
            if (sub_1836( ref l_U348 ))
            {
                sub_41556( "SPOL_MXPRSON1", ref l_U338 );
            }
        }
        if (sub_41640( ref l_U276, 0 ))
        {
            sub_1517( ref l_U297 );
            if ((NOT (IS_PLAYER_DEAD( sub_709() ))) AND (NOT (IS_PED_DEAD( sub_687() ))))
            {
                SET_PED_FORCED_TO_WALK( sub_687(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_709(), 0 );
            }
        }
        if (sub_1836( ref l_U297 ))
        {
            PLAY_IMAGEFX( "GRADE_MAGENTA_FAST", 4, 1 );
            l_U142 = 10;
            sub_401( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 10:
        if (l_U143)
        {
            g_U842[2] = 1;
            sub_3783( ref l_U338, 0 );
            sub_6108( l_U328, 0 );
            sub_6271( ref l_U328 );
        }
        if (NOT HAS_CUTSCENE_FINISHED())
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U142 = 0;
            sub_401( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U142 != iVar2)
    {
        l_U143 = 1;
    }
    else
    {
        l_U143 = 0;
    }
    return;
}

void sub_11879()
{
    sub_401( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U143 = 1;
    l_U192 = 0;
    l_U193 = 0;
    l_U224 = 0;
    l_U225 = 0;
    l_U274 = 0;
    l_U275 = 0;
    l_U182 = 0;
    l_U183 = 0;
    l_U184 = 0;
    l_U185 = 0;
    l_U186 = 0;
    l_U187 = 0;
    l_U189 = 0;
    l_U190 = 0;
    l_U226 = 0;
    l_U306 = 0;
    sub_1381( ref l_U329, 1500, 1, 0 );
    sub_1381( ref l_U297, 50, 1, 0 );
    sub_401( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_12113()
{
    sub_401( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_12198( ref l_U194[0], 14.69000000, 17.22000000, -3.30000000, 112.00000000, -448542747, 7, 3, 2, 0, 0 );
    sub_12198( ref l_U194[1], 13.86000000, 14.78000000, -3.30000000, 24.00000000, -501021196, 7, 3, 2, 0, 0 );
    sub_12198( ref l_U227[0], 20.10000000, 7.59000000, -3.40000000, 21.00000000, -1206811852, 6, 5, 2, 0, 1 );
    sub_12198( ref l_U227[1], 23.96000000, 5.61000000, -3.40000000, 100.00000000, 1352021841, 6, 5, 2, 0, 1 );
    sub_12198( ref l_U227[2], 30.61000000, 5.38000000, -3.39000000, 120.00000000, -1158969462, 6, 5, 2, 0, 1 );
    sub_12553( ref l_U276, "tb_IR_HoldingCellsExit", 18.95000000, 4.29000000, -3.39000000, 2.48000000, 2.02000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12553( ref l_U307, "tb_IR_ProcRoom", 28.19000000, 6.06000000, -3.40000000, 12.26000000, 9.80000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_401( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_12198(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_12553(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_12750()
{
    return;
}

void sub_12913()
{
    sub_401( "GA", "P_REQUEST_INTEROGATION_PERSISTENT_ASSETS start", 0 );
    sub_12992( -659929837, ref g_U2468 );
    sub_12992( -36467684, ref g_U2468 );
    sub_12992( 364642999, ref g_U2468 );
    if (g_U821 == 0)
    {
        sub_14386( ref l_U146, ref g_U2468 );
    }
    sub_14453( ref g_U3553, ref g_U2741 );
    sub_14453( "LEVEL_S_POLICE_CP_01", ref g_U2741 );
    sub_15469( -862236369, ref g_U2613 );
    sub_15469( 1964270085, ref g_U2613 );
    sub_16429( ref g_U3489, ref g_U2889 );
    sub_401( "GA", "P_REQUEST_INTEROGATION_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_12992(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_13027( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_13158( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_13027(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_13158( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_13158( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_13158( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_13806( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_13158( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_13158( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_13158(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13178( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_13178(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_13806(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_14386(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_12992( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_14453(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_14474( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_14611( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_14474(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_14611( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_14611( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_14611( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_13806( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_14611( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_14611( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_14611(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13178( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_15469(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_15490( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_15622( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_15490(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_15622( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_15622( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_15622( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_13806( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_15622( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_15622( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15622(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13178( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_16429(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_16450( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_16588( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_16450(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_16588( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_16588( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_16588( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_13806( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_16588( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_16588( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16588(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13178( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_17482()
{
    sub_401( "GA", "P_REQUEST_INTEROGATION_NONPERSISTENT_ASSETS start", 0 );
    if ((l_U144) AND (g_U821 == 0))
    {
        sub_17592( "13_01_PP_concat", 0 );
    }
    sub_17849( -89244498, ref g_U2662 );
    sub_17849( -1252604898, ref g_U2662 );
    sub_401( "GA", "P_REQUEST_INTEROGATION_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_17592(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_17849(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_17884( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_18036( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_17884(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_18036( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_18036( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_18036( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_18036( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_13806( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_13806( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_18036( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_18036( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18036(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_13178( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_19927(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20047(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20168(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20295(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_20486(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_20858(unknown uParam0)
{
    sub_401( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_7477( uParam0, sub_687() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_21373(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_401( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_401( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_10329( iParam1 );
        sub_21632( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_22083( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_22083( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_22083( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_22083( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_22083( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_22315( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_23873( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_401( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_21632(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7693( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_401( "TEH", "Ending context", 0 );
        sub_401( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_22083(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_22315(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_23873(int iParam0)
{
    sub_9346( "CHECKPOINT DATA" );
    sub_23912( iParam0->_fU4 );
    sub_23935( iParam0->_fU16 );
    sub_23935( iParam0->_fU20 );
    sub_23935( iParam0->_fU24 );
    sub_23978( iParam0->_fU28 );
    sub_23978( iParam0->_fU56 );
    sub_23978( iParam0->_fU60 );
    sub_23978( iParam0->_fU64 );
    sub_23978( iParam0->_fU68 );
    sub_23978( iParam0->_fU72 );
    sub_23978( iParam0->_fU76 );
    sub_23978( iParam0->_fU80 );
    sub_23978( iParam0->_fU84 );
    sub_23978( iParam0->_fU88 );
    sub_23978( iParam0->_fU92 );
    sub_23935( iParam0->_fU32 );
    sub_23978( iParam0->_fU36 );
    sub_23978( iParam0->_fU40 );
    sub_23978( iParam0->_fU44 );
    sub_23935( iParam0->_fU136 );
    sub_24183( iParam0->_fU140 );
    sub_23978( iParam0->_fU52 );
    sub_9346( "---nRightHolsterAttachmentEnabled: " );
    sub_23978( iParam0->_fU96 );
    sub_9346( "---nRightHolsterAttachmentToggled: " );
    sub_23978( iParam0->_fU100 );
    sub_9346( "---nLeftHolsterAttachmentEnabled: " );
    sub_23978( iParam0->_fU104 );
    sub_9346( "---nLeftHolsterAttachmentToggled: " );
    sub_23978( iParam0->_fU108 );
    sub_9346( "---nRifleHolsterAttachmentEnabled: " );
    sub_23978( iParam0->_fU112 );
    sub_9346( "---nRifleHolsterAttachmentToggled: " );
    sub_23978( iParam0->_fU116 );
    sub_9346( "---nRightHandAttachmentEnabled: " );
    sub_23978( iParam0->_fU120 );
    sub_9346( "---nRightHandAttachmentToggled: " );
    sub_23978( iParam0->_fU124 );
    sub_9346( "---nLeftHandAttachmentEnabled: " );
    sub_23978( iParam0->_fU128 );
    sub_9346( "---nLeftHandAttachmentToggled: " );
    sub_23978( iParam0->_fU132 );
    sub_23978( l_U1 );
    sub_23978( 144 );
    return;
}

void sub_23912(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_23935(unknown uParam0)
{
    return;
}

void sub_23978(unknown uParam0)
{
    return;
}

void sub_24183(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_25064()
{
    sub_401( "GA", "P_IR_CREATE_BLENDOUT_DOOR start", 0 );
    l_U191 = sub_25152( 364642999, 15.91600000, 15.88100000, -2.29500000, 0, 0, 45.43200000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U191 ))
    {
        FREEZE_OBJECT_POSITION( l_U191, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U191, ref g_U3229 );
        SET_OBJECT_VISIBLE( l_U191, 0 );
    }
    sub_401( "GA", "P_IR_CREATE_BLENDOUT_DOOR end", 0 );
    return;
}

void sub_25152(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_25262( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_25262(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_9346( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_25664()
{
    switch (l_U192)
    {
        case 1:
        sub_401( "GA", "e_IR_SpawnUnconciousCop = ENTITY_STATE_INIT", 0 );
        l_U193 = 0;
        l_U192 = 2;
        sub_401( "GA", "e_IR_SpawnUnconciousCop = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U221[l_U193] = sub_25856( ref l_U194[l_U193] );
        if (NOT (IS_PED_DEAD( l_U221[l_U193] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U221[l_U193], ref g_U3229 );
            DAMAGE_DECALS_ON_PED( l_U221[l_U193], 0.50000000 );
        }
        sub_26603( l_U221[l_U193] );
        l_U193++;
        if (l_U193 >= 2)
        {
            l_U192 = 3;
            sub_401( "GA", "e_IR_SpawnUnconciousCop = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_26831( ref l_U221, "pi_IR_UnconciousCop" );
        l_U192 = 4;
        sub_401( "GA", "e_IR_SpawnUnconciousCop = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_25856(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_25262( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_26335( iParam0->_fU40 );
    sub_26415( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_26335(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_26415(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_26603(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_26831(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_27051()
{
    switch (l_U224)
    {
        case 1:
        sub_401( "GA", "e_IR_SpawnWaitAreaCops = ENTITY_STATE_INIT", 0 );
        sub_27163( ref l_U267, 1056964608, 0 );
        l_U225 = 0;
        l_U224 = 2;
        sub_401( "GA", "e_IR_SpawnWaitAreaCops = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        g_U4304[l_U225] = sub_25856( ref l_U227[l_U225] );
        sub_27456( g_U4304[l_U225], ref l_U267 );
        if (l_U225 == 0)
        {
            sub_9675( g_U4304[l_U225], 1964270085, 25000, 0, 0 );
        }
        else
        {
            sub_9675( g_U4304[l_U225], -862236369, 25000, 0, 0 );
        }
        if ((NOT (IS_PED_DEAD( sub_687() ))) AND (NOT (IS_PED_DEAD( g_U4304[l_U225] ))))
        {
            SET_ROOM_FOR_PED_BY_NAME( g_U4304[l_U225], ref g_U3229 );
            SET_PED_AI_TEMPLATE( g_U4304[l_U225], "AIT_EXPERT" );
            SET_PED_WEAPON_OBSTRUCTION_CHECK_DISTANCE( g_U4304[l_U225], l_U273 );
            SET_PED_ALERTNESS( g_U4304[l_U225], 2 );
        }
        l_U225++;
        if (l_U225 == 3)
        {
            l_U224 = 3;
            sub_401( "GA", "e_IR_SpawnWaitAreaCops = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_26831( ref g_U4304, "pi_IR_WaitAreaCops" );
        sub_28066( ref g_U4304 );
        l_U224 = 4;
        sub_401( "GA", "e_IR_SpawnWaitAreaCops = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_27163(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_27456(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_9346( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_27163( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_27163( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_28066(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_26603( (uParam0^)[I] );
    }
    return;
}

void sub_28297(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, int iParam5, unknown uParam6, unknown uParam7)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a vehicle with MUST BE PRELOADED!!!!", 0 );
        sub_25262( uParam0, 1 );
    }
    Result = CREATE_VEHICLE( uParam0, uParam1, uParam4, uParam6, uParam7 );
    if (iParam5 == 1)
    {
        while ((DOES_VEHICLE_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if (DOES_VEHICLE_EXIST( Result ))
    {
        SET_PETROLTANK_BURN_RATE( Result, 125.00000000 );
    }
    return Result;
}

void sub_28818()
{
    sub_401( "CMT", "Removing pre-riot interiors...", 0 );
    SET_HELPER_ENABLED( "cs_13_01_B", 0, 0 );
    SET_HELPER_ENABLED( "cs_13_01_A", 0, 0 );
    SET_HELPER_ENABLED( "cs_13_01_C", 0, 0 );
    SET_HELPER_ENABLED( "MILO_cell_preriot_interior", 0, 1 );
    SET_HELPER_ENABLED( "exchange_pre_interior", 0, 1 );
    return;
}

int sub_29122()
{
    sub_401( "GA", "F_IR_13_01_PreCutsceneSetup start", 0 );
    sub_9030( sub_687(), -862236369, 1, 200, 0 );
    sub_401( "GA", "F_IR_13_01_PreCutsceneSetup end", 0 );
    return 1;
}

void sub_29252()
{
    unknown uVar2;

    sub_401( "GA", "P_IR_13_01_CutsceneRegistration start", 0 );
    sub_29314( 0 );
    if (NOT (IS_PED_DEAD( sub_687() )))
    {
        CUTSCENE_REGISTER_PED_TELEPORT( sub_687(), g_U2953[1], g_U3083[1] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "floor1", "Corner_Position07", 1, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U3127[1], g_U3171[1] );
        ISEQ_REGISTER_ENTITY( -89244498, "Max", sub_687(), 0 );
        ISEQ_REGISTER_ENTITY( -89244498, "DOOR", l_U191, 1 );
        CUTSCENE_REGISTER_ISEQ( -89244498 );
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_PP_MISC_A", -1562213853 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_PP_MISC_A^1", -379166996 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_PP_MISC_A^2", -1497175842 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_PP_MISC_A^3", 1459763006 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_PP_MISC_A^4", -145085194 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "M_PP_MISC_A^5", -2113058637 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_PP_Civ_A", 1711476475 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_PP_Civ_A^1", 177759467 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_PP_Civ_A^2", 485134255 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_PP_Civ_A^3", 1145837015 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_PP_Civ_A^4", -796996549 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_PP_Civ_A^5", 1068452527 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_PP_Civ_A^6", 1232819403 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A", -508505624 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A^1", 1360321682 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A^2", -734980272 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A^3", -2074501154 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A1", 358232668 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A1^1", -561432827 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A1^2", -733307453 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A2", 1074089435 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A2^1", -154189913 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A2^2", -778026521 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_A2^3", 1388057339 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_PP_Pris_A", 872927971 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_PP_Pris_A^1", 289374192 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "F_UFE_Rcpt_A", -1330560175 );
    if (NOT (IS_VEHICLE_DEAD( l_U180[0] )))
    {
        REGISTER_VEHICLE_PRE_SEAMLESS_CUTSCENE( l_U180[0], "car_detective", 0 );
    }
    REGISTER_HIDE_ENTITY_AT_POSITION( 949690763, 19.72563000, 1.11252000, -1.97630000 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U3680._fU0, g_U3680._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U3687._fU0, g_U3687._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U3596._fU0, g_U3596._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U3603._fU0, g_U3603._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U3589._fU0, g_U3589._fU4 );
    REGISTER_HIDE_ENTITY_AT_POSITION( g_U3568._fU0, g_U3568._fU4 );
    CUTSCENE_ENABLE_SKIP( 0 );
    sub_401( "GA", "P_IR_13_01_CutsceneRegistration end", 0 );
    return;
}

void sub_29314(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_687() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_687(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_687(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_687(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_687(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_687(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_30753()
{
    if (l_U149._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        sub_30805( ref l_U146, ref g_U2468 );
    }
    if (NOT l_U182)
    {
        if (GET_CUTSCENE_TIME() > 2)
        {
            sub_401( "RJM", "Cleaning out UFE dudes", 0 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( 792090389 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( -922842457 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( -659929837 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( 1183925903 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( 759386633 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( 1979959192 );
            l_U182 = 1;
        }
    }
    if (NOT l_U183)
    {
        if (GET_CUTSCENE_TIME() > 73)
        {
            sub_401( "RJM", "Cleaning out Cars & Wilson", 0 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( 1979959192 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( -513086617 );
            l_U183 = 1;
        }
    }
    if (NOT l_U184)
    {
        if (GET_CUTSCENE_TIME() > 96)
        {
            sub_401( "MRB", "Cleaning out Receptionist", 0 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( 759386633 );
            l_U184 = 1;
        }
    }
    if (NOT l_U185)
    {
        if (GET_CUTSCENE_TIME() > 173)
        {
            sub_401( "MRB", "Cleaning out UFE A1", 0 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( -922842457 );
            l_U185 = 1;
        }
    }
    if (NOT l_U186)
    {
        if (GET_CUTSCENE_TIME() > 173)
        {
            sub_401( "MRB", "Cleaning out Prisoners", 0 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( 1183925903 );
            l_U186 = 1;
        }
    }
    if (NOT l_U187)
    {
        if (GET_CUTSCENE_TIME() > 173)
        {
            sub_401( "MRB", "Cleaning out UFE A2", 0 );
            CUTSCENE_MODEL_NO_LONGER_NEEDED( 792090389 );
            l_U187 = 1;
        }
    }
    if (NOT l_U188)
    {
        if (GET_CUTSCENE_TIME() > 211)
        {
            sub_28818();
            l_U188 = 1;
        }
    }
    if (GET_CUTSCENE_TIME() > 169)
    {
        if (NOT l_U178)
        {
            if (DOES_OBJECT_EXIST( l_U176 ))
            {
                SET_OBJECT_VISIBLE( l_U176, 0 );
                l_U178 = 1;
            }
            else
            {
                sub_401( "AT", "Couldn't find chair1 to hide!", 0 );
                l_U176 = FIND_OBJECT_AT_POSITION( "CB_IntrrgtnChr_H", 13.40390000, 15.32561000, -2.94272000, 0.20000000 );
            }
        }
        if (NOT l_U179)
        {
            if (DOES_OBJECT_EXIST( l_U177 ))
            {
                SET_OBJECT_VISIBLE( l_U177, 0 );
                l_U179 = 1;
            }
            else
            {
                sub_401( "AT", "Couldn't find chair2 to hide!", 0 );
                l_U177 = FIND_OBJECT_AT_POSITION( "CB_IntrrgtnChr_H", 12.54537000, 15.32561000, -2.94272000, 0.20000000 );
            }
        }
    }
    if (NOT l_U190)
    {
        if ((NOT (IS_PED_DEAD( sub_687() ))) AND (GET_CUTSCENE_TIME_MS() >= 68020))
        {
            sub_401( "AT", "Setting Max to precinct model no jacket.", 0 );
            APPLY_PLAYER_PRELOAD_VARIATION( sub_687(), 2 );
            l_U190 = 1;
        }
    }
    if (NOT l_U189)
    {
        if ((NOT (IS_PED_DEAD( sub_687() ))) AND (GET_CUTSCENE_TIME_MS() >= 178800))
        {
            if (IS_CUSTOM_PLAYER_VARIATION() == 0)
            {
                sub_401( "GA", "Setting Max to precinct model V2.", 0 );
                SET_PED_COMPONENT_VARIATION( sub_687(), 0, 0, 10, 0 );
                SET_PED_COMPONENT_VARIATION( sub_687(), 2, 21, 0, 0 );
                SET_PED_COMPONENT_VARIATION( sub_687(), 3, 3, 2, 0 );
                SET_PED_COMPONENT_VARIATION( sub_687(), 4, 8, 0, 0 );
                SET_PED_COMPONENT_VARIATION( sub_687(), 12, 0, 0, 0 );
            }
            CUTSCENE_ENABLE_SKIP( 1 );
            l_U189 = 1;
        }
    }
    return;
}

void sub_30805(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_30840( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_30840(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5820( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_32306()
{
    sub_401( "GA", "F_IR_13_02_PostCutscene start", 0 );
    SET_ADRENALINE_AMT( 0.00000000 );
    sub_32375( ref l_U221 );
    sub_32531( l_U221[0], 0 );
    sub_32531( l_U221[1], 0 );
    SET_WEATHER_TYPE_NOW_PERSIST( "SUNNY" );
    if (DOES_OBJECT_EXIST( l_U176 ))
    {
        SET_OBJECT_VISIBLE( l_U176, 1 );
    }
    else
    {
        sub_401( "AT", "Couldn't find chair1 to unhide!", 0 );
    }
    if (DOES_OBJECT_EXIST( l_U177 ))
    {
        SET_OBJECT_VISIBLE( l_U177, 1 );
    }
    else
    {
        sub_401( "AT", "Couldn't find chair2 to unhide!", 0 );
    }
    sub_401( "GA", "F_IR_13_02_PostCutscene end", 0 );
    return 1;
}

void sub_32375(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_32406( (uParam0^)[I] );
    }
    return;
}

void sub_32406(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_32531(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_9346( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_33690()
{
    unknown uVar2;

    sub_401( "GA", "P_IR_START_13_01_PP_BLENDOUT start", 0 );
    sub_401( "AT", "Seting Music to PRECINCT_FINAL mood PRECINCT_01_1_2", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2", "", 0, 3000, -1, -1082130432, 0 );
    sub_29314( 1 );
    sub_401( "AT", "Enabling WALLA: S_POLICE_WZ_TRANSFER and AMBIENT: S_POLICE_ZONE_TRANSFER_GUNFIGHT", 0 );
    ENABLE_STATIC_EMITTER( "S_POLICE_SE_RIOT", 1 );
    ENABLE_STATIC_EMITTER( "S_POLICE_SE_RIOT_ONE_SHOTS", 1 );
    ENABLE_STATIC_EMITTER( "S_POLICE_SE_RIOT_VO_ONE_SHOTS", 1 );
    ENABLE_WALLA_ZONE( "S_POLICE_WZ_CELLS", 1 );
    ENABLE_WALLA_ZONE( "S_POLICE_WZ_TRANSFER", 1 );
    ENABLE_AMBIENT_ZONE( "S_POLICE_ZONE_TRANSFER_GUNFIGHT", 1 );
    if (NOT (ISEQ_QUERY_STATE( -89244498, 3 )))
    {
        ISEQ_REGISTER_ENTITY( -89244498, "Max", sub_687(), 0 );
        ISEQ_REGISTER_ENTITY( -89244498, "DOOR", l_U191, 1 );
        sub_7148( sub_687(), g_U2953[1], g_U3083[1] );
        SNAP_PLAYER_TO_COVERPOINT( sub_709(), "floor1", "Corner_Position07", 1 );
        ISEQ_START( -89244498 );
    }
    if (DOES_OBJECT_EXIST( l_U191 ))
    {
        SET_OBJECT_VISIBLE( l_U191, 1 );
    }
    uVar2 = DOOR_FIND_CLOSEST( g_U3568._fU0, g_U3568._fU4 );
    if (DOES_OBJECT_EXIST( uVar2 ))
    {
        SET_OBJECT_VISIBLE( uVar2, 0 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_POLICE_CP_01", "B_OUT_13_01_PP_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    sub_6768( ref l_U180 );
    sub_5338( l_U357 );
    sub_30805( ref l_U146, ref g_U2468 );
    sub_34512( 1308526797, ref g_U2613 );
    sub_34671( ref g_U3596, 1 );
    sub_34874( ref g_U3596, 1 );
    sub_34671( ref g_U3603, 1 );
    sub_34874( ref g_U3603, 1 );
    sub_35022();
    sub_401( "GA", "P_IR_START_13_01_PP_BLENDOUT end", 0 );
    return;
}

void sub_34512(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_5820( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_34671(int iParam0, int iParam1)
{
    if ((sub_34683( iParam0 )) == 0)
    {
        sub_34749( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_34683(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_34749(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_34874(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_34683( iParam0 )) == 0)
    {
        sub_34749( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_35022()
{
    sub_401( "GA", "P_IR_START_ENEMIES_BLEND_OUT start", 0 );
    sub_32406( g_U4304[0] );
    sub_32406( g_U4304[1] );
    ISEQ_REGISTER_ENTITY( -1252604898, "ENEMY1", g_U4304[0], 0 );
    sub_7148( g_U4304[0], l_U227[0]._fU0, l_U227[0]._fU12 );
    ISEQ_START( -1252604898 );
    sub_401( "GA", "P_IR_START_ENEMIES_BLEND_OUT end", 0 );
    return;
}

int sub_35291()
{
    unknown uVar2;

    if (l_U149._fU52)
    {
        sub_401( "GA", "BOUT_13_01_PP blendout is playing, fading in screen.", 0 );
        DO_SCREEN_FADE_IN( 0 );
    }
    uVar2 = DOOR_FIND_CLOSEST( g_U3568._fU0, g_U3568._fU4 );
    if (DOES_OBJECT_EXIST( uVar2 ))
    {
        SET_OBJECT_VISIBLE( uVar2, 0 );
    }
    if (CAMERA_ANIMATED_CURRENT_TIME() >= ((CAMERA_ANIMATED_LENGTH( "LEVEL_S_POLICE_CP_01", "B_OUT_13_01_PP_CAM" )) - 1))
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[1], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[1], 1065353216, 0 );
        CAMERA_FREEZE_FRAME( 1, 1000, 0, 0 );
        return 1;
    }
    return 0;
}

void sub_35575(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_401( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_35700( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 35660, 35678, uParam8 );
}

void sub_35660()
{
    return;
}

int sub_35678()
{
    return 1;
}

void sub_35700(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_35994(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

void sub_36052()
{
    g_U4341[0] = sub_36087( -4072149, g_U4351, g_U4354, 1, 0, 1, 40.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4341[0], ref g_U3229 );
    g_U4341[1] = sub_36087( -4072149, g_U4357, g_U4360, 1, 0, 1, 40.00000000 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4341[1], ref g_U3229 );
    return;
}

void sub_36087(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_36267()
{
    sub_401( "GA", "P_HC_CREATE_OFFICE_FIRST_AID_BOX start", 0 );
    g_U4344 = sub_25152( -36467684, g_U4345, g_U4348, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4344 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4344, ref g_U3229 );
        FREEZE_OBJECT_POSITION( g_U4344, 1 );
    }
    sub_401( "GA", "P_HC_CREATE_OFFICE_FIRST_AID_BOX end", 0 );
    return;
}

void sub_36478(int iParam0, float fParam1, float fParam2)
{
    if ((sub_34683( iParam0 )) == 0)
    {
        sub_34749( iParam0 );
    }
    if (fParam1 > fParam2)
    {
        ;
    }
    else
    {
        DOOR_FIND_CLOSEST_SET_LIMIT_MIN( iParam0->_fU0, iParam0->_fU4, fParam1 );
        DOOR_FIND_CLOSEST_SET_LIMIT_MAX( iParam0->_fU0, iParam0->_fU4, fParam2 );
    }
    return;
}

void sub_36583(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_34683( iParam0 )) == 0)
    {
        sub_34749( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_36734(int iParam0, unknown uParam1)
{
    if ((sub_34683( iParam0 )) == 0)
    {
        sub_34749( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_36828(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_401( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_401( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_401( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_401( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_401( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_401( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_17592( iParam0->_fU0, 0 );
            sub_401( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_37695( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_37695( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_401( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_29314( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_37695( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_38339( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_38339( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_37695(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_687() )))
        {
            SET_PLAYER_CONTROL( sub_709(), 0, uParam2 );
            SET_PED_DUCKING( sub_687(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_687() );
            }
            SET_PED_INVINCIBLE( sub_687(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_38339(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_687() )))
    {
        SET_PLAYER_CONTROL( sub_709(), 1, 0 );
        SET_PED_INVINCIBLE( sub_687(), 0 );
        if (bParam0)
        {
            sub_38420();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_38420()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_687() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_687(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_687(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_687(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_687(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_38822()
{
    sub_401( "CCB", "P_START_SP_CHALLENGES", 0 );
    sub_401( "CCB", "Starting the Precinct context...", 0 );
    START_CONTEXT( "Precinct" );
    sub_401( "CCB", "Starting the Precinct_Interrogation context...", 0 );
    START_CONTEXT( "Precinct_Interrogation" );
    return;
}

void sub_39131(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_39168( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_39168(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_6487( uParam0 );
            }
        }
    }
    return;
}

int sub_39289()
{
    unknown uVar2;

    if (NOT (IS_PED_DEAD( sub_687() )))
    {
        uVar2 = sub_687();
        if (HAS_SHOT_BEEN_FIRED_IN_AREA( g_U2953[1], 25.00000000, 1, ref uVar2 ))
        {
            sub_401( "AT", "Shots fired! Alerting UFE!", 0 );
            return 1;
        }
        if (sub_39410( ref g_U4304, sub_687(), 1, 1, 1, 1, 1 ))
        {
            sub_401( "AT", "Peds aware of player! Alerting UFE!", 0 );
            return 1;
        }
    }
    return 0;
}

int sub_39410(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((sub_39455( ref (uParam0^)[I], uParam1, uParam2, uParam3, uParam4, uParam5, uParam6 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

int sub_39455(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, int iParam6)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        if ((uParam3) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 1 )))
        {
            if (iParam6 == 1)
            {
                sub_401( "MF", "ped has SEEN target ped", 0 );
            }
            return 1;
        }
        else if ((uParam4) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 8 )))
        {
            if (iParam6 == 1)
            {
                sub_401( "MF", "ped has BEEN SHOT AT by target ped", 0 );
            }
            return 1;
        }
        else if ((uParam2) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 2 )))
        {
            if (iParam6 == 1)
            {
                sub_401( "MF", "ped has HEARD target ped", 0 );
            }
            return 1;
        }
        else if ((uParam5) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 4 )))
        {
            if (iParam6 == 1)
            {
                sub_401( "MF", "ped has BEEN TOLD ABOUT target ped", 0 );
            }
            return 1;
        };;;;
    }
    return 0;
}

int sub_40198()
{
    if (NOT (IS_PED_DEAD( sub_687() )))
    {
        if (NOT (IS_PED_USING_MP3_COVER_TASK( sub_687() )))
        {
            return 1;
        }
    }
    if (IS_PED_DEAD( g_U4304[0] ))
    {
        return 1;
    }
    if (IS_PED_DEAD( g_U4304[1] ))
    {
        return 1;
    }
    return 0;
}

void sub_40310()
{
    sub_401( "GA", "P_IR_ACTIVATE_THIRD_WAIT_AREA_ENEMY start", 0 );
    if ((NOT (IS_PED_DEAD( sub_687() ))) AND (NOT (IS_PED_DEAD( g_U4304[2] ))))
    {
        sub_32406( g_U4304[2] );
        SET_PED_ALERTNESS( g_U4304[2], 3 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4304[2], 0 );
        REGISTER_TARGET( g_U4304[2], sub_687() );
        TASK_COMBAT_PED( g_U4304[2], sub_687() );
    }
    sub_401( "GA", "P_IR_ACTIVATE_THIRD_WAIT_AREA_ENEMY end", 0 );
    return;
}

int sub_40593(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_40749(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_40840(unknown uParam0)
{
    int I;

    if ((sub_40749( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_41224(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_40593( sub_687(), uParam0 );
}

int sub_41472()
{
    if ((l_U86._fU16) || (sub_1836( ref l_U86 )))
    {
        return 1;
    }
    return 0;
}

void sub_41556(unknown uParam0, unknown uParam1)
{
    sub_2089( uParam1 );
    sub_2171( 0, sub_687(), "MAX", uParam1, 2, 0 );
    sub_2171( 1, sub_687(), "MAX", uParam1, 2, 0 );
    sub_2413( uParam0, uParam1, 8, 1 );
    return;
}

void sub_41640(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_40593( sub_687(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_42092()
{
    sub_401( "GA", "P_RELEASE_INTEROGATION_ASSETS start", 0 );
    sub_30805( ref l_U146, ref g_U2468 );
    sub_30840( -659929837, ref g_U2468 );
    sub_30840( -36467684, ref g_U2468 );
    sub_30840( 364642999, ref g_U2468 );
    sub_42214( ref g_U3553, ref g_U2741 );
    sub_42214( "LEVEL_S_POLICE_CP_01", ref g_U2741 );
    sub_34512( -862236369, ref g_U2613 );
    sub_34512( 1964270085, ref g_U2613 );
    sub_42451( ref g_U3489, ref g_U2889 );
    sub_401( "GA", "P_RELEASE_INTEROGATION_ASSETS end", 0 );
    return;
}

void sub_42214(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5820( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_42451(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5820( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


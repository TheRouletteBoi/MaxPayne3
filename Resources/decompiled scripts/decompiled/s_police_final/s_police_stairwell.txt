void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U74 = 0;
    l_U75 = 0;
    l_U76 = 1500;
    l_U86 = {0, 0, 0};
    StrCopy( ref l_U89, "DUMMY", 32 );
    l_U97 = 1;
    l_U102 = 0;
    l_U103 = 0;
    l_U104 = 0;
    l_U107 = 0;
    l_U153 = 0;
    l_U201 = 0;
    l_U204 = 0;
    l_U205 = 0;
    l_U215 = {534.00000000, -24.20000000, 9.50000000};
    l_U218 = {536.00000000, -18.75000000, 8.20000000};
    l_U221 = {532.55000000, -24.55000000, 12.19000000};
    l_U224 = {533.58000000, -23.84000000, 12.19000000};
    l_U293 = 1500;
    l_U294 = 3000;
    l_U355 = 50000;
    l_U365 = 40.00000000;
    l_U366 = l_U355 - 5000;
    l_U486 = 1000;
    l_U1422 = 0;
    l_U1423 = 0;
    sub_578( "SP", "Script s_police_stairwell.sc is starting up...", 0 );
    sub_627();
    l_U201 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_862();
        if (l_U205 == 0)
        {
            sub_9831();
        }
        sub_42501();
        WAIT( 0 );
    }
    sub_3758();
    sub_42720();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_police_stairwell" );
    sub_578( "SP", "Script s_police_stairwell.sc is terminating...", 0 );
    return;
}

void sub_578(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_627()
{
    sub_578( "GA", "P_STR_POPULATE_SCRIPT_ARRAYS start", 0 );
    l_U191[0] = 2027698079;
    l_U191[1] = 2146529263;
    l_U191[2] = 623430912;
    l_U191[3] = 2014638728;
    l_U196[0] = 406496141;
    l_U196[1] = -862236369;
    l_U196[2] = -1013714740;
    l_U196[3] = -175608314;
    sub_578( "GA", "P_STR_POPULATE_SCRIPT_ARRAYS end", 0 );
    return;
}

void sub_862()
{
    if (g_U821 == 10)
    {
        switch (l_U205)
        {
            case 0:
            if ((sub_1023()) || ((l_U203) || (IS_PED_DEAD( sub_944() ))))
            {
                sub_1461( ref l_U376, 0 );
                sub_1461( ref l_U395, 0 );
                AUDIO_MUSIC_SUSPEND( 5000 );
                l_U205 = 1;
                sub_578( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            if (sub_1690())
            {
                l_U205 = 3;
            }
            else if ((sub_1730( 0 )) == 1)
            {
                l_U205 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_944() )))
            {
                l_U205 = 3;
                sub_578( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_578( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_944() ))) AND (NOT (IS_PLAYER_DEAD( sub_966() ))))
            {
                SET_PLAYER_CONTROL( sub_966(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_944() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_944(), 0 );
                }
                sub_3255();
            }
            if ((g_U862[11]._fU40 != 4) AND (g_U862[11]._fU40 != 0))
            {
                sub_578( "CR", "Shutting down script for MCE_TECH_ROOM.", 0 );
                sub_3660( ref g_U862[11] );
                SET_EXITFLAG_FOR_SCRIPT( g_U862[11]._fU32 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            AUDIO_MUSIC_STOP_ONESHOT();
            sub_3758();
            sub_5234( 10 );
            l_U205 = 4;
            sub_578( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_578( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_5615( ref l_U155, sub_944() );
            l_U205 = 5;
            sub_578( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_578( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U201 = 1;
            l_U205 = 0;
            sub_578( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_944()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_966() );
    }
    return 0;
}

void sub_966()
{
    return GET_PLAYER_ID();
}

int sub_1023()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_944() )))
        {
            SET_PED_FORCED_TO_WALK( sub_944(), 0 );
            SET_PLAYER_FORCED_AIM( sub_966(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_966(), 1 );
            if ((IS_PED_VISIBLE( sub_944() )) == 0)
            {
                SET_PED_VISIBLE( sub_944(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1461(int iParam0, unknown uParam1)
{
    if (NOT (sub_1475( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

boolean sub_1475(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_1690()
{
    return g_U648;
}

int sub_1730(int iParam0)
{
    iParam0 = 1;
    switch (l_U75)
    {
        case 0:
        if (NOT (sub_1791( ref l_U77 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_944() )))
            {
                l_U76 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1901( ref l_U77, l_U76, 1, 1 );
            sub_2037( ref l_U77 );
        }
        if (sub_2157( ref l_U77 ))
        {
            sub_578( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_944() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_966() )))
            {
                SET_PLAYER_CONTROL( sub_966(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U75 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U75 = 2;
            }
            else
            {
                l_U75 = 3;
            }
        }
        break;
        case 2:
        sub_578( "NS", "Player will QUIT", 0 );
        sub_2644();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_578( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_2644();
        return 1;
        break;
    }
    return 0;
}

int sub_1791(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_1901(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_2037(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

int sub_2157(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2644()
{
    sub_578( "NS", "P_PostFailRetryCleanup", 0 );
    sub_2694( ref l_U77 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_966() )))
    {
        SET_PLAYER_CONTROL( sub_966(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U74 = 0;
    l_U74 = l_U74;
    l_U75 = 0;
    return;
}

void sub_2694(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_3255()
{
    sub_578( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD( sub_944() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
            sub_578( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( sub_944(), "/Global/Player" );
        }
    }
    sub_578( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

void sub_3660(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_3758()
{
    sub_578( "GA", "P_CLEANUP_STR start", 0 );
    ISEQ_TERMINATE( 1750428255 );
    sub_3822( 1750428255, ref g_U2662 );
    sub_4219( "S_POLICE_SMOKE_GRENADE", ref g_U2849 );
    sub_4553( "S_POLICE_SMOKE_GRENADE", ref g_U2849 );
    sub_4727( l_U308 );
    sub_4806( l_U313 );
    sub_4806( l_U310 );
    sub_4806( l_U311 );
    sub_4871( l_U309 );
    sub_4918( ref l_U1424 );
    if (NOT (IS_PED_DEAD( sub_944() )))
    {
        SET_PED_DAMAGED_BY_TEAR_GAS( sub_944(), 0 );
    }
    SET_TEAR_GAS_EFFECT_AUTO_END( 1 );
    END_POSTFX_BLENDER( 14, 0 );
    CLEAR_TIMECYCLE_MODIFIER();
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1028._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1049._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1070._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1091._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1112._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1133._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1154._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1175._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1196._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1380._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U1401._fU0 );
    sub_578( "GA", "P_CLEANUP_STR end", 0 );
    return;
}

void sub_3822(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3934( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_3934(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_4219(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_4236( uParam0, uParam1 ))
    {
        iVar4 = sub_4335( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            STOP_SCRIPT_STREAM( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to stop a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    return;
}

int sub_4236(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                return 1;
            }
        }
    }
    return 0;
}

int sub_4335(unknown uParam0, unknown uParam1)
{
    int Result;

    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
        {
            return Result;
        }
    }
    return -1;
}

void sub_4553(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3934( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_4727(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_4806(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_4871(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_4918(unknown uParam0)
{
    if ((DOES_CAM_EXIST( (uParam0^) )) == 1)
    {
        if ((IS_CAM_ACTIVE( (uParam0^) )) == 1)
        {
            SET_CAM_ACTIVE( (uParam0^), 0 );
        }
        DESTROY_CAM( (uParam0^) );
    }
    (uParam0^) = nil;
    return;
}

void sub_5234(unknown uParam0)
{
    char[64] cVar3;
    unknown uVar19;

    if (NOT (IS_PED_DEAD( sub_944() )))
    {
        sub_5286( sub_944(), g_U2953[uParam0], g_U3083[uParam0] );
        FREEZE_PED_POSITION( sub_944(), 1 );
        if (NOT (IS_STRING_NULL( ref g_U1091[uParam0]._fU0 )))
        {
            StrCopy( ref cVar3, "Loading room: ", 64 );
            ConcatString(ref cVar3, ref g_U1091[uParam0]._fU0, 64);
            uVar19 = GET_INTERIOR_FROM_NAME( ref g_U1091[uParam0]._fU64, 0 );
            SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, GET_HASH_KEY( ref g_U1091[uParam0]._fU0 ) );
        }
        FREEZE_PED_POSITION( sub_944(), 0 );
    }
    return;
}

void sub_5286(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_5615(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_578( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_5799( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_6876( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_7168( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_7528( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_7168( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_7528( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_7168( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_7528( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_7813( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_7528( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_7813( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_7528( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_8306( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_8467( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_944(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_578( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_5799(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_5831( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_5831(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_6876(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_7168(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_7484( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_7484(unknown uParam0)
{
    return;
}

void sub_7528(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_7813(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_7484( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_8306(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_8467(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_5831( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_8539( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_8539(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_9831()
{
    int iVar2;
    unknown uVar3;

    iVar2 = l_U201;
    switch (l_U201)
    {
        case 0: break;
        case 1:
        sub_578( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_10019();
        sub_10298();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U201 = 2;
        sub_578( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_578( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        g_U822[10] = 0;
        sub_17765();
        sub_21306();
        l_U201 = 3;
        sub_578( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_25105( ref g_U2849 )) AND ((sub_24914( ref g_U2662 )) AND ((sub_24787( ref g_U2741 )) AND ((sub_24666( ref g_U2613 )) AND (sub_24546( ref g_U2468 ))))))
        {
            if ((NOT l_U155._fU0) AND (g_U820 == 10))
            {
                l_U201 = 4;
                sub_578( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U201 = 6;
                sub_578( "SP", "eCheckpointState = CP_STR_PRE_CREATE_PEDS", 0 );
            }
        }
        break;
        case 4:
        sub_578( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U842[10] = 1;
        if (NOT (sub_25462( ref l_U155 )))
        {
            sub_7813( sub_944(), -1013714740, 200, 0, 0 );
            sub_7168( sub_944(), -862236369, 0, 200, 0 );
            sub_7168( sub_944(), -862236369, 1, 200, 0 );
            l_U201 = 5;
            sub_578( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U201 = 6;
            sub_578( "GA", "eCheckpointState = CP_STR_PRE_CREATE_PEDS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_944() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_944(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_944(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_944(), 0, 0 ) ))))
            {
                g_U821 = 10;
                sub_25993( ref l_U155, g_U821, sub_944(), g_U2953[10], g_U3083[10], g_U3127[10], g_U3171[10], 1 );
                l_U201 = 6;
                sub_578( "GA", "eCheckpointState = CP_STR_PRE_CREATE_PEDS", 0 );
            }
        }
        break;
        case 6:
        sub_29673();
        l_U201 = 7;
        sub_578( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        break;
        case 7:
        if (l_U202)
        {
            g_U822[10] = 1;
        }
        if (g_U842[10])
        {
            SET_WEATHER_TYPE_NOW_PERSIST( "RAIN" );
            l_U201 = 8;
            sub_578( "GA", "eCheckpointState = CP_HANDLE_NIS_TEARGAS", 0 );
        }
        break;
        case 8:
        if (l_U202)
        {
            if (NOT (IS_PED_DEAD( sub_944() )))
            {
                SET_PED_DAMAGED_BY_TEAR_GAS( sub_944(), 1 );
            }
            sub_578( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_3", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_3", 0, 0, -1, -1, -1082130432, 0 );
            sub_578( "GA", "Playing music one shot PRECINCT_ONESHOT_5", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            sub_31982();
            l_U227 = 1;
        }
        sub_32512();
        sub_34085();
        if (l_U227 == 5)
        {
            sub_34321();
            l_U1422 = 1;
            if (g_U821 != 10)
            {
                g_U821 = 10;
                sub_25993( ref l_U155, g_U821, sub_944(), g_U2953[10], g_U3083[10], g_U3127[10], g_U3171[10], 1 );
            }
            l_U201 = 9;
            sub_578( "GA", "eCheckpointState = CP_GAMEPLAY_TRAPPED_IN_STAIRWELL", 0 );
        }
        break;
        case 9:
        if (l_U202)
        {
            sub_2037( ref l_U367 );
        }
        sub_34085();
        if (((g_U862[9]._fU40 == 4) || (g_U862[9]._fU40 == 0)) AND (NOT g_U862[11]._fU36))
        {
            g_U862[11]._fU36 = 1;
        }
        if (NOT l_U204)
        {
            sub_35538();
        }
        sub_35618();
        if (sub_2157( ref l_U367 ))
        {
            SET_TEAR_GAS_EFFECT_AUTO_END( 0 );
            START_POSTFX_BLENDER( 14 );
        }
        if (NOT l_U314)
        {
            if (DOES_OBJECT_EXIST( l_U313 ))
            {
                if ((IS_EXPLOSION_IN_SPHERE( -1, 532.83000000, -17.17000000, 12.31000000, 1.50000000 )) || (HAS_OBJECT_BEEN_DAMAGED( l_U313 )))
                {
                    CAMERA_CAN_TARGET_OBJECT( 0, l_U313 );
                    sub_37684( l_U313, "STAIRCSE_VENT", "po_anim2", 1065353216, 0 );
                    sub_578( "SBA", "P_HANDLE_START_EVENTS: Vent is open!", "***" );
                    l_U314 = 1;
                    l_U1423 = 1;
                }
            }
        }
        else if (sub_37086( ref l_U315, 0 ))
        {
            g_U842[11] = 1;
            sub_2037( ref l_U206 );
            sub_1461( ref l_U376, 0 );
            sub_1461( ref l_U395, 0 );
            if ((NOT (IS_PLAYER_DEAD( sub_966() ))) AND (NOT (IS_PED_DEAD( sub_944() ))))
            {
                SET_PED_FORCED_TO_WALK( sub_944(), 1 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_966(), 0 );
            }
            l_U201 = 11;
            sub_578( "GA", "eCheckpointState = CP_FINISHED", 0 );
            break;
        }
        if ((NOT l_U336._fU20) AND (NOT l_U204))
        {
            if (sub_2157( ref l_U356 ))
            {
                l_U201 = 10;
                sub_578( "GA", "eCheckpointState = CP_HANDLE_MID_11_PP", 0 );
            }
        }
        break;
        case 10:
        if (l_U202)
        {
            sub_32616( 1, 0, 0, 0 );
            TOGGLE_SECONDARY_LIFE_BAR( 0 );
            l_U345 = 0;
            uVar3 = GET_WEAPON_FROM_HOLSTER( sub_944(), 2 );
            if (GET_DOES_WEAPON_EXIST( uVar3 ))
            {
                TASK_DROP_WEAPON( sub_944(), uVar3 );
            }
            CLEAR_TIMECYCLE_MODIFIER();
        }
        else if (NOT l_U1297)
        {
            sub_38202();
            l_U1297 = 1;
        }
        if (sub_39967())
        {
            l_U203 = 1;
            l_U201 = 0;
            sub_578( "GA", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
        case 11:
        if (sub_2157( ref l_U206 ))
        {
            sub_578( "AT", "Ending post effects.", 0 );
            SET_TEAR_GAS_EFFECT_AUTO_END( 1 );
            END_POSTFX_BLENDER( 14, 0 );
        }
        if (g_U821 == 11)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U201 = 0;
            sub_578( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    sub_40736();
    if (l_U201 != iVar2)
    {
        l_U202 = 1;
    }
    else
    {
        l_U202 = 0;
    }
    return;
}

void sub_10019()
{
    sub_578( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    sub_1901( ref l_U206, 4320, 1, 0 );
    l_U202 = 1;
    l_U203 = 0;
    l_U292 = 0;
    l_U290 = 0;
    l_U291 = 0;
    l_U227 = 0;
    l_U345 = 0;
    sub_1901( ref l_U346, 1000, 1, 0 );
    l_U476 = 0;
    sub_1901( ref l_U386, l_U472[l_U476], 1, 0 );
    sub_1901( ref l_U356, l_U355, 1, 0 );
    sub_1901( ref l_U367, l_U366, 1, 0 );
    l_U312 = 0;
    l_U314 = 0;
    sub_1901( ref l_U336, 1500, 1, 0 );
    l_U1297 = 0;
    l_U1422 = 0;
    l_U1423 = 0;
    sub_578( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_10298()
{
    sub_578( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_10380( ref l_U295, 534.65140000, -18.15191000, 6.05017300, 150.00000000, 574607845, 8, 4, 2, 3, 0 );
    sub_10560( ref l_U405, "tb_STR_LockedDoorF1", 532.50000000, -25.67000000, 3.75000000, 1.00000000, 0.75000000, 3.56000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U426, "tb_STR_LockedDoorF2", 532.50000000, -25.67000000, 7.38000000, 1.00000000, 0.75000000, 3.56000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U447, "tb_STR_LockedDoorF3", 532.50000000, -25.67000000, 10.97000000, 1.00000000, 0.75000000, 3.56000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U315, "tb_STR_ClimbInVent", 532.88000000, -17.72000000, 9.66000000, 1.76000000, 1.08000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1028, "tb_MID11_Platform1", 534.00000000, -24.16000000, 3.74000000, 5.59000000, 3.64000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1049, "tb_MID11_Platform2", 534.00000000, -18.87000000, 5.85000000, 5.59000000, 3.36000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1070, "tb_MID11_Platform3", 534.00000000, -24.16000000, 7.60000000, 5.59000000, 3.64000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1091, "tb_MID11_Platform4", 534.00000000, -18.87000000, 9.48000000, 5.59000000, 3.36000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1112, "tb_MID11_Platform5", 534.00000000, -24.16000000, 11.02000000, 5.59000000, 3.64000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1133, "tb_MID11_Stairs1", 532.58000000, -21.59000000, 4.39000000, 2.74000000, 2.30000000, 3.80000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1154, "tb_MID11_Stairs2", 535.43000000, -21.36000000, 6.21000000, 2.74000000, 2.30000000, 3.80000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1175, "tb_MID11_Stairs3", 532.58000000, -21.45000000, 8.00000000, 2.74000000, 2.30000000, 3.80000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1196, "tb_MID11_Stairs4", 535.43000000, -21.43000000, 9.81000000, 2.74000000, 2.30000000, 3.80000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1380, "tbImageFX_GAS02", 535.05200000, -23.40150000, 7.17093000, 3.50000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_10560( ref l_U1401, "tbImageFX_GAS03", 532.83600000, -19.27370000, 9.38773000, 3.50000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    l_U487[0]._fU0 = {531.88600000, -25.21900000, 3.92400000};
    l_U487[0]._fU12 = 320.00000000;
    l_U487[0]._fU16 = {532.77200000, -25.73300000, 5.14500000};
    l_U487[0]._fU28 = {-25.85500000, 0.00000000, 5.58800000};
    l_U487[0]._fU40 = {533.94300000, -24.72100000, 4.85800000};
    l_U487[0]._fU52 = {-38.15200000, 0.00000000, 49.79200000};
    l_U487[0]._fU64 = 6800;
    l_U487[0]._fU68 = 2500;
    l_U487[0]._fU72 = 0;
    l_U487[0]._fU76 = 47;
    l_U487[1]._fU0 = {531.88600000, -25.21900000, 3.92400000};
    l_U487[1]._fU12 = 320.00000000;
    l_U487[1]._fU16 = {533.19500000, -22.89500000, 5.53100000};
    l_U487[1]._fU28 = {-25.16600000, 0.64500000, 159.03000000};
    l_U487[1]._fU40 = {533.03200000, -22.57200000, 6.17800000};
    l_U487[1]._fU52 = {-55.05500000, 0.84400000, 173.85100000};
    l_U487[1]._fU64 = 7500;
    l_U487[1]._fU68 = 6200;
    l_U487[1]._fU72 = 0;
    l_U487[1]._fU76 = 48;
    l_U487[2]._fU0 = {531.88600000, -25.21900000, 3.92400000};
    l_U487[2]._fU12 = 320.00000000;
    l_U487[2]._fU16 = {531.21200000, -24.96200000, 5.71800000};
    l_U487[2]._fU28 = {-39.84600000, -0.26800000, -71.79400000};
    l_U487[2]._fU40 = {532.33900000, -25.30900000, 5.12800000};
    l_U487[2]._fU52 = {-38.97400000, -0.51600000, -31.97500000};
    l_U487[2]._fU64 = 9200;
    l_U487[2]._fU68 = 6200;
    l_U487[2]._fU72 = 0;
    l_U487[2]._fU76 = 49;
    l_U487[3]._fU0 = {532.05400000, -18.36200000, 6.06000000};
    l_U487[3]._fU12 = 267.01600000;
    l_U487[3]._fU16 = {532.06700000, -17.76900000, 7.58600000};
    l_U487[3]._fU28 = {-36.23800000, 0.00000000, -127.40900000};
    l_U487[3]._fU40 = {533.49400000, -19.26200000, 7.20500000};
    l_U487[3]._fU52 = {-56.57900000, 0.00000000, -41.48800000};
    l_U487[3]._fU64 = 12000;
    l_U487[3]._fU68 = 2500;
    l_U487[3]._fU72 = 1;
    l_U487[3]._fU76 = 47;
    l_U487[4]._fU0 = {532.05400000, -18.36200000, 6.06000000};
    l_U487[4]._fU12 = 267.01600000;
    l_U487[4]._fU16 = {531.50700000, -19.84900000, 6.79300000};
    l_U487[4]._fU28 = {11.69300000, 0.00500000, -54.81700000};
    l_U487[4]._fU40 = {532.06500000, -19.54300000, 6.39100000};
    l_U487[4]._fU52 = {-4.24400000, 0.00000000, -54.43000000};
    l_U487[4]._fU64 = 11000;
    l_U487[4]._fU68 = 6200;
    l_U487[4]._fU72 = 1;
    l_U487[4]._fU76 = 48;
    l_U487[5]._fU0 = {532.05400000, -18.36200000, 6.06000000};
    l_U487[5]._fU12 = 267.01600000;
    l_U487[5]._fU16 = {531.30400000, -19.29400000, 7.20800000};
    l_U487[5]._fU28 = {-1.27900000, -0.65900000, -67.44400000};
    l_U487[5]._fU40 = {532.43400000, -19.59200000, 7.65300000};
    l_U487[5]._fU52 = {-49.64600000, 0.00000000, -38.52100000};
    l_U487[5]._fU64 = 8000;
    l_U487[5]._fU68 = 6200;
    l_U487[5]._fU72 = 1;
    l_U487[5]._fU76 = 49;
    l_U487[6]._fU0 = {536.11400000, -23.80600000, 7.81000000};
    l_U487[6]._fU12 = 93.17700000;
    l_U487[6]._fU16 = {536.61100000, -23.92000000, 9.16000000};
    l_U487[6]._fU28 = {-26.53100000, -0.10900000, 86.99500000};
    l_U487[6]._fU40 = {535.18400000, -24.03300000, 9.42000000};
    l_U487[6]._fU52 = {-59.76100000, -0.10900000, 68.05600000};
    l_U487[6]._fU64 = 12000;
    l_U487[6]._fU68 = 2500;
    l_U487[6]._fU72 = 2;
    l_U487[6]._fU76 = 47;
    l_U487[7]._fU0 = {536.11400000, -23.80600000, 7.81000000};
    l_U487[7]._fU12 = 93.17700000;
    l_U487[7]._fU16 = {533.80000000, -24.92900000, 10.23700000};
    l_U487[7]._fU28 = {-39.84700000, 1.45900000, -42.62100000};
    l_U487[7]._fU40 = {533.59400000, -24.94100000, 9.91400000};
    l_U487[7]._fU52 = {-55.06400000, 0.00000000, -51.24600000};
    l_U487[7]._fU64 = 7300;
    l_U487[7]._fU68 = 6200;
    l_U487[7]._fU72 = 2;
    l_U487[7]._fU76 = 48;
    l_U487[8]._fU0 = {536.11400000, -23.80600000, 7.81000000};
    l_U487[8]._fU12 = 93.17700000;
    l_U487[8]._fU16 = {536.61400000, -25.04100000, 9.62000000};
    l_U487[8]._fU28 = {-26.57900000, 0.00000000, 42.58700000};
    l_U487[8]._fU40 = {534.03600000, -24.96000000, 8.15900000};
    l_U487[8]._fU52 = {-7.84800000, 0.00000000, -24.45600000};
    l_U487[8]._fU64 = 9000;
    l_U487[8]._fU68 = 6200;
    l_U487[8]._fU72 = 2;
    l_U487[8]._fU76 = 49;
    l_U487[9]._fU0 = {535.52100000, -18.29000000, 9.66700000};
    l_U487[9]._fU12 = 102.54500000;
    l_U487[9]._fU16 = {536.61100000, -19.32600000, 11.28600000};
    l_U487[9]._fU28 = {-30.42000000, 0.00000000, 67.41500000};
    l_U487[9]._fU40 = {534.64600000, -18.73600000, 11.16800000};
    l_U487[9]._fU52 = {-51.77700000, 0.00000000, 65.00300000};
    l_U487[9]._fU64 = 7500;
    l_U487[9]._fU68 = 2500;
    l_U487[9]._fU72 = 3;
    l_U487[9]._fU76 = 47;
    l_U487[10]._fU0 = {535.52100000, -18.29000000, 9.66700000};
    l_U487[10]._fU12 = 102.54500000;
    l_U487[10]._fU16 = {535.81000000, -17.31000000, 11.32300000};
    l_U487[10]._fU28 = {-26.55700000, 0.81000000, 126.88500000};
    l_U487[10]._fU40 = {535.72300000, -17.66500000, 9.92300000};
    l_U487[10]._fU52 = {10.52400000, 0.00000000, 123.38300000};
    l_U487[10]._fU64 = 11000;
    l_U487[10]._fU68 = 6200;
    l_U487[10]._fU72 = 3;
    l_U487[10]._fU76 = 48;
    l_U487[11]._fU0 = {535.52100000, -18.29000000, 9.66700000};
    l_U487[11]._fU12 = 102.54500000;
    l_U487[11]._fU16 = {536.10800000, -19.98000000, 10.65500000};
    l_U487[11]._fU28 = {-9.80900000, 0.00000000, 45.77700000};
    l_U487[11]._fU40 = {535.05800000, -19.64200000, 11.01600000};
    l_U487[11]._fU52 = {-36.17400000, 0.00000000, 31.73700000};
    l_U487[11]._fU64 = 8500;
    l_U487[11]._fU68 = 6200;
    l_U487[11]._fU72 = 3;
    l_U487[11]._fU76 = 49;
    l_U487[12]._fU0 = {535.83100000, -23.79700000, 11.22100000};
    l_U487[12]._fU12 = 103.72600000;
    l_U487[12]._fU16 = {535.99200000, -22.30700000, 12.48000000};
    l_U487[12]._fU28 = {-25.84200000, 0.00000000, 138.34400000};
    l_U487[12]._fU40 = {534.87200000, -23.31700000, 13.30000000};
    l_U487[12]._fU52 = {-62.52800000, 0.00000000, 135.20900000};
    l_U487[12]._fU64 = 7500;
    l_U487[12]._fU68 = 2500;
    l_U487[12]._fU72 = 4;
    l_U487[12]._fU76 = 47;
    l_U487[13]._fU0 = {535.83100000, -23.79700000, 11.22100000};
    l_U487[13]._fU12 = 103.72600000;
    l_U487[13]._fU16 = {536.25500000, -25.41700000, 12.09800000};
    l_U487[13]._fU28 = {-5.17200000, 0.00000000, 47.35900000};
    l_U487[13]._fU40 = {533.09300000, -25.53700000, 13.24300000};
    l_U487[13]._fU52 = {-44.29200000, 0.28200000, -47.09500000};
    l_U487[13]._fU64 = 7000;
    l_U487[13]._fU68 = 6200;
    l_U487[13]._fU72 = 4;
    l_U487[13]._fU76 = 48;
    l_U487[14]._fU0 = {535.83100000, -23.79700000, 11.22100000};
    l_U487[14]._fU12 = 103.72600000;
    l_U487[14]._fU16 = {535.05500000, -23.04000000, 11.54000000};
    l_U487[14]._fU28 = {48.81300000, 0.00000000, -155.00400000};
    l_U487[14]._fU40 = {534.16000000, -22.92400000, 11.54200000};
    l_U487[14]._fU52 = {-7.23600000, 0.00000000, -173.57000000};
    l_U487[14]._fU64 = 9200;
    l_U487[14]._fU68 = 6200;
    l_U487[14]._fU72 = 4;
    l_U487[14]._fU76 = 49;
    l_U487[15]._fU0 = {532.47600000, -21.97300000, 5.01700000};
    l_U487[15]._fU12 = 0.00000000;
    l_U487[15]._fU16 = {533.54900000, -19.40500000, 7.12200000};
    l_U487[15]._fU28 = {-11.56000000, 1.19100000, 147.76000000};
    l_U487[15]._fU40 = {532.78400000, -20.45100000, 7.49700000};
    l_U487[15]._fU52 = {-54.70200000, 0.00000000, 139.78100000};
    l_U487[15]._fU64 = 15000;
    l_U487[15]._fU68 = 10000;
    l_U487[15]._fU72 = 5;
    l_U487[15]._fU76 = 50;
    l_U487[16]._fU0 = {532.87600000, -23.67300000, 3.91700000};
    l_U487[16]._fU12 = 180.00000000;
    l_U487[16]._fU16 = {532.22900000, -24.09200000, 4.79000000};
    l_U487[16]._fU28 = {27.86000000, -3.65000000, -25.45300000};
    l_U487[16]._fU40 = {533.32100000, -24.04700000, 7.81600000};
    l_U487[16]._fU52 = {-53.96900000, -13.33600000, 25.07200000};
    l_U487[16]._fU64 = 12000;
    l_U487[16]._fU68 = 6800;
    l_U487[16]._fU72 = 5;
    l_U487[16]._fU76 = 51;
    l_U487[17]._fU0 = {532.75300000, -21.31100000, 5.15000000};
    l_U487[17]._fU12 = 180.00000000;
    l_U487[17]._fU16 = {531.67900000, -20.65100000, 6.84500000};
    l_U487[17]._fU28 = {-22.04200000, 0.00000000, -142.87600000};
    l_U487[17]._fU40 = {531.97000000, -20.87900000, 8.08000000};
    l_U487[17]._fU52 = {-70.00000000, 0.00000000, -125.77800000};
    l_U487[17]._fU64 = 9000;
    l_U487[17]._fU68 = 7800;
    l_U487[17]._fU72 = 5;
    l_U487[17]._fU76 = 52;
    l_U487[18]._fU0 = {535.23800000, -20.03600000, 6.39700000};
    l_U487[18]._fU12 = 196.92800000;
    l_U487[18]._fU16 = {533.90700000, -19.79300000, 7.56300000};
    l_U487[18]._fU28 = {11.98500000, 0.00000000, -138.79300000};
    l_U487[18]._fU40 = {535.12300000, -18.15200000, 7.56100000};
    l_U487[18]._fU52 = {-10.49100000, 0.00000000, -165.95300000};
    l_U487[18]._fU64 = 10000;
    l_U487[18]._fU68 = 10000;
    l_U487[18]._fU72 = 6;
    l_U487[18]._fU76 = 50;
    l_U487[19]._fU0 = {535.38600000, -20.11100000, 6.40200000};
    l_U487[19]._fU12 = 0.00000000;
    l_U487[19]._fU16 = {536.26200000, -18.10700000, 6.92800000};
    l_U487[19]._fU28 = {18.62600000, 0.05800000, 158.20200000};
    l_U487[19]._fU40 = {536.02800000, -19.36500000, 7.77700000};
    l_U487[19]._fU52 = {0.48900000, 0.00000000, 157.39200000};
    l_U487[19]._fU64 = 10000;
    l_U487[19]._fU68 = 6800;
    l_U487[19]._fU72 = 6;
    l_U487[19]._fU76 = 51;
    l_U487[20]._fU0 = {535.74300000, -21.93000000, 7.33400000};
    l_U487[20]._fU12 = 0.00000000;
    l_U487[20]._fU16 = {534.79700000, -22.72200000, 9.15700000};
    l_U487[20]._fU28 = {-29.40700000, -1.85400000, -32.85200000};
    l_U487[20]._fU40 = {534.85800000, -21.65400000, 9.33400000};
    l_U487[20]._fU52 = {-62.47000000, -12.42400000, -97.63900000};
    l_U487[20]._fU64 = 9000;
    l_U487[20]._fU68 = 7800;
    l_U487[20]._fU72 = 6;
    l_U487[20]._fU76 = 52;
    l_U487[21]._fU0 = {532.52600000, -22.65600000, 8.20100000};
    l_U487[21]._fU12 = 0.00000000;
    l_U487[21]._fU16 = {531.87500000, -23.57500000, 9.59100000};
    l_U487[21]._fU28 = {8.06700000, -5.84000000, -15.92400000};
    l_U487[21]._fU40 = {532.95800000, -23.80100000, 10.15700000};
    l_U487[21]._fU52 = {-37.86600000, -4.79600000, 23.45300000};
    l_U487[21]._fU64 = 11500;
    l_U487[21]._fU68 = 10000;
    l_U487[21]._fU72 = 7;
    l_U487[21]._fU76 = 50;
    l_U487[22]._fU0 = {532.63900000, -22.70500000, 8.15000000};
    l_U487[22]._fU12 = 180.00000000;
    l_U487[22]._fU16 = {533.45800000, -23.11400000, 9.77800000};
    l_U487[22]._fU28 = {9.54400000, 0.20300000, 19.03100000};
    l_U487[22]._fU40 = {533.77600000, -23.77500000, 10.25200000};
    l_U487[22]._fU52 = {-10.34700000, 0.33900000, 19.94800000};
    l_U487[22]._fU64 = 10000;
    l_U487[22]._fU68 = 6800;
    l_U487[22]._fU72 = 7;
    l_U487[22]._fU76 = 51;
    l_U487[23]._fU0 = {532.37800000, -20.34000000, 9.47200000};
    l_U487[23]._fU12 = 180.00000000;
    l_U487[23]._fU16 = {531.93400000, -20.07000000, 11.85300000};
    l_U487[23]._fU28 = {-53.73000000, 1.95100000, -164.94700000};
    l_U487[23]._fU40 = {531.94800000, -20.84000000, 11.71900000};
    l_U487[23]._fU52 = {-70.00000000, 5.64900000, -52.66500000};
    l_U487[23]._fU64 = 8000;
    l_U487[23]._fU68 = 7800;
    l_U487[23]._fU72 = 7;
    l_U487[23]._fU76 = 52;
    l_U487[24]._fU0 = {535.18500000, -20.55200000, 10.03000000};
    l_U487[24]._fU12 = 180.00000000;
    l_U487[24]._fU16 = {535.57200000, -18.64300000, 11.37200000};
    l_U487[24]._fU28 = {1.78700000, -0.11600000, 173.64500000};
    l_U487[24]._fU40 = {534.63700000, -19.27000000, 10.94200000};
    l_U487[24]._fU52 = {-12.96200000, 0.00000000, -156.27300000};
    l_U487[24]._fU64 = 11500;
    l_U487[24]._fU68 = 10000;
    l_U487[24]._fU72 = 8;
    l_U487[24]._fU76 = 50;
    l_U487[25]._fU0 = {535.10100000, -20.31300000, 9.86400000};
    l_U487[25]._fU12 = 0.00000000;
    l_U487[25]._fU16 = {536.49900000, -20.48300000, 11.79500000};
    l_U487[25]._fU28 = {8.20600000, -0.34600000, 145.11700000};
    l_U487[25]._fU40 = {536.06100000, -18.38600000, 11.09200000};
    l_U487[25]._fU52 = {2.82500000, 1.70000000, 161.42200000};
    l_U487[25]._fU64 = 12000;
    l_U487[25]._fU68 = 6800;
    l_U487[25]._fU72 = 8;
    l_U487[25]._fU76 = 51;
    l_U487[26]._fU0 = {535.13800000, -22.34300000, 10.82000000};
    l_U487[26]._fU12 = 0.00000000;
    l_U487[26]._fU16 = {534.28700000, -22.87900000, 12.32300000};
    l_U487[26]._fU28 = {-23.38500000, -3.54100000, -29.49600000};
    l_U487[26]._fU40 = {534.17400000, -22.04700000, 13.10300000};
    l_U487[26]._fU52 = {-63.13600000, -3.54100000, -100.96200000};
    l_U487[26]._fU64 = 9000;
    l_U487[26]._fU68 = 7800;
    l_U487[26]._fU72 = 8;
    l_U487[26]._fU76 = 52;
    l_U468[0] = "SPOL_OPNWNDW";
    l_U468[1] = "SPOL_MX20SEC";
    l_U468[2] = "SPOL_MX30SEC";
    l_U472[0] = 2000;
    l_U472[1] = l_U355 - 30000;
    l_U472[2] = l_U355 - 40000;
    sub_578( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_10380(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_10560(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_17765()
{
    sub_578( "GA", "P_REQUEST_STR_PERSISTENT_ASSETS start", 0 );
    sub_17834( ref l_U191, ref g_U2468 );
    sub_19242( ref l_U196, ref g_U2613 );
    sub_20242( ref g_U3553, ref g_U2741 );
    sub_20242( "LEVEL_S_POLICE_CP_10", ref g_U2741 );
    sub_578( "GA", "P_REQUEST_STR_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_17834(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_17869( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_17869(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_17904( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_18035( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_17904(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_18035( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_18035( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_18035( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18683( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_18035( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_18035( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18035(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18055( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_18055(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_18683(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_19242(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_19277( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_19277(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19298( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_19430( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19298(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_19430( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_19430( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_19430( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_18683( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_19430( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_19430( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19430(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18055( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20242(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_20263( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_20400( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_20263(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_20400( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_20400( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_20400( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_18683( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_20400( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_20400( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20400(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18055( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_21306()
{
    sub_578( "GA", "P_REQUEST_STR_NONPERSISTENT_ASSETS start", 0 );
    sub_21379( 1750428255, ref g_U2662 );
    sub_23330( "S_POLICE_SMOKE_GRENADE", ref g_U2849 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_5", 0 );
    sub_578( "GA", "P_REQUEST_STR_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_21379(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_21414( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_21566( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_21414(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_21566( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_21566( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_21566( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_21566( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18683( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_18683( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_21566( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_21566( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21566(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18055( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_23330(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_23351( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_23492( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_23351(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being requested!!!", 0 );
                sub_23492( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is already loading!!!", 0 );
                sub_23492( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (Result <= 2)
                {
                    if ((GET_SCRIPT_STREAM_STATE( uParam0, Result )) == 2)
                    {
                        sub_23492( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else
                    {
                        SCRIPT_ASSERT( "The SCRIPT_STREAM asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                        (uParam1^)[Result]._fU32 = 0;
                        sub_18683( ref (uParam1^)[Result]._fU36 );
                        return Result;
                    }
                }
                else
                {
                    sub_23492( Result, uParam1, uParam2 );
                    return -1;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The SCRIPT_STREAM asset is currently being removed!!!", 0 );
                sub_23492( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (Result <= 2)
        {
            if ((GET_SCRIPT_STREAM_STATE( uParam0, iVar6 )) == 2)
            {
                StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
                (uParam1^)[iVar6]._fU32 = 3;
                sub_23492( iVar6, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar6;
            }
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The SCRIPT_STREAM - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_23492(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_18055( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The SCRIPT_STREAM asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_24546(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24666(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24787(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24914(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_25105(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_25462(unknown uParam0)
{
    sub_578( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_5615( uParam0, sub_944() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_25993(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_578( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_578( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_8467( iParam1 );
        sub_26252( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_26703( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_26703( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_26703( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_26703( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_26703( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_26935( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_28493( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_578( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_26252(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_5831( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_578( "TEH", "Ending context", 0 );
        sub_578( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_26703(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_26935(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_28493(int iParam0)
{
    sub_7484( "CHECKPOINT DATA" );
    sub_28532( iParam0->_fU4 );
    sub_28555( iParam0->_fU16 );
    sub_28555( iParam0->_fU20 );
    sub_28555( iParam0->_fU24 );
    sub_28598( iParam0->_fU28 );
    sub_28598( iParam0->_fU56 );
    sub_28598( iParam0->_fU60 );
    sub_28598( iParam0->_fU64 );
    sub_28598( iParam0->_fU68 );
    sub_28598( iParam0->_fU72 );
    sub_28598( iParam0->_fU76 );
    sub_28598( iParam0->_fU80 );
    sub_28598( iParam0->_fU84 );
    sub_28598( iParam0->_fU88 );
    sub_28598( iParam0->_fU92 );
    sub_28555( iParam0->_fU32 );
    sub_28598( iParam0->_fU36 );
    sub_28598( iParam0->_fU40 );
    sub_28598( iParam0->_fU44 );
    sub_28555( iParam0->_fU136 );
    sub_28803( iParam0->_fU140 );
    sub_28598( iParam0->_fU52 );
    sub_7484( "---nRightHolsterAttachmentEnabled: " );
    sub_28598( iParam0->_fU96 );
    sub_7484( "---nRightHolsterAttachmentToggled: " );
    sub_28598( iParam0->_fU100 );
    sub_7484( "---nLeftHolsterAttachmentEnabled: " );
    sub_28598( iParam0->_fU104 );
    sub_7484( "---nLeftHolsterAttachmentToggled: " );
    sub_28598( iParam0->_fU108 );
    sub_7484( "---nRifleHolsterAttachmentEnabled: " );
    sub_28598( iParam0->_fU112 );
    sub_7484( "---nRifleHolsterAttachmentToggled: " );
    sub_28598( iParam0->_fU116 );
    sub_7484( "---nRightHandAttachmentEnabled: " );
    sub_28598( iParam0->_fU120 );
    sub_7484( "---nRightHandAttachmentToggled: " );
    sub_28598( iParam0->_fU124 );
    sub_7484( "---nLeftHandAttachmentEnabled: " );
    sub_28598( iParam0->_fU128 );
    sub_7484( "---nLeftHandAttachmentToggled: " );
    sub_28598( iParam0->_fU132 );
    sub_28598( l_U1 );
    sub_28598( 144 );
    return;
}

void sub_28532(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_28555(unknown uParam0)
{
    return;
}

void sub_28598(unknown uParam0)
{
    return;
}

void sub_28803(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_29673()
{
    sub_578( "GA", "P_STR_CREATE_DEAD_RIOTER start", 0 );
    l_U308 = sub_29731( ref l_U295 );
    if (NOT (IS_PED_DEAD( l_U308 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U308, ref g_U3421 );
        SET_PED_NAME_DEBUG( l_U308, "pi_STR_DeadRioter" );
    }
    sub_30619( l_U308, 3 );
    sub_578( "GA", "P_STR_CREATE_DEAD_RIOTER end", 0 );
    return;
}

void sub_29731(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_29901( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_30370( iParam0->_fU40 );
    sub_30450( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_29901(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_7484( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_30370(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_30450(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_30619(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_7484( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_31982()
{
    sub_578( "GA", "P_STR_CREATE_ANIMATED_GRENADE start", 0 );
    l_U310 = sub_32071( 623430912, 533.00000000, -24.00000000, 9.00000000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U310 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U310, ref g_U3421 );
        FREEZE_OBJECT_POSITION( l_U310, 1 );
        SET_OBJECT_VISIBLE( l_U310, 0 );
    }
    l_U311 = sub_32071( 2014638728, 536.50000000, -19.00000000, 6.10000000, 0, 0, 0, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U311 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U311, ref g_U3421 );
        FREEZE_OBJECT_POSITION( l_U311, 1 );
        SET_OBJECT_VISIBLE( l_U311, 0 );
    }
    sub_578( "GA", "P_STR_CREATE_ANIMATED_GRENADE end", 0 );
    return;
}

void sub_32071(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_29901( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_32512()
{
    switch (l_U227)
    {
        case 1:
        sub_578( "GA", "e_STR_TeargasNISState = eNIS_STATE_SETUP", 0 );
        sub_32616( 1, 0, 0, 1 );
        CAMERA_PLAY_ANIMATED( "LEVEL_S_POLICE_CP_10", "TEAR_GRENADE_PP_CAM", 0, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0, 0 );
        sub_5286( sub_944(), g_U2953[10], g_U3083[10] );
        DO_SCREEN_FADE_IN( 0 );
        l_U227 = 2;
        sub_578( "GA", "e_STR_TeargasNISState = eNIS_STATE_SETUP", 0 );
        break;
        case 2:
        if (NOT l_U290)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() > 1000)
            {
                sub_32977();
                l_U290 = 1;
            }
        }
        if (NOT l_U291)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() > 3200)
            {
                PLAY_IMAGEFX( "FLICKER_VIBRATE_01", 4, 1 );
                START_PARTICLE_FX_NON_LOOPED_AT_COORD( "WE_TG_Explo_Stairwell_S", 534.50000000, -18.92000000, 6.54000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
                l_U291 = 1;
            }
        }
        if (NOT l_U292)
        {
            if (CAMERA_ANIMATED_CURRENT_TIME() > 1500)
            {
                PLAY_IMAGEFX( "GAMMA_ZOOM_1", 4, 1 );
                l_U292 = 1;
            }
        }
        if (NOT IS_ANIMATED_CAMERA_PLAYING())
        {
            l_U227 = 4;
            sub_578( "GA", "e_STR_TeargasNISState = eNIS_STATE_RETURNING_TO_PLAYER", 0 );
        }
        break;
        case 4:
        SET_TIMECYCLE_MODIFIER( "pof3_gas" );
        sub_33745( 1, 1 );
        l_U227 = 5;
        sub_578( "GA", "e_STR_TeargasNISState = eNIS_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_32616(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_944() )))
        {
            SET_PLAYER_CONTROL( sub_966(), 0, uParam2 );
            SET_PED_DUCKING( sub_944(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_944() );
            }
            SET_PED_INVINCIBLE( sub_944(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_32977()
{
    sub_578( "GA", "P_STR_SEND_OUT_SMOKE_CANISTERS start", 0 );
    if (DOES_OBJECT_EXIST( l_U310 ))
    {
        SET_OBJECT_VISIBLE( l_U310, 1 );
        PLAY_OBJECT_ANIM( l_U310, "P_AN_GASCAN_AA", "po_objModels", 1000.00000000, 0, 1 );
    }
    l_U312 = 1;
    sub_33154( "S_POLICE_SMOKE_GRENADE", ref g_U2849 );
    sub_578( "GA", "P_STR_SEND_OUT_SMOKE_CANISTERS end", 0 );
    return;
}

void sub_33154(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = -1;
    if (sub_4236( uParam0, uParam1 ))
    {
        iVar4 = sub_4335( uParam0, uParam1 );
        if (NOT (iVar4 == -1))
        {
            PLAY_SCRIPT_STREAM_FRONTEND( iVar4 );
        }
        else
        {
            SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset slot that is NOT valid!!!", 0 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Attempting to play a SCRIPT_STREAM asset that is NOT loaded!!!", 0 );
    }
    return;
}

void sub_33745(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_944() )))
    {
        SET_PLAYER_CONTROL( sub_966(), 1, 0 );
        SET_PED_INVINCIBLE( sub_944(), 0 );
        if (bParam0)
        {
            sub_33826();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_33826()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_944() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_944(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_944(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_944(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_944(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_34085()
{
    if (l_U312)
    {
        if ((DOES_OBJECT_EXIST( l_U311 )) AND (DOES_OBJECT_EXIST( l_U310 )))
        {
            if (NOT (IS_OBJECT_PLAYING_ANIM( l_U310, "P_AN_GASCAN_AA", "po_objModels" )))
            {
                sub_578( "GA", "Animated grenade is complete, swapping to post-anim grenade.", 0 );
                FREEZE_OBJECT_POSITION( l_U311, 0 );
                SET_OBJECT_VISIBLE( l_U311, 1 );
                sub_4806( l_U310 );
                l_U312 = 0;
            }
        }
    }
    return;
}

void sub_34321()
{
    sub_578( "GA", "P_STR_START_STAIRWELL_GAMEPLAY start", 0 );
    SET_CAM_VIEW_MODE( 0 );
    AUD_SET_IS_POWER_ON( 1 );
    sub_34397();
    sub_34582();
    sub_34848( ref g_U3981, 1 );
    sub_35051( ref g_U3981, 1 );
    sub_2037( ref l_U386 );
    sub_2037( ref l_U356 );
    SET_WEATHER_TYPE_PERSIST( "CLOUDY" );
    SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
    SET_WEATHER_TRANSITION_SPEED( l_U365 );
    sub_578( "GA", "P_STR_START_STAIRWELL_GAMEPLAY end", 0 );
    return;
}

void sub_34397()
{
    sub_578( "GA", "P_STR_CREATE_VENT start", 0 );
    l_U313 = sub_32071( 2146529263, 532.88000000, -17.15000000, 12.36000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U313 ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U313, ref g_U3421 );
        CAMERA_CAN_TARGET_OBJECT( 1, l_U313 );
    }
    sub_578( "GA", "P_STR_CREATE_VENT end", 0 );
    return;
}

void sub_34582()
{
    sub_578( "GA", "P_STR_CREATE_GUN_PLACEMENT start", 0 );
    l_U309 = sub_34682( -1377271918, 534.26450000, -18.08235000, 6.05019700, 20.48000000, 0.00000000, 0.70000000, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U309, ref g_U3421 );
    sub_578( "GA", "P_STR_CREATE_GUN_PLACEMENT end", 0 );
    return;
}

void sub_34682(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_34848(int iParam0, int iParam1)
{
    if ((sub_34860( iParam0 )) == 0)
    {
        sub_34926( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

int sub_34860(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_34926(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_35051(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_34860( iParam0 )) == 0)
    {
        sub_34926( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

void sub_35538()
{
    if (l_U345)
    {
        if (sub_2157( ref l_U346 ))
        {
            SET_SECONDARY_LIFE_BAR_PERCENT( GET_SECONDARY_LIFE_BAR_PERCENT() - 0.02220000 );
            sub_2694( ref l_U346 );
            sub_2037( ref l_U346 );
        }
    }
    return;
}

void sub_35618()
{
    if ((NOT (sub_35634( l_U395 ))) AND (NOT (sub_35634( l_U376 ))))
    {
        if (sub_2157( ref l_U386 ))
        {
            sub_578( "AT", "Playing trapped in stairwell monologue.", 0 );
            sub_35836( l_U468[l_U476], ref l_U376 );
            l_U476++;
            if (l_U476 < l_U468)
            {
                sub_578( "AT", "Starting new timer.", 0 );
                sub_1901( ref l_U386, l_U472[l_U476], 1, 0 );
                sub_2037( ref l_U386 );
            }
            sub_1901( ref l_U477, l_U486, 1, 0 );
            sub_2037( ref l_U477 );
        }
        if ((l_U477._fU16) || (sub_2157( ref l_U477 )))
        {
            if (sub_37086( ref l_U405, 0 ))
            {
                sub_578( "AT", "Playing door monologue.", 0 );
                sub_35836( "SPOL_MXAPSTR", ref l_U395 );
                sub_1901( ref l_U477, l_U486, 1, 0 );
                sub_2037( ref l_U477 );
            }
            if (sub_37086( ref l_U426, 0 ))
            {
                sub_578( "AT", "Playing door monologue.", 0 );
                sub_35836( "SPOL_MXAPSTR", ref l_U395 );
                sub_1901( ref l_U477, l_U486, 1, 0 );
                sub_2037( ref l_U477 );
            }
            if (sub_37086( ref l_U447, 0 ))
            {
                sub_578( "AT", "Playing door monologue.", 0 );
                sub_35836( "SPOL_MXAPSTR", ref l_U395 );
                sub_1901( ref l_U477, l_U486, 1, 0 );
                sub_2037( ref l_U477 );
            }
        }
    }
    return;
}

int sub_35634(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_1475( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

void sub_35836(unknown uParam0, unknown uParam1)
{
    sub_35848( uParam1 );
    sub_35928( 0, sub_944(), "MAX", uParam1, 2, 0 );
    sub_35928( 1, sub_944(), "MAX", uParam1, 2, 0 );
    sub_36153( uParam0, uParam1, 8, 1 );
    return;
}

void sub_35848(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_35928(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_36153(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_36177( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_36177(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_36232( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_36232(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_36267( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_36761( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_36267(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_36761(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

void sub_37086(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_37128( sub_944(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_37128(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_37684(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_38202()
{
    if (sub_38218( l_U1133 ))
    {
        sub_38255( 5 );
    }
    else if (sub_38218( l_U1154 ))
    {
        sub_38255( 6 );
    }
    else if (sub_38218( l_U1175 ))
    {
        sub_38255( 7 );
    }
    else if (sub_38218( l_U1196 ))
    {
        sub_38255( 8 );
    }
    else if (sub_38218( l_U1028 ))
    {
        sub_38255( 0 );
    }
    else if (sub_38218( l_U1049 ))
    {
        sub_38255( 1 );
    }
    else if (sub_38218( l_U1070 ))
    {
        sub_38255( 2 );
    }
    else if (sub_38218( l_U1091 ))
    {
        sub_38255( 3 );
    }
    else if (sub_38218( l_U1112 ))
    {
        sub_38255( 4 );
    };;;;;;;;;
    return;
}

void sub_38218(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_37128( sub_944(), uParam0 );
}

int sub_38255(int iParam0)
{
    unknown[3] uVar3;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;
    unknown uVar36;
    unknown uVar37;
    unknown uVar38;
    unknown uVar39;
    unknown uVar40;
    unknown uVar41;
    unknown uVar42;
    unknown uVar43;
    unknown uVar44;
    unknown uVar45;
    unknown uVar46;
    unknown uVar47;
    unknown uVar48;
    unknown uVar49;
    unknown uVar50;
    unknown uVar51;
    unknown uVar52;
    unknown uVar53;
    unknown uVar54;
    unknown uVar55;
    unknown uVar56;
    unknown uVar57;
    unknown uVar58;
    unknown uVar59;
    unknown uVar60;
    unknown uVar61;
    unknown uVar62;
    unknown uVar63;
    int iVar64;
    int I;
    unknown uVar66;
    int J;
    int iVar68;

    if (NOT (IS_PED_DEAD( sub_944() )))
    {
        CLEAR_PED_TASKS_IMMEDIATELY( sub_944() );
        RESET_PLAYER_INPUT_GAIT( 0 );
        sub_3255();
    }
    array(ref uVar3, 3);
    iVar64 = 0;
    if ((iParam0 == 4) || ((iParam0 == 3) || ((iParam0 == 2) || ((iParam0 == 1) || (iParam0 == 0)))))
    {
        for ( I = 0; I < l_U487; I++ )
        {
            if (l_U487[I]._fU72 == iParam0)
            {
                if (iVar64 < 3)
                {
                    uVar3[iVar64] = {l_U487[I]};
                    iVar64++;
                }
                else
                {
                    sub_578( "AT", "Array full.", 0 );
                }
            }
        }
        uVar66 = GET_RANDOM_INT_IN_RANGE( 0, 3 );
        PED_SET_ACTION_INTENTION( sub_944(), uVar3[uVar66]._fU76, 1000, 0.00000000, 0.00000000, 0.00000000 );
        sub_38585( ref l_U1217, uVar3[uVar66]._fU16, uVar3[uVar66]._fU28, 1110704128, 1000 );
        sub_38585( ref l_U1248, uVar3[uVar66]._fU40, uVar3[uVar66]._fU52, 45, uVar3[uVar66]._fU64 );
        sub_5286( sub_944(), uVar3[uVar66]._fU0, uVar3[uVar66]._fU12 );
        ISEQ_REGISTER_ENTITY( 1750428255, "Max", sub_944(), 0 );
        ISEQ_START( 1750428255 );
        sub_1901( ref l_U1279, uVar3[uVar66]._fU68, 1, 0 );
        sub_2037( ref l_U1279 );
        sub_1901( ref l_U1288, uVar3[uVar66]._fU64 - 2300, 1, 0 );
        sub_2037( ref l_U1288 );
        return 1;
    }
    else
    {
        for ( J = 0; J < l_U487; J++ )
        {
            if (l_U487[J]._fU72 == iParam0)
            {
                if (iVar64 < 3)
                {
                    uVar3[iVar64] = {l_U487[J]};
                    iVar64++;
                }
                else
                {
                    sub_578( "AT", "Array full.", 0 );
                }
            }
        }
        if (NOT (IS_PED_DEAD( sub_944() )))
        {
            if ((sub_38218( l_U1175 )) || (sub_38218( l_U1133 )))
            {
                if (((GET_PED_HEADING( sub_944() )) < 260.00000000) AND ((GET_PED_HEADING( sub_944() )) > 100.00000000))
                {
                    sub_578( "AT", "Player is headed downstairs.", 0 );
                    iVar68 = 2;
                }
                else
                {
                    iVar68 = GET_RANDOM_INT_IN_RANGE( 0, 2 );
                }
            }
            else if ((sub_38218( l_U1196 )) || (sub_38218( l_U1154 )))
            {
                if (((GET_PED_HEADING( sub_944() )) > 280.00000000) || ((GET_PED_HEADING( sub_944() )) < 80.00000000))
                {
                    sub_578( "AT", "Player is headed downstairs.", 0 );
                    iVar68 = 2;
                }
                else
                {
                    iVar68 = GET_RANDOM_INT_IN_RANGE( 0, 2 );
                }
            }
        }
        PED_SET_ACTION_INTENTION( sub_944(), uVar3[iVar68]._fU76, 1000, 0.00000000, 0.00000000, 0.00000000 );
        sub_38585( ref l_U1217, uVar3[iVar68]._fU16, uVar3[iVar68]._fU28, 1110704128, 1000 );
        sub_38585( ref l_U1248, uVar3[iVar68]._fU40, uVar3[iVar68]._fU52, 45, uVar3[iVar68]._fU64 );
        sub_5286( sub_944(), uVar3[iVar68]._fU0, uVar3[iVar68]._fU12 );
        ISEQ_REGISTER_ENTITY( 1750428255, "Max", sub_944(), 0 );
        ISEQ_START( 1750428255 );
        sub_1901( ref l_U1279, uVar3[iVar68]._fU68, 1, 0 );
        sub_2037( ref l_U1279 );
        sub_1901( ref l_U1288, uVar3[iVar68]._fU64 - 5500, 1, 0 );
        sub_2037( ref l_U1288 );
        return 1;
    }
    return 0;
}

void sub_38585(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1901( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U39, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

int sub_39967()
{
    unknown uVar2;

    if (sub_2157( ref l_U1279 ))
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_944(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            TASK_DROP_WEAPON( sub_944(), uVar2 );
            sub_1901( ref l_U1279, 50, 1, 0 );
            sub_2037( ref l_U1279 );
        }
        else
        {
            uVar2 = GET_WEAPON_FROM_HAND( sub_944(), 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar2 ))
            {
                TASK_DROP_WEAPON( sub_944(), uVar2 );
                sub_1901( ref l_U1279, 50, 1, 0 );
                sub_2037( ref l_U1279 );
            }
        }
    }
    if ((NOT l_U1248._fU32) AND (ISEQ_QUERY_STATE( 1750428255, 3 )))
    {
        sub_40178( ref l_U1217, ref l_U1248, l_U1248._fU84, 1, 1 );
        SHAKE_CAM( l_U1248._fU0, sub_40279(), 0.25000000 );
    }
    if (sub_2157( ref l_U1288 ))
    {
        l_U1424 = CREATE_CAM( "DEFAULT_BULLET_CAMERA", 1 );
        SETUP_BULLET_CAMERA_SCENE( l_U1424, "MISS_DEATH_FALL_01A", 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, "", "" );
        SET_CAM_ACTIVE( l_U1424, 1 );
        return 1;
    }
    return 0;
}

void sub_40178(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE_WITH_INTERP( iParam1->_fU0, iParam0->_fU0, uParam2, uParam3, uParam4 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_2037( iParam1 + 48 );
    iParam1->_fU32 = 1;
    iParam1->_fU40 = 1;
    return;
}

string sub_40279()
{
    return "WOBBLY_SHAKE";
}

void sub_40736()
{
    if (l_U1422)
    {
        sub_40756();
        l_U1422 = 0;
    }
    if (sub_41126( ref l_U1380, sub_944(), 0 ))
    {
        sub_41224();
    }
    if (sub_41126( ref l_U1401, sub_944(), 0 ))
    {
        PLAY_IMAGEFX( "DOUBLE_WIDE_INTERLACE_FLASH_03", 4, 0 );
    }
    if (l_U1423)
    {
        sub_41523();
        l_U1423 = 0;
    }
    sub_41712( ref l_U1298 );
    return;
}

void sub_40756()
{
    sub_40770( ref l_U1298 );
    l_U1298[0]._fU4 = "FLASH_WHITE_2";
    l_U1298[0]._fU20 = 2;
    l_U1298[0]._fU8 = 4;
    l_U1298[0]._fU32 = 0;
    l_U1298[1]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U1298[1]._fU8 = 4;
    l_U1298[1]._fU32 = 0;
    l_U1298[2]._fU4 = "TRIPLE_IMAGE_BLUR_DOWN";
    l_U1298[2]._fU8 = 4;
    l_U1298[2]._fU32 = 0;
    l_U152 = 0;
    return;
}

void sub_40770(unknown uParam0)
{
    int I;

    sub_578( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_41126(int iParam0, unknown uParam1, unknown uParam2)
{
    if (iParam0->_fU68 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU68 = sub_37128( uParam1, (iParam0^) );
        if ((iParam0->_fU68) AND (uParam2))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU68;
}

void sub_41224()
{
    sub_40770( ref l_U1298 );
    l_U1298[0]._fU4 = "DOUBLE_TINT_BLUE_FLASH_FLICKER";
    l_U1298[0]._fU20 = 1;
    l_U1298[0]._fU16 = 1500;
    l_U1298[0]._fU24 = 1;
    l_U1298[0]._fU8 = 4;
    l_U1298[0]._fU32 = 0;
    l_U1298[1]._fU4 = "TRIPLE_MOVE_RIGHT_COLOR_SPLIT5";
    l_U1298[1]._fU8 = 4;
    l_U1298[1]._fU16 = 1500;
    l_U1298[1]._fU24 = 1;
    l_U1298[1]._fU32 = 0;
    l_U152 = 0;
    return;
}

void sub_41523()
{
    sub_40770( ref l_U1298 );
    l_U1298[0]._fU4 = "TRIPLE_IMAGE_BLUR_DOWN_RIGHT";
    l_U1298[0]._fU20 = 1;
    l_U1298[0]._fU8 = 4;
    l_U1298[0]._fU28 = 1;
    l_U1298[0]._fU32 = 0;
    l_U1298[1]._fU4 = "FLASH_WHITE";
    l_U1298[1]._fU8 = 4;
    l_U1298[1]._fU28 = 1;
    l_U1298[1]._fU32 = 0;
    l_U152 = 0;
    return;
}

void sub_41712(unknown uParam0)
{
    int I;
    int J;

    switch (l_U152)
    {
        case 0:
        sub_578( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_1901( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_2037( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U152 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_2157( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_1901( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_2037( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_1901( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_2037( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_2157( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_42501()
{
    if (sub_42511())
    {
        l_U204 = NOT l_U204;
        if (l_U204)
        {
            sub_42615( "Script invincibility ON", 3000 );
        }
        else
        {
            sub_42615( "Script invincibility OFF", 3000 );
        }
    }
    return;
}

int sub_42511()
{
    if ((IS_MARKETING_KEYBOARD_KEY_JUST_PRESSED( 49 )) || (IS_KEYBOARD_KEY_JUST_PRESSED( 49 )))
    {
        return 1;
    }
    return 0;
}

void sub_42615(unknown uParam0, unknown uParam1)
{
    PRINT_STRING_WITH_LITERAL_STRING( "STRING", uParam0, uParam1, 1 );
    return;
}

void sub_42720()
{
    sub_578( "GA", "P_RELEASE_STR_ASSETS start", 0 );
    sub_42778( ref l_U191, ref g_U2468 );
    sub_43056( ref l_U196, ref g_U2613 );
    sub_43272( ref g_U3553, ref g_U2741 );
    sub_43272( "LEVEL_S_POLICE_CP_10", ref g_U2741 );
    sub_578( "GA", "P_RELEASE_STR_ASSETS end", 0 );
    return;
}

void sub_42778(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_42813( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_42813(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_3934( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_43056(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_43091( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_43091(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_3934( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_43272(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_3934( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


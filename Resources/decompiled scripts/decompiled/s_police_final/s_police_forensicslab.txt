void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U73 = {0, 0, 0};
    StrCopy( ref l_U76, "DUMMY", 32 );
    l_U84 = 1;
    l_U89 = 0;
    l_U90 = 0;
    l_U91 = 0;
    l_U94 = 0;
    l_U140 = 0;
    l_U141 = 0;
    l_U142 = 1500;
    l_U153 = 0;
    l_U164 = 12;
    l_U211 = 0;
    l_U212 = 1;
    l_U213 = 0;
    l_U449 = 0;
    l_U770 = -1;
    l_U771 = -1;
    l_U772 = -1;
    l_U773 = -1;
    l_U1066 = 700;
    sub_467( "AT", "Script s_police_forensicsLab.sc is starting up...", 0 );
    sub_516();
    l_U211 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_678();
        if (l_U213 == 0)
        {
            sub_11010();
        }
        WAIT( 0 );
    }
    sub_5363();
    sub_40605();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_police_forensicsLab" );
    sub_467( "AT", "Script s_police_forensicsLab.sc is terminating...", 0 );
    return;
}

void sub_467(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_516()
{
    sub_467( "AT", "P_SETUP_ASSET_ARRAYS", 0 );
    l_U795[0] = -1124233802;
    l_U795[1] = 540890112;
    l_U795[2] = -641956622;
    l_U795[3] = -2054968096;
    l_U795[4] = 1081787387;
    l_U795[5] = 1427923174;
    l_U795[6] = -1763692608;
    return;
}

void sub_678()
{
    if (g_U821 == 12)
    {
        switch (l_U213)
        {
            case 0:
            if ((sub_833()) || (IS_PED_DEAD( sub_760() )))
            {
                l_U213 = 1;
                sub_467( "AT", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            sub_1328( 1 );
            if (sub_3986())
            {
                l_U213 = 3;
            }
            else if ((sub_4026( 0 )) == 1)
            {
                l_U213 = 2;
            }
            break;
            case 2:
            if ((NOT (IS_BULLET_CAMERA_RUNNING( 0 ))) AND ((NOT (IS_PED_DEAD( sub_760() ))) AND (NOT IS_LAST_MAN_STANDING_ACTIVE())))
            {
                l_U213 = 3;
                sub_467( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_467( "AT", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_760() ))) AND (NOT (IS_PLAYER_DEAD( sub_782() ))))
            {
                SET_PLAYER_CONTROL( sub_782(), 0, 0 );
                if (NOT (GET_IS_PED_FORCED_TO_WALK( sub_760() )))
                {
                    SET_PED_FORCED_TO_WALK( sub_760(), 0 );
                }
            }
            if ((g_U862[13]._fU40 != 4) AND (g_U862[13]._fU40 != 0))
            {
                sub_467( "CR", "Shutting down script for MCE_MPM.", 0 );
                sub_5265( ref g_U862[13] );
                SET_EXITFLAG_FOR_SCRIPT( g_U862[13]._fU32 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            AUDIO_MUSIC_STOP_ONESHOT();
            sub_5363();
            sub_6413( 12 );
            l_U213 = 4;
            sub_467( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_467( "AT", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_6794( ref l_U175, sub_760() );
            l_U213 = 5;
            sub_467( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_467( "AT", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U211 = 1;
            l_U213 = 0;
            sub_467( "AT", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_760()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_782() );
    }
    return 0;
}

void sub_782()
{
    return GET_PLAYER_ID();
}

int sub_833()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_760() )))
        {
            SET_PED_FORCED_TO_WALK( sub_760(), 0 );
            SET_PLAYER_FORCED_AIM( sub_782(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_782(), 1 );
            if ((IS_PED_VISIBLE( sub_760() )) == 0)
            {
                SET_PED_VISIBLE( sub_760(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1328(boolean bParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_760() )))
    {
        if (NOT (IS_PED_IN_COMBAT( sub_760() )))
        {
            if ((NOT l_U155._fU16) AND (NOT l_U155._fU20))
            {
                sub_467( "AT", "Starting painkiller dialogue timer.", 0 );
                sub_1454( ref l_U155, 3500, 1, 0 );
                sub_1590( ref l_U155 );
            }
            if ((l_U155._fU16) AND (sub_1706()))
            {
                sub_467( "AT", "Dialogue detected. Restarting painkiller dialogue timer.", 0 );
                sub_1454( ref l_U155, 3500, 1, 0 );
                sub_1590( ref l_U155 );
            }
            iVar3 = GET_PAYNEKILLER_AMT();
            if (iVar3 > l_U164)
            {
                if (NOT sub_1706())
                {
                    if ((l_U155._fU16) || (sub_1909( ref l_U155 )))
                    {
                        if (g_U4303 < 6)
                        {
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 500 )) < 300)
                            {
                                sub_467( "GA", "Playing painkiller monologue.", 0 );
                                sub_2162( ref l_U165 );
                                sub_2244( 0, sub_760(), "MAX", ref l_U165, 2, 0 );
                                sub_2244( 1, sub_760(), "MAX", ref l_U165, 2, 0 );
                                sub_2486( "SPOL_PLFNDPL", ref l_U165, 8, 1 );
                                g_U4303++;
                            }
                            else
                            {
                                sub_467( "GA", "Not playing painkiller speech, failed random chance test.", 0 );
                            }
                        }
                        else
                        {
                            sub_467( "GA", "Not Playing painkiller speech, already played all 6 lines.", 0 );
                        }
                    }
                    else
                    {
                        sub_467( "GA", "Not playing painkiller speech, not long enough since last dialogue.", 0 );
                    }
                }
                else
                {
                    sub_467( "GA", "Not playing painkiller speech, another speech is currently playing.", 0 );
                }
            }
            l_U164 = iVar3;
        }
        if (sub_3616( l_U165 ))
        {
            if (NOT HAS_CUTSCENE_FINISHED())
            {
                sub_467( "GA", "Killing painkiller speech for cutscene playing.", 0 );
                sub_3856( ref l_U165, 0 );
            }
        }
    }
    if (bParam0)
    {
        sub_1454( ref l_U155, 20000, 1, 0 );
        sub_1590( ref l_U155 );
    }
    return;
}

void sub_1454(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1590(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_1706()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

int sub_1909(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2162(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_2244(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_2486(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_2510( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_2510(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_2565( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_2565(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_2600( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_3094( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_2600(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_3094(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_3616(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_3629( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_3629(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_3856(int iParam0, unknown uParam1)
{
    if (NOT (sub_3629( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_3986()
{
    return g_U648;
}

int sub_4026(int iParam0)
{
    iParam0 = 1;
    switch (l_U141)
    {
        case 0:
        if (NOT (sub_4087( ref l_U143 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_760() )))
            {
                l_U142 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1454( ref l_U143, l_U142, 1, 1 );
            sub_1590( ref l_U143 );
        }
        if (sub_1909( ref l_U143 ))
        {
            sub_467( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_760() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_782() )))
            {
                SET_PLAYER_CONTROL( sub_782(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U141 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U141 = 2;
            }
            else
            {
                l_U141 = 3;
            }
        }
        break;
        case 2:
        sub_467( "NS", "Player will QUIT", 0 );
        sub_4546();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_467( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4546();
        return 1;
        break;
    }
    return 0;
}

int sub_4087(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4546()
{
    sub_467( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4596( ref l_U143 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_782() )))
    {
        SET_PLAYER_CONTROL( sub_782(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U140 = 0;
    l_U140 = l_U140;
    l_U141 = 0;
    return;
}

void sub_4596(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5265(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5363()
{
    sub_467( "AT", "P_CLEANUP_FORENSICSLAB", 0 );
    ISEQ_TERMINATE( 1073507453 );
    sub_5430( 1073507453, ref g_U2662 );
    ISEQ_TERMINATE( 773376182 );
    sub_5430( 773376182, ref g_U2662 );
    ISEQ_TERMINATE( 1786457053 );
    sub_5430( 1786457053, ref g_U2662 );
    ISEQ_TERMINATE( -1066603168 );
    sub_5430( -1066603168, ref g_U2662 );
    sub_5880( ref l_U640 );
    sub_5880( ref l_U646 );
    sub_5880( ref l_U652 );
    sub_5880( ref l_U658 );
    sub_6003( ref l_U395 );
    sub_6003( ref l_U427 );
    sub_6143( ref l_U770 );
    sub_6143( ref l_U771 );
    sub_6143( ref l_U772 );
    sub_6143( ref l_U773 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U258._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U279._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U300._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U321._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U214._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U235._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U664[0]._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U664[1]._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U664[2]._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U664[3]._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U749._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U774._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U466._fU0 );
    return;
}

void sub_5430(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5542( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_5542(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_5880(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_5913( (uParam0^)[I] );
    }
    return;
}

void sub_5913(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_6003(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_6037( (uParam0^)[I] );
    }
    return;
}

void sub_6037(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_6143(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        STOP_SOUND( (uParam0^), 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    return;
}

void sub_6413(unknown uParam0)
{
    char[64] cVar3;
    unknown uVar19;

    if (NOT (IS_PED_DEAD( sub_760() )))
    {
        sub_6465( sub_760(), g_U2953[uParam0], g_U3083[uParam0] );
        FREEZE_PED_POSITION( sub_760(), 1 );
        if (NOT (IS_STRING_NULL( ref g_U1091[uParam0]._fU0 )))
        {
            StrCopy( ref cVar3, "Loading room: ", 64 );
            ConcatString(ref cVar3, ref g_U1091[uParam0]._fU0, 64);
            uVar19 = GET_INTERIOR_FROM_NAME( ref g_U1091[uParam0]._fU64, 0 );
            SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, GET_HASH_KEY( ref g_U1091[uParam0]._fU0 ) );
        }
        FREEZE_PED_POSITION( sub_760(), 0 );
    }
    return;
}

void sub_6465(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_6794(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_467( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_6978( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_8055( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_8347( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_8707( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_8347( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_8707( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_8347( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_8707( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_8992( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_8707( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_8992( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_8707( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_9485( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_9646( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_760(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_467( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_6978(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_7010( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_7010(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_8055(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_8347(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_8663( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_8663(unknown uParam0)
{
    return;
}

void sub_8707(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_8992(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_8663( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_9485(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_9646(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_7010( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_9718( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_9718(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_11010()
{
    int iVar2;
    int I;
    int iVar4;
    int iVar5;
    int iVar6;

    if (sub_11025( ref l_U774, 0 ))
    {
        sub_467( "AT", "Player is in death volume. Forcing death.", 0 );
        DO_SCREEN_FADE_OUT( 500 );
        sub_467( "AT", "eCheckpointState = CP_SPECIAL_PLAYER_FALL_DEATH_HANDLING", 0 );
        l_U211 = 12;
    }
    iVar2 = l_U211;
    switch (l_U211)
    {
        case 0: break;
        case 1:
        sub_467( "AT", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_11490();
        sub_12060();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U211 = 2;
        sub_467( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_467( "AT", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        sub_14159();
        sub_18746();
        l_U211 = 3;
        sub_467( "AT", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_21523( ref g_U2889 )) AND ((sub_21332( ref g_U2662 )) AND ((sub_21205( ref g_U2741 )) AND ((sub_21084( ref g_U2613 )) AND (sub_20964( ref g_U2468 ))))))
        {
            g_U822[12] = 1;
            if ((NOT l_U175._fU0) AND (g_U820 == 12))
            {
                sub_467( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
                l_U211 = 4;
            }
            else
            {
                sub_467( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
                l_U211 = 6;
            }
        }
        break;
        case 4:
        sub_467( "AT", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        g_U842[12] = 1;
        if (NOT (sub_21886( ref l_U175 )))
        {
            sub_8992( sub_760(), 57534114, 200, 0, 0 );
            sub_8347( sub_760(), -862236369, 0, 200, 0 );
            sub_8347( sub_760(), -862236369, 1, 200, 0 );
            SET_PAYNEKILLER_AMT( 7 );
            l_U211 = 5;
            sub_467( "AT", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U211 = 6;
            sub_467( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_760() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_760(), 1 ) )) AND ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_760(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_760(), 0, 0 ) ))))
            {
                g_U821 = 12;
                sub_22422( ref l_U175, g_U821, sub_760(), g_U2953[12], g_U3083[12], g_U3127[12], g_U3171[12], 1 );
                l_U211 = 6;
                sub_467( "AT", "eCheckpointState = CP_PRESPAWN_ENEMIES", 0 );
            }
        }
        break;
        case 6:
        if (l_U212)
        {
            l_U450 = 1;
            l_U452 = 1;
        }
        if (sub_26121())
        {
            if (sub_28503())
            {
                l_U211 = 7;
                sub_467( "AT", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 7:
        if (l_U212)
        {
            sub_29436();
        }
        if (g_U842[12])
        {
            sub_30907( 0, 1 );
            DO_SCREEN_FADE_IN( 0 );
            if (g_U821 != 12)
            {
                g_U821 = 12;
                sub_22422( ref l_U175, g_U821, sub_760(), g_U2953[12], g_U3083[12], g_U3127[12], g_U3171[12], 1 );
            }
            else
            {
                sub_467( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_2", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2", 0, 0, -1, -1, -1082130432, 0 );
            }
            for ( I = 0; I < l_U395; I++ )
            {
                if (NOT (IS_PED_DEAD( l_U395[I] )))
                {
                    SET_PED_VISIBLE_DURING_SEQUENCE( l_U395[I], 0 );
                    SET_PED_VISIBLE( l_U395[I], 0 );
                }
            }
            for ( I = 0; I < l_U427; I++ )
            {
                if (NOT (IS_PED_DEAD( l_U427[I] )))
                {
                    SET_PED_VISIBLE( l_U427[I], 0 );
                }
            }
            l_U211 = 9;
            sub_467( "AT", "eCheckpointState = CP_FORENSICSROOM_COMBAT", 0 );
        }
        break;
        case 9:
        if (sub_11025( ref l_U466, 0 ))
        {
            ;
        }
        iVar4 = sub_31605( ref l_U395 );
        iVar5 = sub_31605( ref l_U427 );
        if (NOT l_U465)
        {
            if ((sub_11025( ref l_U300, 0 )) || ((sub_11025( ref l_U279, 0 )) || ((sub_31746()) AND (sub_31715( l_U258 )))))
            {
                sub_31908();
                l_U465 = 1;
            }
        }
        else
        {
            sub_32259();
            sub_36758();
        }
        if (NOT l_U449)
        {
            iVar6 = sub_37225( ref l_U395 );
            if ((sub_31715( l_U321 )) || (iVar6 >= 2))
            {
                sub_467( "AT", "Unlocking reinforcements!", 0 );
                sub_37385();
                AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_3", 0 );
                l_U449 = 1;
            }
        }
        else if (((g_U862[11]._fU40 == 4) || (g_U862[11]._fU40 == 0)) AND (NOT g_U862[13]._fU36))
        {
            g_U862[13]._fU36 = 1;
        }
        if ((iVar5 == 0) AND (iVar4 == 0))
        {
            sub_467( "AT", "ONESHOT: PRECINCT_ONESHOT_3", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            sub_467( "AT", "AUDIO TRACK: PRECINCT_FINAL/MOOD: PRECINCT_01_1_2", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2", "", 0, -1, 8000, -1082130432, 0 );
            sub_1590( ref l_U813 );
            sub_467( "AT", "eCheckpointState = CP_HANDLE_13_04_TRIGGER", 0 );
            l_U211 = 10;
            break;
        }
        if ((iVar4 + iVar5) <= 1)
        {
            sub_37853( ref l_U395 );
            sub_37853( ref l_U427 );
        }
        sub_38001( ref l_U395, -1054867456, 0, 1 );
        sub_38001( ref l_U427, -1054867456, 0, 1 );
        break;
        case 10:
        if (l_U212)
        {
            if ((IS_BULLET_CAMERA_RUNNING( 0 )) AND (sub_11067( sub_760(), l_U235 )))
            {
                sub_467( "SA", "Disabling bullet camera to gameplay.", 0 );
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
        }
        sub_1328( 0 );
        if (NOT sub_1706())
        {
            if (sub_1909( ref l_U813 ))
            {
                sub_38317( "SPOL_FRNSCS", ref l_U803 );
            }
        }
        if ((NOT g_U842[13]) AND (NOT (IS_BULLET_CAMERA_RUNNING( 0 ))))
        {
            if (sub_38428( ref l_U214, ref l_U235 ))
            {
                sub_3856( ref l_U803, 0 );
                g_U842[13] = 1;
            }
        }
        if (NOT HAS_CUTSCENE_FINISHED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
            l_U211 = 11;
        }
        break;
        case 11:
        if (g_U821 == 13)
        {
            sub_467( "AT", "eCheckpointState = CP_FINISHED", 0 );
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U211 = 0;
            sub_467( "AT", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
        case 12:
        sub_467( "AT", "CP_SPECIAL_PLAYER_FALL_DEATH_HANDLING", 0 );
        if (IS_SCREEN_FADED_OUT())
        {
            if (NOT (IS_PED_DEAD( sub_760() )))
            {
                sub_6465( sub_760(), g_U2953[12], g_U3083[12] );
                sub_40479( sub_760() );
            }
        }
        break;
    }
    if (l_U211 != iVar2)
    {
        l_U212 = 1;
    }
    else
    {
        l_U212 = 0;
    }
    return;
}

void sub_11025(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_11067( sub_760(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

int sub_11067(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

void sub_11490()
{
    sub_467( "AT", "P_INITIALIZE_SCRIPT_DATA", 0 );
    l_U212 = 1;
    l_U449 = 0;
    l_U464 = 0;
    l_U465 = 0;
    l_U450 = 0;
    l_U451 = 0;
    l_U452 = 0;
    l_U453 = 0;
    sub_11591( ref g_U4093, 1 );
    sub_11591( ref g_U4100, 1 );
    sub_1454( ref l_U487, 5500, 1, 0 );
    sub_1454( ref l_U496, 500, 1, 0 );
    sub_1454( ref l_U505, 1200, 1, 0 );
    sub_1454( ref l_U514, 0, 1, 0 );
    sub_1454( ref l_U523, 1400, 1, 0 );
    sub_1454( ref l_U604, 2000, 1, 0 );
    sub_1454( ref l_U613, 2000, 1, 0 );
    sub_1454( ref l_U622, 2000, 1, 0 );
    sub_1454( ref l_U631, 2000, 1, 0 );
    sub_1454( ref l_U532, 100, 1, 0 );
    sub_1454( ref l_U541, 100, 1, 0 );
    sub_1454( ref l_U550, 100, 1, 0 );
    sub_1454( ref l_U559, 100, 1, 0 );
    sub_1454( ref l_U568, 750, 1, 0 );
    sub_1454( ref l_U577, 750, 1, 0 );
    sub_1454( ref l_U586, 750, 1, 0 );
    sub_1454( ref l_U595, 750, 1, 0 );
    sub_1454( ref l_U813, 9000, 1, 0 );
    return;
}

void sub_11591(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_11603( iParam0 )) == 0)
    {
        sub_11669( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_11603(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_11669(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_12060()
{
    sub_467( "AT", "P_SET_STATIC_DATA", 0 );
    sub_12139( ref l_U342[0], 1008.96900000, 25.49600000, 7.80004300, -180.00000000, 2144578822, 7, 3, 2, 0, 0 );
    sub_12139( ref l_U342[1], 1012.50000000, 25.56600000, 7.80004300, -180.00000000, -1350099781, 7, 3, 2, 0, 0 );
    sub_12139( ref l_U342[2], 1016.45000000, 25.79700000, 7.80004300, -180.00000000, -1096062039, 7, 3, 2, 0, 0 );
    sub_12139( ref l_U342[3], 1021.92800000, 25.14200000, 7.80004300, -180.00000000, 248934683, 7, 3, 2, 0, 0 );
    sub_12139( ref l_U400[0], 1011.32000000, 23.56000000, 7.80000000, 0.00000000, 311955291, 7, 3, 2, 0, 0 );
    sub_12139( ref l_U400[1], 1017.26000000, 19.49000000, 7.80000000, 0.00000000, 1462347560, 7, 3, 2, 0, 0 );
    sub_12531( ref l_U258, "TB_START_RAPPELLERS", 1026.62000000, 22.04000000, 7.55000000, 8.76000000, 2.66000000, 3.91000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U279, "TB_START_RAPPELLERS_FAILSAFE", 1026.63000000, 25.67000000, 7.55000000, 8.76000000, 4.67000000, 3.91000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U300, "TB_START_RAPPELLERS_FAILSAFE_2", 1019.52000000, 21.97000000, 7.55000000, 8.76000000, 11.79000000, 3.91000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U321, "TB_TRIGGER_REINFORCEMENTS", 1016.77000000, 21.95000000, 7.55000000, 3.00000000, 12.00000000, 3.91000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U214, "TB_13_04_OUTER", 1007.03000000, 15.05000000, 7.55000000, 11.76000000, 10.17000000, 3.91000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U235, "TB_13_04_INNER", 1007.03000000, 13.27000000, 7.55000000, 12.08000000, 6.30000000, 3.91000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U664[0], "TB_REAR_RAPPELLER_CLEAR", 1009.21000000, 25.66000000, 7.79000000, 3.50000000, 4.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U664[1], "TB_MID_REAR_RAPPELLER_CLEAR", 1014.30000000, 25.66000000, 7.79000000, 3.50000000, 4.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U664[2], "TB_MID_FRONT_RAPPELLER_CLEAR", 1016.62000000, 25.66000000, 7.79000000, 3.50000000, 4.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U664[3], "TB_FRONT_RAPPELLER_CLEAR", 1021.73000000, 25.66000000, 7.79000000, 3.50000000, 4.50000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U749, "TB_CHANGE_REINFORCEMENT_SPAWN", 1009.64000000, 19.05000000, 7.76000000, 17.23000000, 17.71000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_12531( ref l_U774, "TB_PLAYER_DEATH", 1015.76000000, 14.41000000, -2.72000000, 45.00000000, 35.00000000, 10.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_12531( ref l_U466, "TB_PLAYER_IN_FORENSICS", 1018.00000000, 21.88000000, 7.79000000, 12.08000000, 26.02000000, 3.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    l_U441[0] = "5FBC25E3_5365EC8E_Corner2";
    l_U441[1] = "5FBC25E3_556B395F_Corner1";
    l_U436[0] = "5FBC25E3_C23DE0F_Corner2";
    l_U436[1] = "5FBC25E3_9A0C432D_Popover4";
    l_U436[2] = "5FBC25E3_8E9AABC1_Popover1";
    l_U436[3] = "5FBC25E3_8E9AABC1_Popover4";
    l_U444[0] = 57534114;
    l_U444[1] = 57534114;
    l_U444[2] = 1194438308;
    l_U444[3] = 1194438308;
    l_U454[0] = 1073507453;
    l_U454[1] = 773376182;
    l_U454[2] = 1786457053;
    l_U454[3] = -1066603168;
    l_U459[0] = "VIG_06_UFE_A";
    l_U459[1] = "VIG_06_UFE_B";
    l_U459[2] = "VIG_06_UFE_C2";
    l_U459[3] = "VIG_06_UFE_D";
    return;
}

void sub_12139(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_12531(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14159()
{
    sub_467( "AT", "P_REQUEST_FORENSICSLAB_PERSISTENT_ASSETS start", 0 );
    sub_14237( ref l_U795, ref g_U2468 );
    sub_15664( "LEVEL_S_POLICE_CP_11", ref g_U2741 );
    sub_16648( 57534114, ref g_U2613 );
    sub_16648( 1194438308, ref g_U2613 );
    sub_16648( 434544317, ref g_U2613 );
    sub_16648( -862236369, ref g_U2613 );
    sub_16648( -1986694060, ref g_U2613 );
    sub_17693( "SCRIPT_MISSION\S_POLICE_FORENSICS_LAB_RAPPEL", ref g_U2889 );
    sub_467( "AT", "P_REQUEST_FORENSICSLAB_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_14237(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_14272( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_14272(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_14307( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_14438( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_14307(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_14438( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_14438( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_14438( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_15086( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_14438( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_14438( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_14438(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14458( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_14458(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_15086(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_15664(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_15685( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_15822( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_15685(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_15822( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_15822( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_15822( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_15086( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_15822( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_15822( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15822(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14458( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_16648(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_16669( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_16801( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_16669(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_16801( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_16801( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_16801( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_15086( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_16801( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16801( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16801(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14458( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_17693(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17714( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_17852( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17714(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_17852( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_17852( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_17852( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_15086( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_17852( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_17852( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17852(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14458( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18746()
{
    sub_467( "AT", "P_REQUEST_FORENSICSLAB_NONPERSISTENT_ASSETS start", 0 );
    sub_18828( 1073507453, ref g_U2662 );
    sub_18828( 773376182, ref g_U2662 );
    sub_18828( 1786457053, ref g_U2662 );
    sub_18828( -1066603168, ref g_U2662 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_4", 0 );
    sub_467( "AT", "P_REQUEST_FORENSICSLAB_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_18828(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_18863( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_19015( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_18863(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_19015( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_19015( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_19015( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_19015( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_15086( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_15086( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_19015( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_19015( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19015(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_14458( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_20964(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21084(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21205(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21332(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_21523(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_21886(unknown uParam0)
{
    sub_467( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_6794( uParam0, sub_760() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_22422(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_467( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_467( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_9646( iParam1 );
        sub_22681( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_23132( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_23132( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_23132( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_23132( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_23132( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_23364( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_24922( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_467( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_22681(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_7010( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_467( "TEH", "Ending context", 0 );
        sub_467( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_23132(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_23364(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_24922(int iParam0)
{
    sub_8663( "CHECKPOINT DATA" );
    sub_24961( iParam0->_fU4 );
    sub_24984( iParam0->_fU16 );
    sub_24984( iParam0->_fU20 );
    sub_24984( iParam0->_fU24 );
    sub_25027( iParam0->_fU28 );
    sub_25027( iParam0->_fU56 );
    sub_25027( iParam0->_fU60 );
    sub_25027( iParam0->_fU64 );
    sub_25027( iParam0->_fU68 );
    sub_25027( iParam0->_fU72 );
    sub_25027( iParam0->_fU76 );
    sub_25027( iParam0->_fU80 );
    sub_25027( iParam0->_fU84 );
    sub_25027( iParam0->_fU88 );
    sub_25027( iParam0->_fU92 );
    sub_24984( iParam0->_fU32 );
    sub_25027( iParam0->_fU36 );
    sub_25027( iParam0->_fU40 );
    sub_25027( iParam0->_fU44 );
    sub_24984( iParam0->_fU136 );
    sub_25232( iParam0->_fU140 );
    sub_25027( iParam0->_fU52 );
    sub_8663( "---nRightHolsterAttachmentEnabled: " );
    sub_25027( iParam0->_fU96 );
    sub_8663( "---nRightHolsterAttachmentToggled: " );
    sub_25027( iParam0->_fU100 );
    sub_8663( "---nLeftHolsterAttachmentEnabled: " );
    sub_25027( iParam0->_fU104 );
    sub_8663( "---nLeftHolsterAttachmentToggled: " );
    sub_25027( iParam0->_fU108 );
    sub_8663( "---nRifleHolsterAttachmentEnabled: " );
    sub_25027( iParam0->_fU112 );
    sub_8663( "---nRifleHolsterAttachmentToggled: " );
    sub_25027( iParam0->_fU116 );
    sub_8663( "---nRightHandAttachmentEnabled: " );
    sub_25027( iParam0->_fU120 );
    sub_8663( "---nRightHandAttachmentToggled: " );
    sub_25027( iParam0->_fU124 );
    sub_8663( "---nLeftHandAttachmentEnabled: " );
    sub_25027( iParam0->_fU128 );
    sub_8663( "---nLeftHandAttachmentToggled: " );
    sub_25027( iParam0->_fU132 );
    sub_25027( l_U1 );
    sub_25027( 144 );
    return;
}

void sub_24961(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_24984(unknown uParam0)
{
    return;
}

void sub_25027(unknown uParam0)
{
    return;
}

void sub_25232(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

int sub_26121()
{
    switch (l_U450)
    {
        case 1:
        sub_467( "AT", "eSpawnForensicsRappellers = ENTITY_STATE_INIT", 0 );
        sub_26244( ref l_U430, 1056964608, 0 );
        l_U451 = 0;
        l_U450 = 2;
        sub_467( "AT", "eSpawnForensicsRappellers = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        if (NOT (DOES_PED_EXIST( l_U395[l_U451] )))
        {
            l_U395[l_U451] = sub_26532( ref l_U342[l_U451] );
            sub_27371( l_U395[l_U451], ref l_U430 );
            sub_8992( l_U395[l_U451], l_U444[l_U451], 25000, 0, 0 );
            if (NOT (IS_PED_DEAD( l_U395[l_U451] )))
            {
                SET_PED_AI_TEMPLATE( l_U395[l_U451], "AIT_EXPERT" );
                SET_PED_ALERTNESS( l_U395[l_U451], 3 );
                SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U395[l_U451], 1 );
                SET_PED_VISIBLE_DURING_SEQUENCE( l_U395[l_U451], 0 );
                ISEQ_REGISTER_ENTITY( l_U454[l_U451], l_U459[l_U451], l_U395[l_U451], 0 );
                ISEQ_START( l_U454[l_U451] );
                SET_ROOM_FOR_PED_BY_NAME( l_U395[l_U451], ref g_U3437 );
                if (l_U451 == 0)
                {
                    SET_PED_CAN_BE_TARGETTED( l_U395[l_U451], 0 );
                    SET_PED_COMBAT_ADVANCE_DELAY_TIME( l_U395[l_U451], 0, 3000 );
                    SET_PED_COMBAT_ATTRIBUTES( l_U395[l_U451], 16384, 1 );
                    SET_PED_COMBAT_MOVEMENT( l_U395[l_U451], 2 );
                }
            }
        }
        if (NOT (IS_PED_DEAD( l_U395[l_U451] )))
        {
            if (ISEQ_QUERY_ENTITY_STATE( l_U454[l_U451], l_U459[l_U451], 3 ))
            {
                l_U451++;
                if (l_U451 >= l_U395)
                {
                    l_U450 = 3;
                    sub_467( "AT", "eSpawnForensicsRappellers = ENTITY_STATE_POST_CREATE_SETUP", 0 );
                }
            }
        }
        break;
        case 3:
        sub_28161( ref l_U395, "Rappellers" );
        sub_28259( ref l_U395 );
        l_U450 = 4;
        sub_467( "AT", "eSpawnForensicsRappellers = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_26244(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_26532(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_26702( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_27171( iParam0->_fU40 );
    sub_27251( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_26702(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_8663( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_27171(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_27251(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_27371(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_8663( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_26244( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_26244( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_28161(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_28259(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_28290( (uParam0^)[I] );
    }
    return;
}

void sub_28290(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

int sub_28503()
{
    switch (l_U452)
    {
        case 1:
        sub_467( "AT", "eSpawnForensicsWave2 = ENTITY_STATE_INIT", 0 );
        l_U453 = 0;
        l_U452 = 2;
        sub_467( "AT", "eSpawnForensicsWave2 = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U427[l_U453] = sub_26532( ref l_U400[l_U453] );
        sub_27371( l_U427[l_U453], ref l_U430 );
        sub_8992( l_U427[l_U453], 1194438308, 25000, 0, 0 );
        if (NOT (IS_PED_DEAD( l_U427[l_U453] )))
        {
            SET_PED_AI_TEMPLATE( l_U427[l_U453], "AIT_EXPERT" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U427[l_U453], 1 );
            SET_PED_ALERTNESS( l_U427[l_U453], 3 );
            SET_ROOM_FOR_PED_BY_NAME( l_U427[l_U453], ref g_U3437 );
            SET_PED_COMBAT_ADVANCE_DELAY_TIME( l_U427[l_U453], 0, 3000 );
            SET_PED_COMBAT_ATTRIBUTES( l_U427[l_U453], 16384, 1 );
            SET_PED_COMBAT_MOVEMENT( l_U427[l_U453], 2 );
        }
        l_U453++;
        if (l_U453 >= l_U427)
        {
            l_U452 = 3;
            sub_467( "AT", "eSpawnForensicsWave2 = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        if (NOT (IS_PED_DEAD( l_U427[0] )))
        {
            TASK_COMBAT_SNAP_TO_COVER( l_U427[0], "GenCover", "5FBC25E3_556B395F_Corner1", 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U427[0], 1 );
        }
        if (NOT (IS_PED_DEAD( l_U427[1] )))
        {
            TASK_COMBAT_SNAP_TO_COVER( l_U427[1], "GenCover", "5FBC25E3_9A0C432D_Popover4", 0 );
            SET_PED_FLAG_LOCK_TO_COVER( l_U427[1], 1 );
        }
        sub_28161( ref l_U427, "Wave2" );
        sub_28259( ref l_U427 );
        l_U452 = 4;
        sub_467( "AT", "eSpawnForensicsWave2 = ENTITY_STATE_COMPLETE", 0 );
        break;
        case 4:
        return 1;
        break;
    }
    return 0;
}

void sub_29436()
{
    int I;

    sub_467( "AT", "P_SETUP_WINDOW_ELEMENTS start", 0 );
    sub_29522( ref l_U640[0], -641956622, 1020.60900000, 27.83400000, 10.56200000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U640[1], -2054968096, 1020.59600000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U640[2], 1081787387, 1020.59600000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U640[3], 1427923174, 1020.59600000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U640[4], -1763692608, 1020.59600000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U646[0], -641956622, 1015.35900000, 27.83400000, 10.56200000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U646[1], -2054968096, 1015.34500000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U646[2], 1081787387, 1015.34500000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U646[3], 1427923174, 1015.34500000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U646[4], -1763692608, 1015.34500000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U652[0], -641956622, 1010.94900000, 27.83400000, 10.56200000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U652[1], -2054968096, 1010.93500000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U652[2], 1081787387, 1010.93500000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U652[3], 1427923174, 1010.93500000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U652[4], -1763692608, 1010.93500000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U658[0], -641956622, 1007.94800000, 27.83400000, 10.56200000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U658[1], -2054968096, 1007.93400000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U658[2], 1081787387, 1007.93400000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U658[3], 1427923174, 1007.93400000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    sub_29522( ref l_U658[4], -1763692608, 1007.93400000, 28.04800000, 8.89000000, ref g_U3437, 1, 0 );
    for ( I = 0; I < l_U658; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U658[I] ))
        {
            SET_OBJECT_COLLISION( l_U658[I], 0 );
        }
    }
    I = 0;
    for ( I = 0; I < l_U640; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U640[I] ))
        {
            SET_OBJECT_COLLISION( l_U640[I], 0 );
        }
    }
    I = 0;
    for ( I = 0; I < l_U646; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U646[I] ))
        {
            SET_OBJECT_COLLISION( l_U646[I], 0 );
        }
    }
    I = 0;
    for ( I = 0; I < l_U652; I++ )
    {
        if (DOES_OBJECT_EXIST( l_U652[I] ))
        {
            SET_OBJECT_COLLISION( l_U652[I], 0 );
        }
    }
    return;
}

void sub_29522(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    sub_29551( uParam0, uParam1, uParam2, l_U73, uParam5, uParam6, uParam7 );
    return;
}

void sub_29551(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    sub_29577( uParam0, uParam1, uParam2, uParam5, uParam9, uParam10 );
    if (DOES_OBJECT_EXIST( (uParam0^) ))
    {
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( (uParam0^), uParam8 );
    }
    return;
}

void sub_29577(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_5913( (uParam0^) );
    (uParam0^) = sub_29608( uParam1, uParam2, uParam5, 0, uParam9, 0 );
    FREEZE_OBJECT_POSITION( (uParam0^), uParam8 );
    return;
}

void sub_29608(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_26702( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_30907(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_760() )))
    {
        SET_PLAYER_CONTROL( sub_782(), 1, 0 );
        SET_PED_INVINCIBLE( sub_760(), 0 );
        if (bParam0)
        {
            sub_30988();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_30988()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_760() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_760(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_760(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_760(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_760(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_31605(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_31715(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_11067( sub_760(), uParam0 );
}

int sub_31746()
{
    vector vVar2;
    vector vVar5;
    vector vVar8;

    vVar2 = {1010.34400000, 34.87200000, 11.45400000};
    vVar5 = {1017.33800000, 34.87200000, 11.45400000};
    vVar8 = {1025.00300000, 34.87200000, 11.45400000};
    if ((IS_SPHERE_VISIBLE( vVar8, 1.00000000, 0 )) || ((IS_SPHERE_VISIBLE( vVar5, 1.00000000, 0 )) || (IS_SPHERE_VISIBLE( vVar2, 1.00000000, 0 ))))
    {
        return 1;
    }
    return 0;
}

void sub_31908()
{
    int I;
    unknown uVar3;

    sub_31922( ref l_U427 );
    for ( I = 0; I < l_U427; I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_760() ))) AND (NOT (IS_PED_DEAD( l_U427[I] ))))
        {
            OPEN_SEQUENCE_TASK( ref uVar3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_760() );
            CLOSE_SEQUENCE_TASK( uVar3 );
            TASK_PERFORM_SEQUENCE( l_U427[I], uVar3 );
            REGISTER_TARGET( l_U427[I], sub_760() );
            SET_LOCKED_TARGET( l_U427[I], sub_760() );
            CLEAR_SEQUENCE_TASK( uVar3 );
        }
    }
    return;
}

void sub_31922(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_31953( (uParam0^)[I] );
    }
    return;
}

void sub_31953(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_32259()
{
    if (NOT l_U464)
    {
        sub_1590( ref l_U523 );
        sub_1590( ref l_U514 );
        sub_1590( ref l_U505 );
        sub_1590( ref l_U496 );
        sub_467( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_2_3_5", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2_3_5", "", 0, 3000, -1, -1082130432, 0 );
        sub_32444();
        l_U464 = 1;
    }
    if (NOT (sub_31715( l_U664[0] )))
    {
        if (sub_1909( ref l_U496 ))
        {
            sub_467( "AT", "Timer 1 is done!", 0 );
            if ((NOT (IS_PED_DEAD( sub_760() ))) AND (NOT (IS_PED_DEAD( l_U395[0] ))))
            {
                sub_33372( ref l_U395[0], l_U436[0] );
            }
            sub_33582( ref l_U395[0] );
            sub_1590( ref l_U532 );
            sub_1590( ref l_U568 );
            sub_1590( ref l_U604 );
        }
    }
    if (sub_1909( ref l_U532 ))
    {
        sub_33897( l_U658[0], "P_PO_BLND_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U658[1], "P_PO_WNDFR_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U658[2], "P_PO_WNDGLS_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U658[3], "P_PO_WNDGLS_AB_H", "po_anim2", 1065353216, 0 );
    }
    if (sub_1909( ref l_U568 ))
    {
        l_U770 = GET_SOUND_ID();
        STOP_SOUND( l_U770, 0 );
        PLAY_SOUND_FROM_COORD( l_U770, "FORENSICS_LAB_RAPPELLERS", 1007.93400000, 28.04800000, 8.89900000 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_RF_Glass_Window_S", 1009.00000000, 28.04000000, 9.89000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    }
    if (NOT (sub_31715( l_U664[1] )))
    {
        if (sub_1909( ref l_U505 ))
        {
            sub_467( "AT", "Timer 2 is done!", 0 );
            if ((NOT (IS_PED_DEAD( sub_760() ))) AND (NOT (IS_PED_DEAD( l_U395[1] ))))
            {
                sub_33372( ref l_U395[1], l_U436[1] );
            }
            sub_33582( ref l_U395[1] );
            sub_1590( ref l_U541 );
            sub_1590( ref l_U577 );
            sub_1590( ref l_U613 );
        }
    }
    if (sub_1909( ref l_U541 ))
    {
        sub_33897( l_U652[0], "P_PO_BLND_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U652[1], "P_PO_WNDFR_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U652[2], "P_PO_WNDGLS_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U652[3], "P_PO_WNDGLS_AB_H", "po_anim2", 1065353216, 0 );
    }
    if (sub_1909( ref l_U577 ))
    {
        l_U771 = GET_SOUND_ID();
        STOP_SOUND( l_U771, 0 );
        PLAY_SOUND_FROM_COORD( l_U771, "FORENSICS_LAB_RAPPELLERS", 1010.93500000, 28.04800000, 8.89900000 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_RF_Glass_Window_S", 1012.00000000, 28.04000000, 9.89000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    }
    if (NOT (sub_31715( l_U664[2] )))
    {
        if (sub_1909( ref l_U514 ))
        {
            sub_467( "AT", "Timer 3 is done!", 0 );
            if ((NOT (IS_PED_DEAD( sub_760() ))) AND (NOT (IS_PED_DEAD( l_U395[2] ))))
            {
                sub_33372( ref l_U395[2], l_U436[2] );
            }
            sub_33582( ref l_U395[2] );
            sub_1590( ref l_U550 );
            sub_1590( ref l_U586 );
            sub_1590( ref l_U622 );
        }
    }
    if (sub_1909( ref l_U550 ))
    {
        sub_33897( l_U646[0], "P_PO_BLND_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U646[1], "P_PO_WNDFR_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U646[2], "P_PO_WNDGLS_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U646[3], "P_PO_WNDGLS_AB_H", "po_anim2", 1065353216, 0 );
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( 1016.35000000, 27.76000000, 9.69000000, 1014.29000000, 23.37000000, 7.80000000, 0, 0, -1986694060, 0 );
    }
    if (sub_1909( ref l_U586 ))
    {
        l_U772 = GET_SOUND_ID();
        STOP_SOUND( l_U772, 0 );
        PLAY_SOUND_FROM_COORD( l_U772, "FORENSICS_LAB_RAPPELLERS", 1015.34500000, 28.04800000, 8.99000000 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_RF_Glass_Window_S", 1016.20000000, 28.04000000, 9.89000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    }
    if (NOT (sub_31715( l_U664[3] )))
    {
        if (sub_1909( ref l_U523 ))
        {
            sub_467( "AT", "Timer 4 is done!", 0 );
            if ((NOT (IS_PED_DEAD( sub_760() ))) AND (NOT (IS_PED_DEAD( l_U395[3] ))))
            {
                sub_33372( ref l_U395[3], l_U436[3] );
            }
            sub_33582( ref l_U395[3] );
            sub_1590( ref l_U559 );
            sub_1590( ref l_U595 );
            sub_1590( ref l_U631 );
        }
    }
    if (sub_1909( ref l_U559 ))
    {
        sub_467( "GA", "Playing oneshot: PRECINCT_ONESHOT_4", 0 );
        AUDIO_MUSIC_PLAY_ONESHOT();
        sub_33897( l_U640[0], "P_PO_BLND_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U640[1], "P_PO_WNDFR_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U640[2], "P_PO_WNDGLS_AA_H", "po_anim2", 1065353216, 0 );
        sub_33897( l_U640[3], "P_PO_WNDGLS_AB_H", "po_anim2", 1065353216, 0 );
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( 1021.67000000, 27.76000000, 9.72000000, 1025.83000000, 25.17000000, 7.80000000, 0, 0, -1986694060, 0 );
    }
    if (sub_1909( ref l_U595 ))
    {
        l_U773 = GET_SOUND_ID();
        STOP_SOUND( l_U773, 0 );
        PLAY_SOUND_FROM_COORD( l_U773, "FORENSICS_LAB_RAPPELLERS", 1020.59600000, 28.04800000, 8.89000000 );
        START_PARTICLE_FX_NON_LOOPED_AT_COORD( "PO_RF_Glass_Window_S", 1021.50000000, 28.04000000, 9.89000000, 0.00000000, 0.00000000, 0.00000000, 1065353216 );
    }
    sub_36007( ref l_U822 );
    return;
}

void sub_32444()
{
    sub_32458( ref l_U822 );
    l_U822[0]._fU4 = "EXPOSURE_DARKEN";
    l_U822[0]._fU16 = 300;
    l_U822[0]._fU24 = 1;
    l_U822[0]._fU20 = 3;
    l_U822[0]._fU12 = l_U1066;
    l_U822[0]._fU8 = 4;
    l_U822[0]._fU32 = 0;
    l_U822[1]._fU4 = "DISTORT_INTERLACE_MIDDLE";
    l_U822[1]._fU8 = 4;
    l_U822[1]._fU32 = 0;
    l_U822[2]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U822[2]._fU8 = 4;
    l_U822[2]._fU32 = 0;
    l_U822[4]._fU4 = "DOUBLE_TINT_BLUE_FLASH_LONG";
    l_U822[4]._fU16 = 300;
    l_U822[4]._fU24 = 1;
    l_U822[4]._fU20 = 1;
    l_U822[4]._fU12 = l_U1066 + 500;
    l_U822[4]._fU8 = 4;
    l_U822[4]._fU32 = 0;
    l_U822[5]._fU4 = "FLASH_WHITE";
    l_U822[5]._fU8 = 4;
    l_U822[5]._fU32 = 0;
    l_U822[6]._fU4 = "FLICKER_VIBRATE_INTERLACE_01";
    l_U822[6]._fU16 = 300;
    l_U822[6]._fU24 = 1;
    l_U822[6]._fU20 = 1;
    l_U822[6]._fU12 = l_U1066 + 1200;
    l_U822[6]._fU8 = 4;
    l_U822[6]._fU32 = 0;
    l_U822[7]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U822[7]._fU8 = 4;
    l_U822[7]._fU32 = 0;
    l_U822[8]._fU4 = "FLASH_WHITE";
    l_U822[8]._fU12 = l_U1066 + 1400;
    l_U822[8]._fU8 = 4;
    l_U822[8]._fU32 = 0;
    l_U152 = 0;
    return;
}

void sub_32458(unknown uParam0)
{
    int I;

    sub_467( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_33372(unknown uParam0, unknown uParam1)
{
    unknown uVar4;

    sub_31953( (uParam0^) );
    SET_PED_VISIBLE_DURING_SEQUENCE( (uParam0^), 1 );
    OPEN_SEQUENCE_TASK( ref uVar4 );
    TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
    TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", uParam1, 0 );
    CLOSE_SEQUENCE_TASK( uVar4 );
    TASK_PERFORM_SEQUENCE( (uParam0^), uVar4 );
    REGISTER_TARGET( (uParam0^), sub_760() );
    SET_LOCKED_TARGET( (uParam0^), sub_760() );
    CLEAR_SEQUENCE_TASK( uVar4 );
    PED_SET_ACTION_INTENTION( (uParam0^), 47, 1000, 0, 0, 0 );
    SET_PED_PRIMARY_LOOKAT( (uParam0^), sub_760() );
    REGISTER_TARGET( (uParam0^), sub_760() );
    SET_LOCKED_TARGET( (uParam0^), sub_760() );
    return;
}

void sub_33582(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( (uParam0^) )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( (uParam0^), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            sub_33639( ref uVar3, 13, 1 );
            SET_LASER_SIGHT_ATTACHMENT( uVar3, -938171172 );
        }
        else
        {
            SCRIPT_ASSERT( "Could not get weapon from rappeller!", 0 );
        }
    }
    return;
}

void sub_33639(unknown uParam0, unknown uParam1, boolean bParam2)
{
    if (GET_DOES_WEAPON_EXIST( (uParam0^) ))
    {
        if (bParam2)
        {
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
        else
        {
            TOGGLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
            ENABLE_WEAPON_ATTACHMENT( (uParam0^), uParam1, bParam2 );
        }
    }
    return;
}

void sub_33897(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, uParam1, uParam2, 0.00000000, 0, 1 );
        SET_OBJECT_ANIM_CURRENT_TIME( uParam0, uParam1, uParam2, uParam4 );
        SET_OBJECT_ANIM_SPEED( uParam0, uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_36007(unknown uParam0)
{
    int I;
    int J;

    switch (l_U152)
    {
        case 0:
        sub_467( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_1454( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_1590( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U152 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_1909( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_1454( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_1590( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_1454( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_1590( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_1909( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_36758()
{
    if (NOT (IS_PED_DEAD( l_U395[0] )))
    {
        if (sub_1909( ref l_U604 ))
        {
            sub_467( "AT", "Setting REAR rappeller to be targettable.", 0 );
            SET_PED_CAN_BE_TARGETTED( l_U395[0], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U395[1] )))
    {
        if (sub_1909( ref l_U613 ))
        {
            sub_467( "AT", "Setting MID REAR rappeller to be targettable.", 0 );
            SET_PED_CAN_BE_TARGETTED( l_U395[1], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U395[2] )))
    {
        if (sub_1909( ref l_U622 ))
        {
            sub_467( "AT", "Setting MID FRONT rappeller to be targettable.", 0 );
            SET_PED_CAN_BE_TARGETTED( l_U395[2], 1 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U395[3] )))
    {
        if (sub_1909( ref l_U631 ))
        {
            sub_467( "AT", "Setting FRONT rappeller to be targettable.", 0 );
            SET_PED_CAN_BE_TARGETTED( l_U395[3], 1 );
        }
    }
    return;
}

void sub_37225(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            if (IS_PED_DEAD( (uParam0^)[I] ))
            {
                Result++;
            }
        }
    }
    return Result;
}

void sub_37385()
{
    if (NOT (IS_PED_DEAD( l_U427[0] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U427[0], 0 );
    }
    if (NOT (IS_PED_DEAD( l_U427[1] )))
    {
        SET_PED_FLAG_LOCK_TO_COVER( l_U427[1], 0 );
    }
    return;
}

void sub_37853(unknown uParam0)
{
    int I;

    if ((sub_31605( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_38001(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_38038( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_38038(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_6037( uParam0 );
            }
        }
    }
    return;
}

void sub_38317(unknown uParam0, unknown uParam1)
{
    sub_2162( uParam1 );
    sub_2244( 0, sub_760(), "MAX", uParam1, 2, 0 );
    sub_2244( 1, sub_760(), "MAX", uParam1, 2, 0 );
    sub_2486( uParam0, uParam1, 8, 1 );
    return;
}

int sub_38428(int iParam0, unknown uParam1)
{
    unknown uVar4;

    if ((sub_11025( iParam0, 0 )) == 1)
    {
        SET_PED_FORCED_TO_WALK( sub_760(), 1 );
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_782(), 0 );
    }
    if (sub_31715( (iParam0^) ))
    {
        sub_38499( ref l_U55, 1, 0 );
        sub_39759( 0 );
    }
    if ((NOT (sub_31715( (iParam0^) ))) AND (iParam0->_fU64))
    {
        iParam0->_fU64 = 0;
        SET_PED_FORCED_TO_WALK( sub_760(), 0 );
        SET_PLAYER_CAN_USE_SHOOTDODGE( sub_782(), 1 );
    }
    if (sub_11025( uParam1, 0 ))
    {
        return 1;
    }
    return 0;
}

void sub_38499(int iParam0, int iParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;

    sub_38511( iParam0 );
    if ((IS_PED_DEAD( sub_760() )) == 0)
    {
        uVar5 = GET_WEAPON_FROM_HAND( sub_760(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            if ((sub_38690( uVar5 )) == 1)
            {
                ref iParam0->_fU0->_fU0 = uVar5;
                ref iParam0->_fU0->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
            else if ((sub_38918( uVar5 )) == 1)
            {
                ref iParam0->_fU24->_fU0 = uVar5;
                ref iParam0->_fU24->_fU4 = GET_WEAPON_TYPE( uVar5 );
            }
        }
        uVar6 = GET_WEAPON_FROM_HAND( sub_760(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar6 )) == 1)
        {
            ref iParam0->_fU12->_fU0 = uVar6;
            ref iParam0->_fU12->_fU4 = GET_WEAPON_TYPE( uVar6 );
        }
        uVar7 = GET_WEAPON_FROM_HOLSTER( sub_760(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
        {
            ref iParam0->_fU36->_fU0 = uVar7;
            ref iParam0->_fU36->_fU4 = GET_WEAPON_TYPE( uVar7 );
        }
        uVar8 = GET_WEAPON_FROM_HOLSTER( sub_760(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar8 )) == 1)
        {
            ref iParam0->_fU48->_fU0 = uVar8;
            ref iParam0->_fU48->_fU4 = GET_WEAPON_TYPE( uVar8 );
        }
        uVar9 = GET_WEAPON_FROM_HOLSTER( sub_760(), 2 );
        if ((GET_DOES_WEAPON_EXIST( uVar9 )) == 1)
        {
            ref iParam0->_fU60->_fU0 = uVar9;
            ref iParam0->_fU60->_fU4 = GET_WEAPON_TYPE( uVar9 );
        }
    }
    if (iParam1 == 0)
    {
        if ((IS_PED_DEAD( sub_760() )) == 0)
        {
            uVar10 = GET_WEAPON_FROM_HAND( sub_760(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar10 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_760(), 0, 0, uParam2 );
            }
            uVar11 = GET_WEAPON_FROM_HAND( sub_760(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar11 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_760(), 0, 1, uParam2 );
            }
        }
    }
    else if (iParam1 == 1)
    {
        if ((IS_PED_DEAD( sub_760() )) == 0)
        {
            uVar12 = GET_WEAPON_FROM_HAND( sub_760(), 0, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar12 )) == 1)
            {
                if ((sub_38918( uVar12 )) == 1)
                {
                    SELECT_WEAPON_TO_HAND( sub_760(), 0, 0, uParam2 );
                }
            }
            uVar13 = GET_WEAPON_FROM_HAND( sub_760(), 1, 0 );
            if ((GET_DOES_WEAPON_EXIST( uVar13 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_760(), 0, 1, uParam2 );
            }
        }
    }
    return;
}

void sub_38511(int iParam0)
{
    ref iParam0->_fU0->_fU0 = 0;
    ref iParam0->_fU0->_fU4 = 0;
    ref iParam0->_fU12->_fU0 = 0;
    ref iParam0->_fU12->_fU4 = 0;
    ref iParam0->_fU24->_fU0 = 0;
    ref iParam0->_fU24->_fU4 = 0;
    ref iParam0->_fU36->_fU0 = 0;
    ref iParam0->_fU36->_fU4 = 0;
    ref iParam0->_fU48->_fU0 = 0;
    ref iParam0->_fU48->_fU4 = 0;
    ref iParam0->_fU60->_fU0 = 0;
    ref iParam0->_fU60->_fU4 = 0;
    return;
}

int sub_38690(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_38918(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == -2075384407) || ((iVar3 == 10648147) || ((iVar3 == 1224272620) || ((iVar3 == 1478009203) || ((iVar3 == 1964270085) || ((iVar3 == -110877124) || ((iVar3 == 427207702) || ((iVar3 == 319712764) || ((iVar3 == 514118749) || ((iVar3 == -184942895) || ((iVar3 == -168327769) || ((iVar3 == 434544317) || ((iVar3 == -1659006841) || ((iVar3 == 930042831) || ((iVar3 == 1001413062) || ((iVar3 == 377623895) || ((iVar3 == -1312131151) || ((iVar3 == -1787162676) || ((iVar3 == 724901397) || ((iVar3 == 57534114) || ((iVar3 == 840671040) || ((iVar3 == 1308526797) || ((iVar3 == -1074756423) || ((iVar3 == 1992962408) || (iVar3 == -1013714740)))))))))))))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_39759(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_760() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_760(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_38690( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_39864();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_760(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_39864()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_760() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_760(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_38690( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_760(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_760(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_760(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_40479(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_40605()
{
    sub_467( "AT", "P_RELEASE_FORENSICSLAB_ASSETS", 0 );
    sub_40666( ref l_U795, ref g_U2468 );
    sub_40963( "LEVEL_S_POLICE_CP_11", ref g_U2741 );
    sub_41141( 57534114, ref g_U2613 );
    sub_41141( 1194438308, ref g_U2613 );
    sub_41141( 434544317, ref g_U2613 );
    sub_41141( -862236369, ref g_U2613 );
    sub_41141( -1986694060, ref g_U2613 );
    sub_41402( "SCRIPT_MISSION\S_POLICE_FORENSICS_LAB_RAPPEL", ref g_U2889 );
    return;
}

void sub_40666(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_40701( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_40701(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_5542( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_40963(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5542( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_41141(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_5542( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_41402(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_5542( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


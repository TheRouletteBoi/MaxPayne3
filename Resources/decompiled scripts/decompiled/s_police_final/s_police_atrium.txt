void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U74 = 0;
    l_U75 = 0;
    l_U76 = 1500;
    l_U95 = 12;
    l_U154 = 0;
    l_U155 = 0;
    l_U157 = 1;
    l_U158 = 0;
    l_U186 = 0;
    l_U187 = 0;
    l_U188 = 0;
    l_U189 = 0;
    l_U211 = 1000;
    l_U212 = 1000;
    l_U221 = 3000;
    l_U231 = 20.00000000;
    l_U232 = 7500;
    l_U242 = 50.00000000;
    l_U253 = -1;
    l_U254 = -1;
    l_U608 = 800;
    l_U609 = {17.09000000, 3.63000000, 0.30000000};
    l_U612 = {15.10000000, 15.00000000, 7.00000000};
    l_U615 = {17.90000000, 5.76000000, 0.60000000};
    l_U618 = {22.00000000, 8.00000000, 8.00000000};
    l_U630 = 1350;
    l_U640 = 1100;
    l_U650 = 16300;
    l_U651 = 350;
    l_U652 = 1250;
    l_U705 = 10000;
    l_U715 = 0;
    sub_601( "SP", "Script s_police_atrium.sc is starting up...", 0 );
    sub_650();
    l_U155 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_945();
        if (l_U158 == 0)
        {
            sub_12731();
        }
        WAIT( 0 );
    }
    sub_5623( 1 );
    sub_49410();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_police_atrium" );
    sub_601( "SP", "Script s_police_atrium.sc is terminating...", 0 );
    return;
}

void sub_601(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_650()
{
    sub_601( "GA", "P_AT_POPULATE_SCRIPT_ARRAYS start", 0 );
    l_U142[0] = g_U3227;
    l_U142[1] = -657242783;
    l_U142[2] = g_U813;
    l_U142[3] = -1257962541;
    l_U142[4] = -1514674887;
    l_U142[5] = 743953242;
    l_U149[0] = -862236369;
    l_U149[1] = 1194438308;
    l_U149[2] = 1964270085;
    l_U149[3] = -1986694060;
    l_U214[0] = 0;
    l_U214[1] = 0;
    l_U214[2] = 0;
    l_U214[3] = 0;
    sub_601( "GA", "P_AT_POPULATE_SCRIPT_ARRAYS end", 0 );
    return;
}

void sub_945()
{
    if (g_U821 == 7)
    {
        switch (l_U158)
        {
            case 0:
            if ((sub_1100()) || (IS_PED_DEAD( sub_1027() )))
            {
                l_U158 = 1;
                sub_601( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            sub_1595( 1 );
            if (sub_4253())
            {
                l_U158 = 3;
            }
            else if ((sub_4293( 0 )) == 1)
            {
                l_U158 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_1027() )))
            {
                l_U158 = 3;
                sub_601( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_601( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_1027() ))) AND (NOT (IS_PLAYER_DEAD( sub_1049() ))))
            {
                SET_PLAYER_CONTROL( sub_1049(), 0, 0 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_1027() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_1027(), 0 );
                }
            }
            if ((g_U862[8]._fU40 != 4) AND (g_U862[8]._fU40 != 0))
            {
                sub_601( "CR", "Shutting down script for MCE_FLOOR2.", 0 );
                sub_5515( ref g_U862[8] );
                SET_EXITFLAG_FOR_SCRIPT( g_U862[8]._fU32 );
            }
            g_U842[8] = 0;
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            AUDIO_MUSIC_STOP_ONESHOT();
            sub_5623( 0 );
            sub_8128( 7 );
            l_U158 = 4;
            sub_601( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_601( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_8509( ref l_U106, sub_1027() );
            l_U158 = 5;
            sub_601( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_601( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U155 = 1;
            l_U157 = 0;
            l_U158 = 0;
            sub_601( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_1027()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_1049() );
    }
    return 0;
}

void sub_1049()
{
    return GET_PLAYER_ID();
}

int sub_1100()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_1027() )))
        {
            SET_PED_FORCED_TO_WALK( sub_1027(), 0 );
            SET_PLAYER_FORCED_AIM( sub_1049(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1049(), 1 );
            if ((IS_PED_VISIBLE( sub_1027() )) == 0)
            {
                SET_PED_VISIBLE( sub_1027(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1595(boolean bParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_1027() )))
    {
        if (NOT (IS_PED_IN_COMBAT( sub_1027() )))
        {
            if ((NOT l_U86._fU16) AND (NOT l_U86._fU20))
            {
                sub_601( "AT", "Starting painkiller dialogue timer.", 0 );
                sub_1721( ref l_U86, 3500, 1, 0 );
                sub_1857( ref l_U86 );
            }
            if ((l_U86._fU16) AND (sub_1973()))
            {
                sub_601( "AT", "Dialogue detected. Restarting painkiller dialogue timer.", 0 );
                sub_1721( ref l_U86, 3500, 1, 0 );
                sub_1857( ref l_U86 );
            }
            iVar3 = GET_PAYNEKILLER_AMT();
            if (iVar3 > l_U95)
            {
                if (NOT sub_1973())
                {
                    if ((l_U86._fU16) || (sub_2176( ref l_U86 )))
                    {
                        if (g_U4303 < 6)
                        {
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 500 )) < 300)
                            {
                                sub_601( "GA", "Playing painkiller monologue.", 0 );
                                sub_2429( ref l_U96 );
                                sub_2511( 0, sub_1027(), "MAX", ref l_U96, 2, 0 );
                                sub_2511( 1, sub_1027(), "MAX", ref l_U96, 2, 0 );
                                sub_2753( "SPOL_PLFNDPL", ref l_U96, 8, 1 );
                                g_U4303++;
                            }
                            else
                            {
                                sub_601( "GA", "Not playing painkiller speech, failed random chance test.", 0 );
                            }
                        }
                        else
                        {
                            sub_601( "GA", "Not Playing painkiller speech, already played all 6 lines.", 0 );
                        }
                    }
                    else
                    {
                        sub_601( "GA", "Not playing painkiller speech, not long enough since last dialogue.", 0 );
                    }
                }
                else
                {
                    sub_601( "GA", "Not playing painkiller speech, another speech is currently playing.", 0 );
                }
            }
            l_U95 = iVar3;
        }
        if (sub_3883( l_U96 ))
        {
            if (NOT HAS_CUTSCENE_FINISHED())
            {
                sub_601( "GA", "Killing painkiller speech for cutscene playing.", 0 );
                sub_4123( ref l_U96, 0 );
            }
        }
    }
    if (bParam0)
    {
        sub_1721( ref l_U86, 20000, 1, 0 );
        sub_1857( ref l_U86 );
    }
    return;
}

void sub_1721(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1857(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_1973()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

int sub_2176(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2429(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_2511(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_2753(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_2777( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_2777(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_2832( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_2832(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_2867( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_3361( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_2867(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_3361(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_3883(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_3896( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_3896(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_4123(int iParam0, unknown uParam1)
{
    if (NOT (sub_3896( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_4253()
{
    return g_U648;
}

int sub_4293(int iParam0)
{
    iParam0 = 1;
    switch (l_U75)
    {
        case 0:
        if (NOT (sub_4354( ref l_U77 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1027() )))
            {
                l_U76 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1721( ref l_U77, l_U76, 1, 1 );
            sub_1857( ref l_U77 );
        }
        if (sub_2176( ref l_U77 ))
        {
            sub_601( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_1027() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_1049() )))
            {
                SET_PLAYER_CONTROL( sub_1049(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U75 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U75 = 2;
            }
            else
            {
                l_U75 = 3;
            }
        }
        break;
        case 2:
        sub_601( "NS", "Player will QUIT", 0 );
        sub_4813();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_601( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4813();
        return 1;
        break;
    }
    return 0;
}

int sub_4354(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4813()
{
    sub_601( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4863( ref l_U77 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_1049() )))
    {
        SET_PLAYER_CONTROL( sub_1049(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U74 = 0;
    l_U74 = l_U74;
    l_U75 = 0;
    return;
}

void sub_4863(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5515(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5623(boolean bParam0)
{
    sub_601( "GA", "P_CLEANUP_AT start", 0 );
    sub_5670( g_U4375 );
    sub_5670( g_U4376 );
    sub_5670( g_U4377 );
    sub_5731( 0 );
    sub_5731( 1 );
    sub_5731( 2 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_07_PP_CONCAT" )) || (CUTSCENE_IS_LOADED( "MID_07_PP_CONCAT" )))
    {
        sub_601( "AT", "Purging loaded cutscene.", 0 );
        CLEAR_NAMED_CUTSCENE( "MID_07_PP_CONCAT" );
    }
    sub_5921( l_U253, 0 );
    sub_6084( ref l_U253 );
    sub_5921( l_U254, 0 );
    sub_6084( ref l_U254 );
    sub_6287( ref l_U297, 0 );
    sub_6287( ref l_U425, 0 );
    CAMERA_ENABLE_FIRST_TIME_AIM_LOCK( 1 );
    ISEQ_TERMINATE( 1483309711 );
    sub_7206( 1483309711, ref g_U2662 );
    ISEQ_TERMINATE( -1006030447 );
    sub_7206( -1006030447, ref g_U2662 );
    ISEQ_TERMINATE( -666740221 );
    sub_7206( -666740221, ref g_U2662 );
    ISEQ_TERMINATE( 649262815 );
    sub_7206( 649262815, ref g_U2662 );
    ISEQ_TERMINATE( -1261661416 );
    sub_7206( -1261661416, ref g_U2662 );
    if (bParam0)
    {
        sub_7689( ref g_U4308 );
        sub_7689( ref g_U4321 );
        sub_7689( ref g_U4315 );
        sub_7689( ref g_U4311 );
    }
    sub_7689( ref l_U601 );
    sub_7689( ref l_U700 );
    sub_5670( g_U4330 );
    sub_5670( g_U4332 );
    sub_5670( g_U4331 );
    sub_5670( g_U4333 );
    sub_7905( ref g_U4325 );
    sub_7938( g_U685._fU0 );
    sub_7938( g_U775._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U255._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U383._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U276._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U404._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U190._fU0 );
    sub_601( "GA", "P_CLEANUP_AT end", 0 );
    return;
}

void sub_5670(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_5731(unknown uParam0)
{
    if (IS_SCRIPT_MOVIE_PLAYING( uParam0 ))
    {
        STOP_MOVIE( uParam0 );
    }
    RELEASE_MOVIE( uParam0 );
    return;
}

void sub_5921(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_601( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_601( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_6084(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_601( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_601( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_6287(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_6331( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_6331( iParam0, 0 );
        sub_6531( iParam0, 0 );
        if ((IS_PED_DEAD( sub_1027() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_1027() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_1027(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_6331(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_6531(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_6682( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_6682(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_6743( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_6743( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_6743(int iParam0)
{
    if (((IS_PED_DEAD( sub_1027() )) == 0) AND ((IS_PLAYER_DEAD( sub_1049() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_1027() )) == 1) || (((IS_PED_GETTING_UP( sub_1027() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_1027() )) == 1) || (((IS_PED_IN_COVER( sub_1027() )) == 1) || (((IS_PED_DUCKING( sub_1027() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_1027() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_7206(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_7318( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_7318(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_7689(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_7723( (uParam0^)[I] );
    }
    return;
}

void sub_7723(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_7905(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_7938( (uParam0^)[I] );
    }
    return;
}

void sub_7938(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_8128(unknown uParam0)
{
    char[64] cVar3;
    unknown uVar19;

    if (NOT (IS_PED_DEAD( sub_1027() )))
    {
        sub_8180( sub_1027(), g_U2953[uParam0], g_U3083[uParam0] );
        FREEZE_PED_POSITION( sub_1027(), 1 );
        if (NOT (IS_STRING_NULL( ref g_U1091[uParam0]._fU0 )))
        {
            StrCopy( ref cVar3, "Loading room: ", 64 );
            ConcatString(ref cVar3, ref g_U1091[uParam0]._fU0, 64);
            uVar19 = GET_INTERIOR_FROM_NAME( ref g_U1091[uParam0]._fU64, 0 );
            SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, GET_HASH_KEY( ref g_U1091[uParam0]._fU0 ) );
        }
        FREEZE_PED_POSITION( sub_1027(), 0 );
    }
    return;
}

void sub_8180(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_8509(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_601( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_8693( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_9770( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_10062( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_10422( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_10062( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_10422( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_10062( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_10422( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_10707( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_10422( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_10707( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_10422( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_11200( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_11361( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_1027(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_601( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_8693(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_8725( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_8725(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_9770(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_10062(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_10378( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_10378(unknown uParam0)
{
    return;
}

void sub_10422(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_10707(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_10378( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_11200(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_11361(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_8725( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_11433( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_11433(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_12731()
{
    int iVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;

    iVar2 = l_U155;
    switch (l_U155)
    {
        case 0: break;
        case 1:
        sub_601( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_12911();
        sub_13375();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U155 = 2;
        sub_601( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_601( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        g_U822[7] = 0;
        sub_15496();
        sub_20030();
        l_U155 = 3;
        sub_601( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_22993( ref g_U2662 )) AND ((sub_22866( ref g_U2741 )) AND ((sub_22739( ref g_U2889 )) AND ((sub_22618( ref g_U2613 )) AND (sub_22498( ref g_U2468 ))))))
        {
            if ((NOT l_U106._fU0) AND (g_U820 == 7))
            {
                l_U155 = 4;
                sub_601( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U155 = 6;
                sub_601( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 4:
        sub_601( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        AUD_SET_IS_POWER_ON( 1 );
        sub_23409();
        g_U842[7] = 1;
        l_U157 = 0;
        if (NOT (sub_25393( ref l_U106 )))
        {
            sub_10707( sub_1027(), -862236369, 200, 0, 0 );
            sub_10062( sub_1027(), -862236369, 0, 200, 0 );
            l_U155 = 5;
            sub_601( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U155 = 6;
            sub_601( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_1027() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_1027(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_1027(), 0, 0 ) )))
            {
                g_U821 = 7;
                sub_25882( ref l_U106, g_U821, sub_1027(), g_U2953[7], g_U3083[7], g_U3127[7], g_U3171[7], 1 );
                l_U155 = 6;
                sub_601( "GA", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
            }
        }
        break;
        case 6:
        if (l_U156)
        {
            g_U822[7] = 1;
        }
        if (g_U842[7])
        {
            if (l_U157)
            {
                if (CUTSCENE_IS_LOADED( "MID_07_PP_CONCAT" ))
                {
                    l_U154 = 1;
                    l_U770 = 1;
                    l_U155 = 7;
                    sub_601( "GA", "eCheckpointState = CP_HANDLE_MID_07_PP", 0 );
                }
                else
                {
                    sub_601( "GA", "Waiting for cutscene MID_07_PP_CONCAT to load.", 0 );
                }
            }
            else if (NOT l_U154)
            {
                sub_29786();
                l_U154 = 1;
            }
            l_U155 = 7;
            sub_601( "GA", "eCheckpointState = CP_HANDLE_MID_07_PP", 0 );;
        }
        break;
        case 7:
        if (l_U156)
        {
            if (g_U821 == 6)
            {
                sub_30077();
            }
            sub_30301();
            sub_31553( 0 );
            sub_32343();
            SET_WEATHER_TYPE_NOW_PERSIST( "RAIN" );
            sub_39629( ref l_U159, "MID_07_PP_CONCAT", 32948, 32967, 33948, 35023, 35042, 35809, 250, 0 );
            sub_40048( ref l_U159, ref g_U1091[7]._fU64, ref g_U1091[7]._fU0 );
            if (l_U157)
            {
                l_U159._fU4 = 2;
            }
            else
            {
                l_U159._fU4 = 7;
                sub_601( "AT", "Force music PRECINCT_FINAL mood PRECINCT_01_1", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1", "", 0, -1, -1, -1082130432, 0 );
            }
            if (IS_DEATH_PANEL_WIPE_ALLOWED())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
        }
        if (sub_40272( ref l_U159 ))
        {
            if (g_U821 != 7)
            {
                g_U821 = 7;
                sub_25882( ref l_U106, g_U821, sub_1027(), g_U2953[7], g_U3083[7], g_U3127[7], g_U3171[7], 1 );
            }
            l_U155 = 8;
            sub_601( "GA", "eCheckpointState = CP_GAMEPLAY_ATRIUM_COMBAT", 0 );
        }
        break;
        case 8:
        sub_42516( ref l_U601, -1.00000000, 0, 1 );
        sub_42516( ref l_U700, -1.00000000, 0, 1 );
        sub_42680();
        if (sub_2176( ref l_U621 ))
        {
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( l_U609, l_U612, 0, 1, -1986694060, 0 );
        }
        if (sub_2176( ref l_U631 ))
        {
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS( l_U615, l_U618, 0, 1, -1986694060, 0 );
            if (NOT (IS_PED_DEAD( l_U601[0] )))
            {
                PLAY_PED_AMBIENT_SPEECH( l_U601[0], "THROWN_WEAPON_TAUNT", 1, 1, 2, 0, 30000 );
            }
        }
        if ((l_U546 == 4) AND (NOT l_U607))
        {
            if (sub_2176( ref l_U641 ))
            {
                sub_33820( ref uVar3, 924526578, 7.51157000, 16.02857000, 1.12802000, 0.00000000, 0.00000000, 0.00000000 );
                sub_43465( ref uVar3, 0, 1, 0.10000000 );
                sub_43465( ref uVar3, 0, 0, 0.60000000 );
            }
            if (sub_43711( ref l_U601, sub_1027(), 1, 1, 1, 1, 1 ))
            {
                l_U607 = 1;
            }
            if ((sub_44174()) AND (NOT l_U607))
            {
                TASK_COMBAT_PED( l_U601[1], sub_1027() );
                l_U607 = 1;
            }
        }
        if (NOT l_U715)
        {
            if (sub_43711( ref l_U601, sub_1027(), 1, 1, 1, 1, 1 ))
            {
                sub_601( "MSWW", "ENEMIES ARE AWARE OF PLAYER", "###" );
                sub_1857( ref l_U706 );
                l_U715 = 1;
            }
        }
        if (sub_2176( ref l_U706 ))
        {
            l_U658 = 1;
            sub_37866( g_U4333, g_U4332, 1, 0 );
        }
        if ((l_U658 != 4) AND (l_U658 != 0))
        {
            sub_44601();
        }
        if (NOT l_U704)
        {
            if (l_U658 == 4)
            {
                sub_45305();
                l_U704 = 1;
            }
        }
        if (l_U253 != -1)
        {
            if (NOT (sub_46021( g_U4331, "po_door", "P_PO_Lift_Anim" )))
            {
                sub_601( "GA", "Stopping Elevator door R sound", 0 );
                sub_5921( l_U253, 0 );
                sub_6084( ref l_U253 );
            }
        }
        if (l_U254 != -1)
        {
            if (NOT (sub_46021( g_U4333, "po_door", "P_PO_Lift_Anim" )))
            {
                sub_601( "GA", "Stopping Elevator door L sound", 0 );
                sub_5921( l_U254, 0 );
                sub_6084( ref l_U254 );
            }
        }
        if ((l_U606) AND ((l_U704) AND (NOT l_U545)))
        {
            if (((sub_45436( ref l_U601 )) + (sub_45436( ref l_U700 ))) == 1)
            {
                sub_601( "GA", "Assigning bullet cam to elevator enemies.", 0 );
                sub_46375( ref l_U601 );
                sub_46375( ref l_U700 );
                l_U545 = 1;
            }
        }
        if ((l_U546 == 4) AND (l_U658 == 4))
        {
            if (NOT l_U720)
            {
                if (((sub_45436( ref l_U601 )) + (sub_45436( ref l_U700 ))) <= 3)
                {
                    sub_601( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_3", 0 );
                    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_3", "", 0, 5000, 8000, -1082130432, 0 );
                    l_U720 = 1;
                }
            }
        }
        if ((l_U606) AND (l_U704))
        {
            if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND (((sub_45436( ref l_U601 )) + (sub_45436( ref l_U700 ))) == 0))
            {
                if (NOT g_U862[8]._fU36)
                {
                    g_U862[8]._fU36 = 1;
                }
                sub_601( "AT", "PRECINCT_FINAL, PRECINCT_01_1, , 0, -1, 6000", 0 );
                AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1", "", 0, -1, 6000, -1082130432, 0 );
                l_U155 = 9;
                sub_601( "GA", "eCheckpointState = CP_GAMEPLAY_ATRIUM_ELEVATOR_BUTTON", 0 );
            }
        }
        break;
        case 9:
        if (l_U156)
        {
            sub_6287( ref l_U297, 1 );
            sub_6287( ref l_U425, 1 );
            sub_1857( ref l_U750 );
        }
        sub_42680();
        sub_1595( 0 );
        if ((sub_47032()) AND (NOT sub_1973()))
        {
            if (sub_2176( ref l_U750 ))
            {
                sub_35669( "SPOL_PLLSTAT", ref l_U740 );
                sub_1857( ref l_U731 );
            }
            if (NOT l_U759)
            {
                if (IS_SPHERE_VISIBLE( 19.32000000, 3.96000000, 1.32000000, 5.00000000, 0 ))
                {
                    if (sub_2176( ref l_U731 ))
                    {
                        sub_35669( "SPOL_DWDATR", ref l_U721 );
                        l_U759 = 1;
                    }
                }
            }
        }
        if ((sub_47221( ref l_U297 )) || (sub_47221( ref l_U425 )))
        {
            if (NOT l_U233._fU16)
            {
                sub_601( "GA", "Haven't started to disipate the smoke in the atrium.  Starting to disipate for the cutscene.", 0 );
                SET_WEATHER_TYPE_PERSIST( "RAIN" );
                SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
            }
            sub_7689( ref g_U4311 );
            sub_35110( -1674641852, ref g_U2468 );
            g_U842[8] = 1;
            l_U155 = 10;
            sub_601( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 10:
        if (g_U821 == 8)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U155 = 0;
            sub_601( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U155 != iVar2)
    {
        l_U156 = 1;
    }
    else
    {
        l_U156 = 0;
    }
    return;
}

void sub_12911()
{
    int I;

    sub_601( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U156 = 1;
    sub_1721( ref l_U222, l_U221, 1, 0 );
    sub_1721( ref l_U233, l_U232 + (FLOOR( l_U231 * 1000 )), 1, 0 );
    sub_1721( ref l_U243, (FLOOR( l_U242 * 1000 )) - 20000, 1, 0 );
    l_U252 = 0;
    l_U544 = -1;
    l_U545 = 0;
    l_U546 = 0;
    l_U547 = 0;
    l_U606 = 0;
    l_U607 = 0;
    sub_1721( ref l_U621, l_U630, 1, 0 );
    sub_1721( ref l_U631, l_U640, 1, 0 );
    sub_1721( ref l_U641, l_U650, 1, 0 );
    for ( I = 0; I <= 3; I++ )
    {
        l_U653[I] = 1;
    }
    sub_1721( ref l_U706, l_U705, 1, 0 );
    l_U658 = 0;
    l_U659 = 0;
    l_U704 = 0;
    for ( I = 0; I <= 2; I++ )
    {
        l_U716[I] = 1;
    }
    l_U715 = 0;
    sub_1721( ref l_U731, 26000, 1, 0 );
    sub_1721( ref l_U750, 2000, 1, 0 );
    l_U759 = 0;
    l_U213 = 0;
    l_U720 = 0;
    l_U186 = 0;
    l_U187 = 0;
    l_U188 = 0;
    l_U189 = 0;
    l_U770 = 0;
    sub_601( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_13375()
{
    sub_601( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_13459( ref l_U511[0], 11.69000000, 14.23000000, 0.02000000, 180.00000000, -953123596, 7, 3, 2, 0, 0 );
    sub_13459( ref l_U511[1], 10.20000000, 17.63000000, 0.02000000, 40.00000000, -464802890, 7, 3, 2, 0, 0 );
    sub_13459( ref l_U548[0], 16.98500000, 2.60000000, 0.05000000, 0.00000000, 1295943071, 7, 3, 2, 0, 0 );
    sub_13459( ref l_U548[1], 16.98500000, 1.60000000, 0.05000000, 0.00000000, 966362228, 7, 3, 2, 0, 0 );
    sub_13459( ref l_U548[2], 17.95000000, 2.55000000, 0.05000000, 25.00000000, -1890340784, 7, 3, 2, 0, 0 );
    sub_13459( ref l_U548[3], 17.95000000, 1.50000000, 0.05000000, 0.00000000, 1344138916, 7, 3, 2, 0, 0 );
    sub_13459( ref l_U660[0], 20.06000000, 2.56000000, 0.05000000, 0.00000000, -1800905367, 7, 3, 2, 0, 0 );
    sub_13459( ref l_U660[1], 21.33000000, 1.08000000, 0.01000000, 0.00000000, 2111214499, 7, 3, 2, 0, 0 );
    sub_13459( ref l_U660[2], 21.02000000, 1.61000000, 0.05000000, 0.00000000, -469353009, 7, 3, 2, 0, 0 );
    sub_13980( ref l_U190, "tb_AT_M7_DeadBodiesInShot", 10.98000000, 26.10000000, 0.01000000, 6.00000000, 5.40000000, 3.04000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13980( ref l_U255, "tb_AT_ElevatorR", 17.48000000, 1.05000000, -0.48000000, 3.57000000, 4.80000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13980( ref l_U383, "tb_AT_ElevatorL", 21.15000000, 1.06000000, -0.48000000, 3.57000000, 4.80000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13980( ref l_U276, "tb_AT_ElevatorRFrontButton", 17.48000000, 1.05000000, -0.48000000, 3.50000000, 4.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13980( ref l_U404, "tb_AT_ElevatorLFrontButton", 21.15000000, 1.06000000, -0.48000000, 3.50000000, 4.50000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14413( ref l_U297, 1, 0.00000000, 0.00000000, 0.00000000, l_U276, l_U255, 0, 0 );
    sub_15088( ref l_U297, 30, "POI_POL_ELEV" );
    sub_14413( ref l_U425, 1, 0.00000000, 0.00000000, 0.00000000, l_U404, l_U383, 0, 0 );
    sub_15088( ref l_U425, 30, "POI_POL_ELEV" );
    sub_601( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_13459(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_13980(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14413(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
    sub_14430( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
    sub_14796( iParam0 );
    return;
}

void sub_14430(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_14796(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_14875( iParam0 );
    return;
}

void sub_14875(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_6331( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_6331( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_6331( iParam0, 1 );
            }
            else
            {
                sub_6331( iParam0, 0 );
            };;;
        }
        else
        {
            sub_6331( iParam0, 0 );
        }
    }
    else
    {
        sub_6331( iParam0, 0 );
    }
    return;
}

void sub_15088(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_15119( iParam0 );
    return;
}

void sub_15119(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_15496()
{
    sub_601( "GA", "P_REQUEST_AT_PERSISTENT_ASSETS start", 0 );
    sub_15564( ref l_U142, ref g_U2468 );
    sub_16972( ref g_U3553, ref g_U2741 );
    sub_16972( "LEVEL_S_POLICE_CP_06", ref g_U2741 );
    sub_17987( ref g_U3521, ref g_U2889 );
    sub_18982( ref l_U149, ref g_U2613 );
    sub_601( "GA", "P_REQUEST_AT_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_15564(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_15599( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_15599(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_15634( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_15765( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_15634(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_15765( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_15765( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_15765( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16413( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_15765( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_15765( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_15765(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15785( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_15785(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_16413(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_16972(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_16993( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_17130( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_16993(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_17130( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_17130( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_17130( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_16413( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_17130( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_17130( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_17130(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15785( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_17987(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18008( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_18146( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18008(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_18146( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_18146( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_18146( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_16413( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_18146( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_18146( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18146(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15785( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18982(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_19017( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_19017(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19038( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_19170( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19038(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_19170( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_19170( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_19170( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_16413( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_19170( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_19170( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19170(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15785( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20030()
{
    sub_601( "GA", "P_REQUEST_AT_NONPERSISTENT_ASSETS start", 0 );
    sub_20102( 1483309711, ref g_U2662 );
    sub_20102( -1006030447, ref g_U2662 );
    sub_20102( -666740221, ref g_U2662 );
    sub_20102( 649262815, ref g_U2662 );
    sub_20102( -1261661416, ref g_U2662 );
    if ((l_U157) AND (g_U820 != 7))
    {
        sub_22118( "MID_07_PP_CONCAT", 0 );
    }
    sub_601( "GA", "P_REQUEST_AT_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_20102(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_20137( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_20289( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_20137(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_20289( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_20289( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_20289( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_20289( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16413( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_16413( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_20289( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_20289( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20289(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_15785( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_22118(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

int sub_22498(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22618(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22739(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22866(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_22993(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

void sub_23409()
{
    int I;

    sub_601( "GA", "P_AT_CREATE_GYM_DEAD_BODIES start", 0 );
    for ( I = 0; I <= 1; I++ )
    {
        g_U4308[I] = sub_23486( ref l_U511[I] );
        if (NOT (IS_PED_DEAD( g_U4308[I] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( g_U4308[I], ref g_U3357 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( g_U4308[I], 1 );
        }
    }
    sub_24385( g_U4308[0], 3 );
    sub_24385( g_U4308[1], 9 );
    sub_601( "GA", "P_AT_CREATE_GYM_DEAD_BODIES end", 0 );
    return;
}

void sub_23486(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_23656( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_24125( iParam0->_fU40 );
    sub_24205( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_23656(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_10378( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_24125(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_24205(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_24385(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_10378( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

int sub_25393(unknown uParam0)
{
    sub_601( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_8509( uParam0, sub_1027() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_25882(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_601( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_601( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_11361( iParam1 );
        sub_26141( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_26592( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_26592( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_26592( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_26592( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_26592( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_26824( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_28382( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_601( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_26141(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_8725( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_601( "TEH", "Ending context", 0 );
        sub_601( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_26592(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_26824(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_28382(int iParam0)
{
    sub_10378( "CHECKPOINT DATA" );
    sub_28421( iParam0->_fU4 );
    sub_28444( iParam0->_fU16 );
    sub_28444( iParam0->_fU20 );
    sub_28444( iParam0->_fU24 );
    sub_28487( iParam0->_fU28 );
    sub_28487( iParam0->_fU56 );
    sub_28487( iParam0->_fU60 );
    sub_28487( iParam0->_fU64 );
    sub_28487( iParam0->_fU68 );
    sub_28487( iParam0->_fU72 );
    sub_28487( iParam0->_fU76 );
    sub_28487( iParam0->_fU80 );
    sub_28487( iParam0->_fU84 );
    sub_28487( iParam0->_fU88 );
    sub_28487( iParam0->_fU92 );
    sub_28444( iParam0->_fU32 );
    sub_28487( iParam0->_fU36 );
    sub_28487( iParam0->_fU40 );
    sub_28487( iParam0->_fU44 );
    sub_28444( iParam0->_fU136 );
    sub_28692( iParam0->_fU140 );
    sub_28487( iParam0->_fU52 );
    sub_10378( "---nRightHolsterAttachmentEnabled: " );
    sub_28487( iParam0->_fU96 );
    sub_10378( "---nRightHolsterAttachmentToggled: " );
    sub_28487( iParam0->_fU100 );
    sub_10378( "---nLeftHolsterAttachmentEnabled: " );
    sub_28487( iParam0->_fU104 );
    sub_10378( "---nLeftHolsterAttachmentToggled: " );
    sub_28487( iParam0->_fU108 );
    sub_10378( "---nRifleHolsterAttachmentEnabled: " );
    sub_28487( iParam0->_fU112 );
    sub_10378( "---nRifleHolsterAttachmentToggled: " );
    sub_28487( iParam0->_fU116 );
    sub_10378( "---nRightHandAttachmentEnabled: " );
    sub_28487( iParam0->_fU120 );
    sub_10378( "---nRightHandAttachmentToggled: " );
    sub_28487( iParam0->_fU124 );
    sub_10378( "---nLeftHandAttachmentEnabled: " );
    sub_28487( iParam0->_fU128 );
    sub_10378( "---nLeftHandAttachmentToggled: " );
    sub_28487( iParam0->_fU132 );
    sub_28487( l_U1 );
    sub_28487( 144 );
    return;
}

void sub_28421(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_28444(unknown uParam0)
{
    return;
}

void sub_28487(unknown uParam0)
{
    return;
}

void sub_28692(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_29786()
{
    sub_601( "CMT", "Removing pre-riot interiors...", 0 );
    SET_HELPER_ENABLED( "cs_13_01_B", 0, 0 );
    SET_HELPER_ENABLED( "cs_13_01_A", 0, 0 );
    SET_HELPER_ENABLED( "cs_13_01_C", 0, 0 );
    SET_HELPER_ENABLED( "MILO_cell_preriot_interior", 0, 1 );
    SET_HELPER_ENABLED( "exchange_pre_interior", 0, 1 );
    return;
}

void sub_30077()
{
    int I;

    sub_601( "GA", "P_AT_DETECT_PAYNEKILLERS_IN_SIDE_ROOM start", 0 );
    for ( I = 0; I < g_U4325; I++ )
    {
        if (DOES_PLACEMENT_EXIST( g_U4325[I] ))
        {
            if (HAS_PLACEMENT_BEEN_COLLECTED( g_U4325[I] ))
            {
                l_U214[I] = 1;
            }
        }
        else
        {
            l_U214[I] = 1;
        }
    }
    sub_601( "GA", "P_AT_DETECT_PAYNEKILLERS_IN_SIDE_ROOM end", 0 );
    return;
}

void sub_30301()
{
    sub_601( "GA", "P_AT_CREATE_PLACEMENTS start", 0 );
    if ((NOT (DOES_PLACEMENT_EXIST( g_U4325[0] ))) AND (NOT l_U214[0]))
    {
        g_U4325[0] = sub_30427( -4072149, 26.59000000, 11.88000000, 0.80000000, 0.00000000, 0.00000000, 0.80000000, 0, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4325[0], ref g_U3357 );
    }
    if ((NOT (DOES_PLACEMENT_EXIST( g_U4325[3] ))) AND (NOT l_U214[3]))
    {
        g_U4325[3] = sub_30427( -4072149, 13.85000000, 24.17000000, 1.02000000, 0.00000000, 0.00000000, 0.00000000, 1, 0, 0, 1119092736 );
        ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( g_U4325[3], "f2_lobby_Office02" );
    }
    sub_30664();
    sub_31366();
    sub_601( "GA", "P_AT_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_30427(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_30664()
{
    sub_601( "CO", "P_CREATE_S_POL_GG_G6_02", 0 );
    sub_30772( ref g_U775, g_U818, 1497945839, -1420691957, 28.68000000, 13.98000000, 0.01000000, 1.50000000, 0.00000000, 10.00000000, "1f2_lobby" );
    sub_30901( ref g_U775 );
    return;
}

void sub_30772(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        iParam0->_fU4 = uParam1;
        iParam0->_fU8 = uParam2;
        iParam0->_fU12 = uParam3;
        iParam0->_fU16 = {uParam4};
        iParam0->_fU28 = {uParam7};
        StrCopy( ref iParam0->_fU40, uParam10, 32 );
    }
    else
    {
        sub_601( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

void sub_30901(int iParam0)
{
    sub_601( "CO", "P_CreateCollectible", 0 );
    if (NOT IS_ARCADE_MODE_ACTIVE())
    {
        if ((sub_30962( iParam0->_fU12 )) == 1)
        {
            sub_601( "CO", "HAS BEEN COLLECTED.", 0 );
        }
        else
        {
            sub_601( "CO", "has never been collected.", 0 );
        }
        if ((sub_30962( iParam0->_fU12 )) == 0)
        {
            sub_7938( iParam0->_fU0 );
            iParam0->_fU0 = sub_30427( iParam0->_fU8, iParam0->_fU16, iParam0->_fU28, 1, 0, 0, 1119092736 );
            if (NOT (IS_STRING_NULL( iParam0 + 40 )))
            {
                if ((DOES_PLACEMENT_EXIST( iParam0->_fU0 )) == 1)
                {
                    sub_601( "CO", "Added collectible to interior", 0 );
                    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( iParam0->_fU0, iParam0 + 40 );
                }
            }
        }
    }
    else
    {
        sub_601( "CO", "NO GOLDEN GUNS FOR ARCADE", 0 );
    }
    return;
}

int sub_30962(unknown uParam0)
{
    unknown uVar3;
    float fVar4;

    if (IS_COLLECTABLE_ENABLED() == 0)
    {
        return 1;
    }
    uVar3 = uParam0;
    fVar4 = STAT_HASH_GET_FLOAT( uVar3 );
    if (ARE_SP_STATS_LOADED() == 1)
    {
        if ((STAT_HASH_EXISTS( uVar3 )) == 1)
        {
            if (fVar4 > 0.00000000)
            {
                return 1;
            }
        }
    }
    return 0;
}

void sub_31366()
{
    sub_601( "CO", "P_CREATE_S_POL_GG_MP_03", 0 );
    sub_30772( ref g_U685, g_U813, 672837924, -598011407, 5.65000000, 22.73000000, 0.80000000, 1.50000000, 0.00000000, 1.00000000, "f2_lobby_Office01" );
    sub_30901( ref g_U685 );
    return;
}

void sub_31553(boolean bParam0)
{
    sub_601( "GA", "P_CREATE_LOBBY_ELEVATOR_DOORS start", 0 );
    sub_5670( g_U4330 );
    g_U4330 = sub_31651( g_U3227, g_U4363, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4330 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4330, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4330, ref g_U3357 );
        if (bParam0)
        {
            SET_OBJECT_AS_PATH_OBSTACLE( g_U4330 );
        }
    }
    sub_5670( g_U4332 );
    g_U4332 = sub_31651( g_U3227, g_U4366, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4332 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4332, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4332, ref g_U3357 );
        if (bParam0)
        {
            SET_OBJECT_AS_PATH_OBSTACLE( g_U4332 );
        }
    }
    sub_5670( g_U4331 );
    g_U4331 = sub_31651( g_U3227, g_U4369, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4331 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4331, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4331, ref g_U3357 );
        if (bParam0)
        {
            SET_OBJECT_AS_PATH_OBSTACLE( g_U4331 );
        }
    }
    sub_5670( g_U4333 );
    g_U4333 = sub_31651( g_U3227, g_U4372, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if ((DOES_OBJECT_EXIST( g_U4333 )) == 1)
    {
        FREEZE_OBJECT_POSITION( g_U4333, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4333, ref g_U3357 );
        if (bParam0)
        {
            SET_OBJECT_AS_PATH_OBSTACLE( g_U4333 );
        }
    }
    sub_601( "GA", "P_CREATE_LOBBY_ELEVATOR_DOORS end", 0 );
    return;
}

void sub_31651(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_23656( uParam0, 1 );
    }
    Result = CREATE_OBJECT( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_32343()
{
    sub_601( "AT", "Making lobby objects.", 0 );
    g_U4375 = sub_32426( -1257962541, 16.45100000, 25.82800000, 0.01300000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4375 ))
    {
        FREEZE_OBJECT_POSITION( g_U4375, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4375, "f2_lobby" );
    }
    g_U4376 = sub_32426( -1514674887, 16.45100000, 25.82800000, 0.01300000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4376 ))
    {
        FREEZE_OBJECT_POSITION( g_U4376, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4376, "f2_lobby" );
    }
    g_U4377 = sub_32426( 743953242, 16.49900000, 25.71500000, 0.04900000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( g_U4377 ))
    {
        FREEZE_OBJECT_POSITION( g_U4377, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( g_U4377, "f2_lobby" );
    }
    return;
}

void sub_32426(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_23656( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

int sub_32948()
{
    return 1;
}

void sub_32967()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;

    sub_601( "GA", "P_AT_MID_07_CutsceneRegistration start", 0 );
    CUTSCENE_SET_OVERLAY_TYPE( 2 );
    if (NOT (IS_PED_DEAD( sub_1027() )))
    {
        REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( sub_33055(), "W_PI_Clt1911_Aa_H", 0 );
        CUTSCENE_REGISTER_PED_TELEPORT( sub_1027(), g_U2953[7], g_U3083[7] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "floor2", "GrabSpline84", 0, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U3127[7], g_U3171[7] );
        CUTSCENE_REGISTER_ISEQ( 1483309711 );
        ISEQ_REGISTER_ENTITY( 1483309711, "Max", sub_1027(), 0 );
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_PP_Riot_C", 498238422 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_PP_Riot_C^1", -1524944656 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_PP_Riot_C^2", -315541446 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_C", 1295943071 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_C^1", 966362228 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_C^2", -1890340784 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "P_UFE_Sold_C^3", 1344138916 );
    sub_33820( ref uVar3, 924526578, 13.07538000, -5.76907000, 1.12802000, 0.00000000, 0.00000000, 0.00000000 );
    REGISTER_HIDE_ENTITY_AT_POSITION( uVar3._fU0, 13.07538000, -5.76907000, 1.12802000 );
    sub_601( "GA", "P_AT_MID_07_CutsceneRegistration end", 0 );
    return;
}

int sub_33055()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1027() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_1027(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_33118( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1027(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_1027(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_1027(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

int sub_33118(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

void sub_33820(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_33948()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    int I;

    if (l_U159._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if ((NOT (IS_PLAYER_DEAD( sub_1049() ))) AND (NOT (IS_PED_DEAD( sub_1027() ))))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_1049(), 1 );
            SET_PED_FORCED_TO_WALK( sub_1027(), 0 );
        }
        if (NOT IS_BULLET_CAMERA_TO_GAMEPLAY_ALLOWED())
        {
            ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
        }
        sub_34073( 1 );
        if (NOT (IS_PED_DEAD( sub_1027() )))
        {
            uVar2 = GET_WEAPON_FROM_HAND( sub_1027(), 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar2 ))
            {
                if (sub_33118( uVar2 ))
                {
                    uVar3 = GET_WEAPON_FROM_HAND( sub_1027(), 1, 0 );
                    if (GET_DOES_WEAPON_EXIST( uVar3 ))
                    {
                        SET_WEAPON_VISIBLE( uVar3, 0 );
                    }
                    uVar4 = GET_WEAPON_FROM_HOLSTER( sub_1027(), 2 );
                    if (GET_DOES_WEAPON_EXIST( uVar4 ))
                    {
                        SET_WEAPON_VISIBLE( uVar4, 0 );
                    }
                }
                else
                {
                    SET_WEAPON_VISIBLE( uVar2, 0 );
                }
            }
        }
        for ( I = 0; I <= 1; I++ )
        {
            if (DOES_PED_EXIST( g_U4308[I] ))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U4308[I], ref l_U190._fU0 ))
                {
                    sub_7723( g_U4308[I] );
                }
            }
        }
        for ( I = 0; I <= 4; I++ )
        {
            if (DOES_PED_EXIST( g_U4315[I] ))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U4315[I], ref l_U190._fU0 ))
                {
                    sub_7723( g_U4315[I] );
                }
            }
        }
        for ( I = 0; I <= 2; I++ )
        {
            if (DOES_PED_EXIST( g_U4321[I] ))
            {
                if (IS_PED_IN_GAMEPLAY_HELPER_BOX( g_U4321[I], ref l_U190._fU0 ))
                {
                    sub_7723( g_U4321[I] );
                }
            }
        }
        sub_601( "GA", "Force music PRECINCT_FINAL mood PRECINCT_01_1_3, fade in over 2 seconds", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_3", "", 0, 10000, -1, -1082130432, 0 );
    }
    if (NOT l_U186)
    {
        if (GET_CUTSCENE_TIME_MS() >= 8618)
        {
            sub_601( "MSWW", "Playing Movie 0", "###" );
            PLAY_MOVIE( 0, 0 );
            l_U186 = 1;
        }
    }
    if (NOT l_U187)
    {
        if (GET_CUTSCENE_TIME_MS() >= 20000)
        {
            STOP_MOVIE( 0 );
            l_U187 = 1;
        }
    }
    if (NOT l_U188)
    {
        if (GET_CUTSCENE_TIME_MS() >= 21000)
        {
            RELEASE_MOVIE( 0 );
            l_U188 = 1;
        }
    }
    if (NOT l_U189)
    {
        if (GET_CUTSCENE_TIME_MS() >= 23740)
        {
            sub_601( "MSWW", "Playing Movie 1", "###" );
            PLAY_MOVIE( 2, 0 );
            l_U189 = 1;
        }
    }
    return;
}

void sub_34073(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1027() )) == 0)
    {
        iVar3 = 0;
        uVar4 = GET_WEAPON_FROM_HAND( sub_1027(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 0)
        {
            iVar3 = 1;
        }
        if (((sub_33118( uVar4 )) == 0) AND ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1))
        {
            iVar3 = 1;
        }
        if (iVar3 == 1)
        {
            uVar5 = sub_33055();
            if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
            {
                SELECT_WEAPON_TO_HAND( sub_1027(), uVar5, 0, uParam0 );
            }
        }
    }
    return;
}

int sub_35023()
{
    return 1;
}

void sub_35042()
{
    sub_601( "GA", "P_AT_START_MID_07_PP_BLENDOUT start", 0 );
    sub_35110( -1674641852, ref g_U2468 );
    STOP_MOVIE( 0 );
    STOP_MOVIE( 1 );
    STOP_MOVIE( 2 );
    CUTSCENE_SET_OVERLAY_TYPE( 1 );
    if ((NOT (ISEQ_QUERY_STATE( 1483309711, 3 ))) AND ((NOT (IS_PLAYER_DEAD( sub_1049() ))) AND (NOT (IS_PED_DEAD( sub_1027() )))))
    {
        ISEQ_REGISTER_ENTITY( 1483309711, "Max", sub_1027(), 0 );
        sub_8180( sub_1027(), g_U2953[7], g_U3083[7] );
        ISEQ_START( 1483309711 );
        SNAP_PLAYER_TO_COVERLINE( sub_1049(), "floor2", "GrabSpline84", 1, g_U2953[7] );
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[7], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[7], 1065353216, 0 );
    }
    CAMERA_PLAY_ANIMATED( "LEVEL_S_POLICE_CP_06", "B_OUT_MID_07_PP_CAM", 0, 0, 0, 0, 0.00000000, 0, 0 );
    l_U546 = 1;
    sub_1857( ref l_U222 );
    if (l_U770)
    {
        sub_35669( "SPOL_MID07PPA", ref l_U760 );
        l_U770 = 0;
    }
    sub_601( "GA", "P_AT_START_MID_07_PP_BLENDOUT end", 0 );
    return;
}

void sub_35110(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_7318( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_35669(unknown uParam0, unknown uParam1)
{
    sub_2429( uParam1 );
    sub_2511( 0, sub_1027(), "MAX", uParam1, 2, 0 );
    sub_2511( 1, sub_1027(), "MAX", uParam1, 2, 0 );
    sub_2753( uParam0, uParam1, 8, 1 );
    return;
}

int sub_35809()
{
    if ((ISEQ_QUERY_STATE( 1483309711, 3 )) AND (IS_SCREEN_FADED_OUT()))
    {
        sub_601( "GA", "MID_07_PP blendout is playing, fading in screen.", 0 );
        DO_SCREEN_FADE_IN( 0 );
    }
    if ((l_U546 != 4) AND (l_U546 != 0))
    {
        sub_35935();
    }
    if (CAMERA_ANIMATED_CURRENT_TIME() > l_U211)
    {
        if (NOT l_U213)
        {
            sub_601( "AT", "Stopping animated blendout camera.", 0 );
            SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[7], 1065353216, 0 );
            SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[7], 1065353216, 0 );
            CAMERA_ANIMATED_STOP( l_U212, 1 );
            l_U213 = 1;
        }
    }
    if (NOT l_U606)
    {
        if ((l_U213) || (CAMERA_ANIMATED_CURRENT_TIME() > l_U608))
        {
            if (l_U546 == 4)
            {
                sub_37866( g_U4331, g_U4330, 1, 1 );
                sub_38569();
                l_U606 = 1;
            }
        }
    }
    if (sub_2176( ref l_U621 ))
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( l_U609, l_U612, 0, 1, -1986694060, 0 );
    }
    if (sub_2176( ref l_U631 ))
    {
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS( l_U615, l_U618, 0, 1, -1986694060, 0 );
        if (NOT (IS_PED_DEAD( l_U601[0] )))
        {
            PLAY_PED_AMBIENT_SPEECH( l_U601[0], "THROWN_WEAPON_TAUNT", 1, 1, 2, 0, 30000 );
        }
    }
    if ((l_U213) AND ((l_U606) AND ((ISEQ_QUERY_ENTITY_STATE( 1483309711, "Max", 6 )) || (ISEQ_QUERY_ENTITY_STATE( 1483309711, "Max", 5 )))))
    {
        sub_5731( 0 );
        sub_5731( 1 );
        sub_5731( 2 );
        return 1;
    }
    return 0;
}

void sub_35935()
{
    unknown uVar2;

    switch (l_U546)
    {
        case 1:
        sub_601( "GA", "e_AT_ElevatorR_EnemySpawn = ENTITY_STATE_INIT", 0 );
        sub_36050( ref l_U538, 1056964608, 0 );
        l_U547 = 0;
        l_U546 = 2;
        sub_601( "GA", "e_AT_ElevatorR_EnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U601[l_U547] = sub_23486( ref l_U548[l_U547] );
        sub_36346( l_U601[l_U547], ref l_U538 );
        uVar2 = sub_10707( l_U601[l_U547], 1964270085, 25000, 0, 0 );
        ENABLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
        TOGGLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( uVar2, -938171172 );
        sub_10062( l_U601[l_U547], -862236369, 0, 25000, 0 );
        if ((l_U547 == 2) || (l_U547 == 0))
        {
            sub_36738( l_U601[l_U547], -1986694060, 1 );
        }
        if (NOT (IS_PED_DEAD( l_U601[l_U547] )))
        {
            SET_PED_AI_TEMPLATE( l_U601[l_U547], "AIT_EXPERT" );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U601[l_U547], 1 );
            SET_PED_FLAG_AGGRESSIVE_CHARGER( l_U601[l_U547], 1 );
            if (l_U547 == 0)
            {
                SET_PED_ALERTNESS( l_U601[l_U547], 2 );
            }
            else if (l_U547 == 1)
            {
                SET_PED_ALERTNESS( l_U601[l_U547], 2 );
            }
            else if (l_U547 == 2)
            {
                SET_PED_ALERTNESS( l_U601[l_U547], 1 );
            }
            else if (l_U547 == 3)
            {
                SET_PED_ALERTNESS( l_U601[l_U547], 1 );
            };;;;
        }
        l_U547++;
        if (l_U547 >= 4)
        {
            l_U546 = 3;
            sub_601( "GA", "e_AT_ElevatorR_EnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_37478( ref l_U601, "pi_AT_ElevatorR_Enemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U538._fU0, 0 );
        l_U546 = 4;
        sub_601( "GA", "e_AT_ElevatorR_EnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_36050(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_36346(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_10378( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_36050( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_36050( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_36738(unknown uParam0, int iParam1, unknown uParam2)
{
    sub_601( "GA", "P_GIVE_PED_THROW_PROJECTILE start", 0 );
    if ((iParam1 == -1986694060) || ((iParam1 == -1258125182) || ((iParam1 == -1629340685) || ((iParam1 == -1980065396) || ((iParam1 == -1378176668) || (iParam1 == -378310276))))))
    {
        sub_10062( uParam0, iParam1, 5, uParam2, 0 );
    }
    else if ((iParam1 == 735364275) || (iParam1 == 1545805694))
    {
        sub_10062( uParam0, iParam1, 6, uParam2, 0 );
    }
    else
    {
        SCRIPT_ASSERT( "Unknown holster for projectile type.  Please extend P_GIVE_PED_THROW_PROJECTILE to include this projectile type.", 0 );
        sub_10062( uParam0, iParam1, 5, uParam2, 0 );
    }
    sub_601( "GA", "P_GIVE_PED_THROW_PROJECTILE end", 0 );
    return;
}

void sub_37478(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_37866(unknown uParam0, unknown uParam1, boolean bParam2, boolean bParam3)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        PLAY_OBJECT_ANIM( uParam0, "P_PO_Lift_Anim", "po_door", 0.00000000, 0, 1 );
        if (bParam2)
        {
            SET_OBJECT_ANIM_CURRENT_TIME( uParam0, "P_PO_Lift_Anim", "po_door", 0.00000000 );
            SET_OBJECT_ANIM_SPEED( uParam0, "P_PO_Lift_Anim", "po_door", 1.60000000 );
        }
        else
        {
            SET_OBJECT_ANIM_CURRENT_TIME( uParam0, "P_PO_Lift_Anim", "po_door", 1.00000000 );
            SET_OBJECT_ANIM_SPEED( uParam0, "P_PO_Lift_Anim", "po_door", -1.60000000 );
        }
        if (bParam3)
        {
            sub_5921( l_U253, 0 );
            sub_6084( ref l_U253 );
            l_U253 = GET_SOUND_ID();
            PLAY_SOUND_FROM_OBJECT( l_U253, "PUBLIC_ELEVATOR_DOOR_CLOSE", uParam0 );
        }
        else
        {
            sub_5921( l_U254, 0 );
            sub_6084( ref l_U254 );
            l_U254 = GET_SOUND_ID();
            PLAY_SOUND_FROM_OBJECT( l_U254, "PUBLIC_ELEVATOR_DOOR_CLOSE", uParam0 );
        }
    }
    if (DOES_OBJECT_EXIST( uParam1 ))
    {
        PLAY_OBJECT_ANIM( uParam1, "P_PO_Lift_Anim", "po_door", 0.00000000, 0, 1 );
        if (bParam2)
        {
            SET_OBJECT_ANIM_CURRENT_TIME( uParam1, "P_PO_Lift_Anim", "po_door", 0.00000000 );
            SET_OBJECT_ANIM_SPEED( uParam1, "P_PO_Lift_Anim", "po_door", 1.60000000 );
        }
        else
        {
            SET_OBJECT_ANIM_CURRENT_TIME( uParam1, "P_PO_Lift_Anim", "po_door", 1.00000000 );
            SET_OBJECT_ANIM_SPEED( uParam1, "P_PO_Lift_Anim", "po_door", -1.60000000 );
        }
    }
    if (bParam2)
    {
        PLAY_SOUND_FROM_COORD( -1, "PUBLIC_ELEVATOR_BELL", 19.00000000, 4.00000000, 1.50000000 );
    }
    return;
}

void sub_38569()
{
    int I;

    sub_601( "GA", "P_AT_ELEVATOR_R_ENEMIES_DEPLOY start", 0 );
    if (NOT (IS_PED_DEAD( l_U601[0] )))
    {
        sub_8180( l_U601[0], 17.89900000, 2.91800000, 0.00000000, 0.00000000 );
        ISEQ_REGISTER_ENTITY( -1006030447, "GMED0", l_U601[0], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U601[0], 0 );
        ISEQ_START( -1006030447 );
    }
    if (NOT (IS_PED_DEAD( l_U601[1] )))
    {
        sub_8180( l_U601[1], 17.80900000, 2.42800000, 0.00000000, 0.00000000 );
        ISEQ_REGISTER_ENTITY( -666740221, "GMED1", l_U601[1], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U601[1], 0 );
        ISEQ_START( -666740221 );
    }
    if (NOT (IS_PED_DEAD( l_U601[2] )))
    {
        sub_8180( l_U601[2], 17.16400000, 2.13200000, 0.00000000, 0.00000000 );
        ISEQ_REGISTER_ENTITY( 649262815, "GMED2", l_U601[2], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U601[2], 0 );
        ISEQ_START( 649262815 );
    }
    if (NOT (IS_PED_DEAD( l_U601[3] )))
    {
        sub_8180( l_U601[3], 17.08800000, 2.88600000, 0.00000000, 0.00000000 );
        ISEQ_REGISTER_ENTITY( -1261661416, "GMED3", l_U601[3], 0 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U601[3], 0 );
        ISEQ_START( -1261661416 );
    }
    l_U544 = PEDGROUPTASK_ADVANCE_CREATE( l_U538._fU0 );
    for ( I = 0; I < l_U601; I++ )
    {
        if (NOT (IS_PED_DEAD( l_U601[I] )))
        {
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U538._fU0, l_U544, l_U601[I] );
        }
    }
    if (NOT (IS_PED_DEAD( sub_1027() )))
    {
        PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U538._fU0, l_U544, sub_1027() );
    }
    PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U538._fU0, l_U544, 1 );
    PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U538._fU0, l_U544, 5.00000000 );
    PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U538._fU0, l_U544, 3.50000000 );
    PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U538._fU0, l_U544 );
    sub_1857( ref l_U621 );
    sub_1857( ref l_U631 );
    sub_1857( ref l_U641 );
    sub_601( "GA", "P_AT_ELEVATOR_R_ENEMIES_DEPLOY end", 0 );
    return;
}

void sub_39629(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_601( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_39754( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 39714, 39732, uParam8 );
}

void sub_39714()
{
    return;
}

int sub_39732()
{
    return 1;
}

void sub_39754(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_40048(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

void sub_40272(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_601( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_601( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_601( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_601( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_601( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_601( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_22118( iParam0->_fU0, 0 );
            sub_601( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_41139( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_41139( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_601( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_41667( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_41139( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_42016( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_42016( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_41139(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_1027() )))
        {
            SET_PLAYER_CONTROL( sub_1049(), 0, uParam2 );
            SET_PED_DUCKING( sub_1027(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_1027() );
            }
            SET_PED_INVINCIBLE( sub_1027(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_41667(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_1027() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_1027(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_1027(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1027(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1027(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_1027(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_42016(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_1027() )))
    {
        SET_PLAYER_CONTROL( sub_1049(), 1, 0 );
        SET_PED_INVINCIBLE( sub_1027(), 0 );
        if (bParam0)
        {
            sub_42097();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_42097()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_1027() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_1027(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_1027(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1027(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_1027(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_42516(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_42553( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_42553(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_7723( uParam0 );
            }
        }
    }
    return;
}

void sub_42680()
{
    int I;

    if (sub_2176( ref l_U222 ))
    {
        sub_601( "GA", "Starting to blend in the smoke.", 0 );
        SET_WEATHER_TYPE_PERSIST( "FOGGY" );
        SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
        SET_WEATHER_TRANSITION_SPEED( l_U231 );
        sub_601( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_3_4", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_3_4", "", 0, 0, -1, -1082130432, 0 );
        l_U252 = 1;
        sub_1857( ref l_U233 );
    }
    if (sub_2176( ref l_U233 ))
    {
        sub_601( "GA", "Starting to blend out the smoke.", 0 );
        SET_WEATHER_TYPE_PERSIST( "RAIN" );
        SET_WEATHER_TRANSITION_IMMEDIATE( 1 );
        SET_WEATHER_TRANSITION_SPEED( l_U242 );
        sub_1857( ref l_U243 );
    }
    if (sub_2176( ref l_U243 ))
    {
        sub_601( "GA", "Smoke has cleared enough to re-enable lock on.", 0 );
        l_U252 = 0;
        for ( I = 0; I <= 3; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U601[I] )))
            {
                SET_PED_CAN_BE_TARGETTED( l_U601[I], 1 );
            }
        }
        for ( I = 0; I <= 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U700[I] )))
            {
                SET_PED_CAN_BE_TARGETTED( l_U700[I], 1 );
            }
        }
    }
    return;
}

void sub_43465(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_43477( iParam0 )) == 0)
    {
        sub_43543( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

int sub_43477(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_43543(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

int sub_43711(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if ((sub_43756( ref (uParam0^)[I], uParam1, uParam2, uParam3, uParam4, uParam5, uParam6 )) == 1)
        {
            return 1;
        }
    }
    return 0;
}

int sub_43756(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, int iParam6)
{
    if ((NOT (IS_PED_DEAD( uParam1 ))) AND (NOT (IS_PED_DEAD( (uParam0^) ))))
    {
        if ((uParam3) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 1 )))
        {
            if (iParam6 == 1)
            {
                sub_601( "MF", "ped has SEEN target ped", 0 );
            }
            return 1;
        }
        else if ((uParam4) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 8 )))
        {
            if (iParam6 == 1)
            {
                sub_601( "MF", "ped has BEEN SHOT AT by target ped", 0 );
            }
            return 1;
        }
        else if ((uParam2) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 2 )))
        {
            if (iParam6 == 1)
            {
                sub_601( "MF", "ped has HEARD target ped", 0 );
            }
            return 1;
        }
        else if ((uParam5) AND (GET_PED_AWARENESS_STATE( (uParam0^), uParam1, 4 )))
        {
            if (iParam6 == 1)
            {
                sub_601( "MF", "ped has BEEN TOLD ABOUT target ped", 0 );
            }
            return 1;
        };;;;
    }
    return 0;
}

int sub_44174()
{
    if (((ISEQ_QUERY_ENTITY_STATE( -1261661416, "GMED3", 5 )) || (ISEQ_QUERY_ENTITY_STATE( -1261661416, "GMED3", 6 ))) AND (((ISEQ_QUERY_ENTITY_STATE( 649262815, "GMED2", 5 )) || (ISEQ_QUERY_ENTITY_STATE( 649262815, "GMED2", 6 ))) AND (((ISEQ_QUERY_ENTITY_STATE( -666740221, "GMED1", 5 )) || (ISEQ_QUERY_ENTITY_STATE( -666740221, "GMED1", 6 ))) AND ((ISEQ_QUERY_ENTITY_STATE( -1006030447, "GMED0", 5 )) || (ISEQ_QUERY_ENTITY_STATE( -1006030447, "GMED0", 6 ))))))
    {
        sub_601( "AT", "Patrolling vig is done!", 0 );
        return 1;
    }
    return 0;
}

void sub_44601()
{
    unknown uVar2;

    switch (l_U658)
    {
        case 1:
        sub_601( "GA", "e_AT_ElevatorL_EnemySpawn = ENTITY_STATE_INIT", 0 );
        l_U659 = 0;
        l_U658 = 2;
        sub_601( "GA", "e_AT_ElevatorL_EnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U700[l_U659] = sub_23486( ref l_U660[l_U659] );
        sub_36346( l_U700[l_U659], ref l_U538 );
        uVar2 = sub_10707( l_U700[l_U659], 1964270085, 25000, 0, 0 );
        ENABLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
        TOGGLE_WEAPON_ATTACHMENT( uVar2, 13, 1 );
        SET_LASER_SIGHT_ATTACHMENT( uVar2, -938171172 );
        sub_10062( l_U700[l_U659], -862236369, 0, 25000, 0 );
        if (NOT (IS_PED_DEAD( l_U700[l_U659] )))
        {
            SET_PED_AI_TEMPLATE( l_U700[l_U659], "AIT_EXPERT" );
            SET_PED_ALERTNESS( l_U700[l_U659], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U700[l_U659], 1 );
            SET_PED_FLAG_AGGRESSIVE_CHARGER( l_U700[l_U659], 1 );
        }
        l_U659++;
        if (l_U659 >= 3)
        {
            l_U658 = 3;
            sub_601( "GA", "e_AT_ElevatorL_EnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_37478( ref l_U700, "pi_AT_ElevatorL_Enemy" );
        SET_GROUP_LAST_ALIVE_AS_LONE_WOLF( l_U538._fU0, 1 );
        l_U658 = 4;
        sub_601( "GA", "e_AT_ElevatorL_EnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_45305()
{
    vector[3] vVar2;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int I;

    sub_601( "GA", "P_AT_ELEVATOR_L_ENEMIES_DEPLOY start", 0 );
    array(ref vVar2, 3);
    vVar2[0] = {14.00000000, 6.51000000, 0.07500000};
    vVar2[1] = {17.48557000, 9.52158500, 0.07500000};
    vVar2[2] = {22.55858000, 11.06182000, 0.07500000};
    if ((sub_45436( ref l_U601 )) == 0)
    {
        l_U544 = PEDGROUPTASK_ADVANCE_CREATE( l_U538._fU0 );
    }
    for ( I = 0; I <= 2; I++ )
    {
        if ((NOT (IS_PED_DEAD( sub_1027() ))) AND (NOT (IS_PED_DEAD( l_U700[I] ))))
        {
            REGISTER_TARGET( l_U700[I], sub_1027() );
            OPEN_SEQUENCE_TASK( ref uVar12 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
            TASK_ATTACK_MOVE( 0, vVar2[I], 3.00000000, -1.00000000, -1082130432, 3 );
            TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
            TASK_COMBAT_PED( 0, sub_1027() );
            CLOSE_SEQUENCE_TASK( uVar12 );
            TASK_PERFORM_SEQUENCE( l_U700[I], uVar12 );
            CLEAR_SEQUENCE_TASK( uVar12 );
            PEDGROUPTASK_ADVANCE_ASSIGNPED( l_U538._fU0, l_U544, l_U700[I] );
        }
    }
    if ((sub_45436( ref l_U601 )) == 0)
    {
        if (NOT (IS_PED_DEAD( sub_1027() )))
        {
            PEDGROUPTASK_ADVANCE_SETTARGET_PED( l_U538._fU0, l_U544, sub_1027() );
        }
        PEDGROUPTASK_ADVANCE_SETNUMPEDSTOADVANCE( l_U538._fU0, l_U544, 1 );
        PEDGROUPTASK_ADVANCE_SETTIMETOIDLE( l_U538._fU0, l_U544, 5.00000000 );
        PEDGROUPTASK_ADVANCE_SETTIMETOHIDE( l_U538._fU0, l_U544, 3.50000000 );
        PEDGROUPTASK_ADVANCE_TRIGGER_MOVE( l_U538._fU0, l_U544 );
    }
    sub_601( "GA", "P_AT_ELEVATOR_L_ENEMIES_DEPLOY end", 0 );
    return;
}

void sub_45436(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

int sub_46021(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ((DOES_OBJECT_EXIST( uParam0 )) == 1)
    {
        if (IS_OBJECT_PLAYING_ANIM( uParam0, uParam2, uParam1 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_46375(unknown uParam0)
{
    int I;

    if ((sub_45436( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

int sub_47032()
{
    if ((l_U86._fU16) || (sub_2176( ref l_U86 )))
    {
        return 1;
    }
    return 0;
}

int sub_47221(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_1027() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_1027() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_47307( sub_1027(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_47307( sub_1027(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_6682( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_6743( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_48148() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_6287( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_6331( iParam0, 0 );
                            sub_6531( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_6331( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_1027() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_1027(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_6331( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_6531( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_1027() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_1027(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_1027() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_1027(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_1027() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_1027(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_6331( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_6531( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_1027() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_1027() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_1027() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_1027(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_6531( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_47307(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_48148()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_49410()
{
    sub_601( "GA", "P_RELEASE_AT_ASSETS start", 0 );
    sub_49467( ref l_U142, ref g_U2468 );
    sub_49534( ref g_U3553, ref g_U2741 );
    sub_49534( "LEVEL_S_POLICE_CP_06", ref g_U2741 );
    sub_49743( ref g_U3521, ref g_U2889 );
    sub_49920( ref l_U149, ref g_U2613 );
    sub_601( "GA", "P_RELEASE_AT_ASSETS end", 0 );
    return;
}

void sub_49467(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_35110( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_49534(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_7318( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_49743(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_7318( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_49920(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_49955( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_49955(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_7318( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


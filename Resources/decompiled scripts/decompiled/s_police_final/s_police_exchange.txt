void main()
{
    l_U0 = 1;
    l_U1 = 144;
    l_U2 = 0;
    l_U3 = 1;
    l_U4 = 0;
    l_U5 = 1.00000000;
    l_U6 = -5.00000000;
    l_U7 = 0;
    l_U8 = 0;
    l_U9 = 0;
    l_U13 = 42;
    l_U14 = 0;
    l_U15 = 0;
    l_U16 = 0;
    l_U17 = 0;
    l_U18 = 0;
    l_U19 = 90.00000000;
    l_U20 = {0.00000000, 0.00000000, 0.00000000};
    l_U23 = {0.00000000, 0.00000000, 0.00000000};
    l_U26 = 0;
    l_U27 = 0;
    l_U28 = 0;
    l_U29 = 0;
    l_U30 = 0;
    l_U31 = 0;
    l_U32 = nil;
    l_U33 = {0.00000000, 0.00000000, 0.00000000};
    l_U36 = 0;
    l_U37 = 0;
    l_U38 = 0;
    StrCopy( ref l_U39, "DEFAULT_SCRIPTED_CAMERA", 32 );
    StrCopy( ref l_U47, "DEFAULT_SPLINE_CAMERA", 32 );
    l_U74 = 0;
    l_U75 = 0;
    l_U76 = 1500;
    l_U87 = 0;
    l_U98 = 12;
    l_U157 = 0;
    l_U158 = 0;
    l_U160 = 1;
    l_U161 = 0;
    l_U356 = 0;
    l_U455 = 500;
    l_U456 = 2000;
    l_U486 = -497025808;
    l_U488 = -422856175;
    l_U490 = -2084980651;
    l_U492 = 908032872;
    l_U495 = 0.35000000;
    l_U624 = {58.21000000, -42.57000000, -2.04000000};
    l_U754 = {59.83000000, -46.52000000, -2.18000000};
    l_U849 = -1;
    l_U888 = 8000;
    sub_507( "SP", "Script s_police_exchange.sc is starting up...", 0 );
    sub_556();
    l_U158 = 1;
    while (NOT IS_EXITFLAG_SET())
    {
        sub_815();
        if (l_U161 == 0)
        {
            sub_12543();
        }
        WAIT( 0 );
    }
    sub_5497();
    sub_52700();
    SET_EXITFLAG_RESPONSE();
    SET_SCRIPT_AS_NO_LONGER_NEEDED( "s_police_exchange" );
    sub_507( "SP", "Script s_police_exchange.sc is terminating...", 0 );
    return;
}

void sub_507(unknown uParam0, unknown uParam1, string sParam2)
{
    unknown uVar5;

    if (IS_STRING_NULL( sParam2 ))
    {
        sParam2 = "###";
    }
    uVar5 = GET_REAL_GAME_TIMER();
    return;
}

void sub_556()
{
    sub_507( "GA", "P_PE_POPULATE_SCRIPT_ARRAYS start", 0 );
    l_U145[0] = -417930772;
    l_U145[1] = 474775165;
    l_U145[2] = -1185104559;
    l_U145[3] = l_U486;
    l_U145[4] = l_U488;
    l_U145[5] = l_U490;
    l_U145[6] = l_U492;
    l_U153[0] = -862236369;
    l_U153[1] = 434544317;
    l_U153[2] = 1308526797;
    sub_507( "GA", "P_PE_POPULATE_SCRIPT_ARRAYS end", 0 );
    return;
}

void sub_815()
{
    if (g_U821 == 3)
    {
        switch (l_U161)
        {
            case 0:
            if ((sub_970()) || (IS_PED_DEAD( sub_897() )))
            {
                l_U161 = 1;
                sub_507( "SP", "eFailState = FAIL_WAITING_FOR_PLAYER", 0 );
            }
            break;
            case 1:
            sub_1465( 1 );
            if (sub_4123())
            {
                l_U161 = 3;
            }
            else if ((sub_4163( 0 )) == 1)
            {
                l_U161 = 2;
            }
            break;
            case 2:
            if (NOT (IS_PED_DEAD( sub_897() )))
            {
                l_U161 = 3;
                sub_507( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            }
            break;
            case 3:
            sub_507( "SP", "eFailState = FAIL_CLEANUP_ALL", 0 );
            if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PLAYER_DEAD( sub_919() ))))
            {
                SET_PLAYER_CONTROL( sub_919(), 0, 0 );
                SET_PLAYER_CAN_USE_SHOOTDODGE( sub_919(), 1 );
                if (GET_IS_PED_FORCED_TO_WALK( sub_897() ))
                {
                    SET_PED_FORCED_TO_WALK( sub_897(), 0 );
                }
            }
            if ((g_U862[4]._fU40 != 4) AND (g_U862[4]._fU40 != 0))
            {
                sub_507( "CR", "Shutting down script for MCE_PARKING.", 0 );
                sub_5399( ref g_U862[4] );
                SET_EXITFLAG_FOR_SCRIPT( g_U862[4]._fU32 );
            }
            DO_SCREEN_FADE_OUT( 0 );
            DESTROY_ALL_CAMS();
            RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
            AUDIO_MUSIC_SUSPEND( 500 );
            AUDIO_MUSIC_STOP_ONESHOT();
            sub_5497();
            sub_7940( 3 );
            l_U161 = 4;
            sub_507( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            break;
            case 4:
            sub_507( "SP", "eFailState = FAIL_RESTORE_PLAYER", 0 );
            sub_8321( ref l_U109, sub_897() );
            l_U161 = 5;
            sub_507( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            break;
            case 5:
            sub_507( "SP", "eFailState = FAIL_RESTART_CHECKPOINT", 0 );
            l_U158 = 1;
            l_U160 = 0;
            l_U161 = 0;
            sub_507( "SP", "eFailState = FAIL_IDLE", 0 );
            break;
        }
    }
    return;
}

int sub_897()
{
    if (DOES_MAIN_PLAYER_EXIST())
    {
        return GET_PLAYER_PED( sub_919() );
    }
    return 0;
}

void sub_919()
{
    return GET_PLAYER_ID();
}

int sub_970()
{
    if (HAS_SELECTED_RETRY_CHECKPOINT())
    {
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (HAS_CUTSCENE_FINISHED() == 0)
        {
            return 0;
        }
        l_U0 = 0;
        g_U648 = 1;
        DO_SCREEN_FADE_OUT( 0 );
        ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 1 );
        TERMINATE_GAME_BULLET_CAMERA();
        if (IS_ANIMATED_CAMERA_PLAYING())
        {
            CAMERA_ANIMATED_STOP( 0, 0 );
        }
        STOP_ALL_SCRIPTED_CONVERSATIONS( 0 );
        DEACTIVATE_BULLET_TIME( 1, 0 );
        END_POSTFX_BLENDER( 0, 0 );
        END_POSTFX_BLENDER( 2, 0 );
        END_POSTFX_BLENDER( 3, 0 );
        END_POSTFX_BLENDER( 4, 0 );
        END_POSTFX_BLENDER( 5, 0 );
        END_POSTFX_BLENDER( 7, 0 );
        END_POSTFX_BLENDER( 9, 0 );
        END_POSTFX_BLENDER( 10, 0 );
        END_POSTFX_BLENDER( 11, 0 );
        END_POSTFX_BLENDER( 12, 0 );
        END_POSTFX_BLENDER( 13, 0 );
        END_POSTFX_BLENDER( 14, 0 );
        END_POSTFX_BLENDER( 15, 0 );
        END_POSTFX_BLENDER( 16, 0 );
        STOP_ALL_IMAGEFX( 0 );
        if (NOT (IS_PED_DEAD( sub_897() )))
        {
            SET_PED_FORCED_TO_WALK( sub_897(), 0 );
            SET_PLAYER_FORCED_AIM( sub_919(), 0, 0 );
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_919(), 1 );
            if ((IS_PED_VISIBLE( sub_897() )) == 0)
            {
                SET_PED_VISIBLE( sub_897(), 1 );
            }
        }
        CLEAR_PRINTS();
        CLEAR_HELP();
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
        DESTROY_ALL_CAMS();
        AUDIO_MUSIC_SUSPEND( 500 );
        return 1;
    }
    return 0;
}

void sub_1465(boolean bParam0)
{
    int iVar3;

    if (NOT (IS_PED_DEAD( sub_897() )))
    {
        if (NOT (IS_PED_IN_COMBAT( sub_897() )))
        {
            if ((NOT l_U89._fU16) AND (NOT l_U89._fU20))
            {
                sub_507( "AT", "Starting painkiller dialogue timer.", 0 );
                sub_1591( ref l_U89, 3500, 1, 0 );
                sub_1727( ref l_U89 );
            }
            if ((l_U89._fU16) AND (sub_1843()))
            {
                sub_507( "AT", "Dialogue detected. Restarting painkiller dialogue timer.", 0 );
                sub_1591( ref l_U89, 3500, 1, 0 );
                sub_1727( ref l_U89 );
            }
            iVar3 = GET_PAYNEKILLER_AMT();
            if (iVar3 > l_U98)
            {
                if (NOT sub_1843())
                {
                    if ((l_U89._fU16) || (sub_2046( ref l_U89 )))
                    {
                        if (g_U4303 < 6)
                        {
                            if ((GET_RANDOM_INT_IN_RANGE( 0, 500 )) < 300)
                            {
                                sub_507( "GA", "Playing painkiller monologue.", 0 );
                                sub_2299( ref l_U99 );
                                sub_2381( 0, sub_897(), "MAX", ref l_U99, 2, 0 );
                                sub_2381( 1, sub_897(), "MAX", ref l_U99, 2, 0 );
                                sub_2623( "SPOL_PLFNDPL", ref l_U99, 8, 1 );
                                g_U4303++;
                            }
                            else
                            {
                                sub_507( "GA", "Not playing painkiller speech, failed random chance test.", 0 );
                            }
                        }
                        else
                        {
                            sub_507( "GA", "Not Playing painkiller speech, already played all 6 lines.", 0 );
                        }
                    }
                    else
                    {
                        sub_507( "GA", "Not playing painkiller speech, not long enough since last dialogue.", 0 );
                    }
                }
                else
                {
                    sub_507( "GA", "Not playing painkiller speech, another speech is currently playing.", 0 );
                }
            }
            l_U98 = iVar3;
        }
        if (sub_3753( l_U99 ))
        {
            if (NOT HAS_CUTSCENE_FINISHED())
            {
                sub_507( "GA", "Killing painkiller speech for cutscene playing.", 0 );
                sub_3993( ref l_U99, 0 );
            }
        }
    }
    if (bParam0)
    {
        sub_1591( ref l_U89, 20000, 1, 0 );
        sub_1727( ref l_U89 );
    }
    return;
}

void sub_1591(int iParam0, unknown uParam1, boolean bParam2, int iParam3)
{
    if (bParam2)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam3 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU12 = uParam1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = bParam2;
    iParam0->_fU32 = iParam3;
    iParam0->_fU8 = 0;
    return;
}

void sub_1727(int iParam0)
{
    if (NOT iParam0->_fU20)
    {
        iParam0->_fU20 = 1;
        iParam0->_fU16 = 0;
        if (iParam0->_fU28)
        {
            iParam0->_fU0 = TIMERA();
        }
        else
        {
            iParam0->_fU0 = TIMERB();
        }
        if (iParam0->_fU32 == 1)
        {
            iParam0->_fU0 = TIMERSYSTEM();
        }
        iParam0->_fU4 = iParam0->_fU0;
    }
    return;
}

void sub_1843()
{
    int Result;
    int I;

    Result = 0;
    for ( I = 0; I <= 3; I++ )
    {
        Result = (IS_SCRIPTED_CONVERSATION_ONGOING( I )) || (Result);
    }
    return Result;
}

int sub_2046(int iParam0)
{
    if (iParam0->_fU16)
    {
        return 0;
    }
    else if (NOT iParam0->_fU20)
    {
        return 0;
    }
    if (iParam0->_fU28)
    {
        iParam0->_fU4 = TIMERA();
    }
    else
    {
        iParam0->_fU4 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU4 = TIMERSYSTEM();
    }
    if ((iParam0->_fU4 - iParam0->_fU0) >= iParam0->_fU12)
    {
        iParam0->_fU16 = 1;
        iParam0->_fU20 = 0;
        return 1;
        break;
    }
    return 0;
}

void sub_2299(int iParam0)
{
    iParam0->_fU4 = -1;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    iParam0->_fU28 = 0;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    return;
}

void sub_2381(int iParam0, unknown uParam1, unknown uParam2, int iParam3, unknown uParam4, unknown uParam5)
{
    if (iParam3->_fU32)
    {
        ;
    }
    else if (iParam3->_fU36 == 0)
    {
        iParam3->_fU36 = 1;
        iParam3->_fU4 = CREATE_NEW_SCRIPTED_CONVERSATION( uParam4 );
        if (iParam3->_fU4 == -1)
        {
            iParam3->_fU32 = 1;
        }
    }
    if ((iParam0 < 9) AND ((iParam0 >= 0) AND ((iParam3->_fU4 < 4) AND (iParam3->_fU4 >= 0))))
    {
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU0 = uParam1;
        g_U16[iParam3->_fU4]._fU16[iParam0]._fU4 = GET_HASH_KEY( uParam2 );
        if (NOT (IS_PED_INJURED( uParam1 )))
        {
            SET_PED_CAN_PLAY_AMBIENT_ANIMS( uParam1, uParam5 );
        }
    }
    return;
}

void sub_2623(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    return sub_2647( uParam0, ref g_U157._fU0, uParam1, uParam2, uParam3 );
}

void sub_2647(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    char[16] cVar7;
    char[12] cVar11;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;

    StrCopy( ref cVar7, uParam1, 16 );
    array(ref cVar11, 2);
    StrCopy( ref cVar11[0], uParam0, 16 );
    StrCopy( ref cVar11[1], "END", 16 );
    return sub_2702( ref cVar11, uParam2, uParam3, 0, 0, 0, 0, ref cVar7, uParam4 );
}

int sub_2702(unknown uParam0, int iParam1, unknown uParam2, boolean bParam3, boolean bParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    int I;
    unknown uVar12;
    unknown uVar13;

    if (iParam1->_fU4 == -1)
    {
        return 0;
    }
    iParam1->_fU0 = uParam2;
    if (NOT (sub_2737( iParam1 )))
    {
        return 0;
    }
    uVar12 = iParam1->_fU4;
    uVar13 = GET_HASH_KEY( ref (uParam0^)[0] );
    iParam1->_fU16 = uVar13;
    SET_CONVERSATION_CHECK_HASH( uVar12, uVar13 );
    g_U157._fU132 = 0;
    iParam1->_fU24 = 0;
    iParam1->_fU28 = uParam5;
    if (bParam3)
    {
        if (iParam1->_fU20)
        {
            iParam1->_fU20 = 0;
        }
    }
    else
    {
        iParam1->_fU20 = 0;
        if (bParam4)
        {
            iParam1->_fU12 = uParam6;
            iParam1->_fU20 = 0;
        }
        else
        {
            iParam1->_fU12 = 0;
            iParam1->_fU20 = 0;
        }
    }
    iParam1->_fU24 = bParam4;
    for ( I = 0; I <= 24; I++ )
    {
        StrCopy( ref g_U233[uVar12][I], "END", 16 );
    }
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        g_U233[uVar12][I] = {(uParam0^)[I]};
    }
    g_U192[uVar12] = {(iParam1^)};
    sub_3231( ref g_U16[uVar12], ref g_U157 );
    StrCopy( ref g_U16[uVar12]._fU0, uParam7, 16 );
    g_U16[uVar12]._fU136 = uParam8;
    g_U11[iParam1->_fU4] = 1;
    return 1;
}

int sub_2737(int iParam0)
{
    switch (g_U11[iParam0->_fU4])
    {
        case 1:
        case 2:
        return 0;
        break;
    }
    if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (g_U1[iParam0->_fU4] > iParam0->_fU0)
        {
            return 0;
        }
        STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, 0, 0 );
    }
    g_U1[iParam0->_fU4] = iParam0->_fU0;
    g_U6[iParam0->_fU4]++;
    if (g_U6[iParam0->_fU4] > 100000)
    {
        g_U6[iParam0->_fU4] = 1;
    }
    iParam0->_fU8 = g_U6[iParam0->_fU4];
    return 1;
}

void sub_3231(int iParam0, int iParam1)
{
    int I;

    iParam0->_fU0 = {iParam1->_fU0};
    for ( I = 0; I <= 8; I++ )
    {
        iParam0->_fU92[I] = iParam1->_fU92[I];
    }
    iParam0->_fU132 = iParam1->_fU132;
    iParam0->_fU136 = iParam1->_fU136;
    return;
}

int sub_3753(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    if (NOT (sub_3766( uParam0 )))
    {
        return 0;
    }
    if ((g_U11[uParam0._fU4] == 2) || ((g_U11[uParam0._fU4] == 1) || (IS_SCRIPTED_CONVERSATION_ONGOING( uParam0._fU4 ))))
    {
        if (uParam0._fU8 == g_U6[uParam0._fU4])
        {
            return 1;
        }
    }
    return 0;
}

boolean sub_3766(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    int iVar12;

    if (uParam0._fU4 < 0)
    {
        return 0;
    }
    iVar12 = GET_CHECK_HASH_FROM_CONVERSATION_ID( uParam0._fU4 );
    return (uParam0._fU16 == iVar12) AND (iVar12 != 0);
}

void sub_3993(int iParam0, unknown uParam1)
{
    if (NOT (sub_3766( (iParam0^) )))
    {
        ;
    }
    else if (IS_SCRIPTED_CONVERSATION_ONGOING( iParam0->_fU4 ))
    {
        if (iParam0->_fU8 == g_U6[iParam0->_fU4])
        {
            STOP_SCRIPTED_CONVERSATION( iParam0->_fU4, uParam1, 0 );
        }
    }
    return;
}

void sub_4123()
{
    return g_U648;
}

int sub_4163(int iParam0)
{
    iParam0 = 1;
    switch (l_U75)
    {
        case 0:
        if (NOT (sub_4224( ref l_U77 )))
        {
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_897() )))
            {
                l_U76 = 2000;
                ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 0, 1 );
            }
            sub_1591( ref l_U77, l_U76, 1, 1 );
            sub_1727( ref l_U77 );
        }
        if (sub_2046( ref l_U77 ))
        {
            sub_507( "NS", " show fail/retry text", 0 );
            if ((IS_DEATH_PANEL_WIPE_ALLOWED()) AND (IS_PED_DEAD( sub_897() )))
            {
                if ((IS_BULLET_CAMERA_RUNNING( 0 )) == 0)
                {
                    if (IS_SCREEN_FADED_OUT())
                    {
                        DO_SCREEN_FADE_IN( 0 );
                    }
                }
                ENABLE_DEATHHELPERTEXT( 1, 1, 0 );
            }
            else if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            else
            {
                ENABLE_DEATHHELPERTEXT( 1, iParam0, 0 );
            }
            if (NOT (IS_PLAYER_DEAD( sub_919() )))
            {
                SET_PLAYER_CONTROL( sub_919(), 0, 0 );
            }
            DISPLAY_HUD( 0 );
            l_U75 = 1;
        }
        break;
        case 1:
        if ((((NOT IS_QUIT_CONFIRMING()) == 1) AND (IS_BUTTON_JUST_PRESSED( 0, 501 ))) || ((N_1855335259()) || (IS_CONTROL_JUST_PRESSED( 2, 82 ))))
        {
            if (IS_QUIT_CONFIRMING() == 1)
            {
                l_U75 = 2;
            }
            else
            {
                l_U75 = 3;
            }
        }
        break;
        case 2:
        sub_507( "NS", "Player will QUIT", 0 );
        sub_4683();
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        START_PANEL_WIPE( 0, 6 );
        SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
        RETURN_TO_TITLESCREEN( 0 );
        break;
        case 3:
        sub_507( "NS", "Player will RETRY", 0 );
        if (IS_IN_NYMINUTE_MODE())
        {
            SWITCH_TO_LEVEL( GET_INDEX_OF_CURRENT_LEVEL() );
        }
        if (iParam0 == 1)
        {
            DO_SCREEN_FADE_OUT( 0 );
        }
        sub_4683();
        return 1;
        break;
    }
    return 0;
}

int sub_4224(int iParam0)
{
    if (iParam0->_fU20 == 1)
    {
        return 1;
    }
    if (iParam0->_fU16 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_4683()
{
    sub_507( "NS", "P_PostFailRetryCleanup", 0 );
    sub_4733( ref l_U77 );
    ENABLE_DEATHHELPERTEXT( 0, 0, 2000 );
    SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 0 );
    if (NOT (IS_PLAYER_DEAD( sub_919() )))
    {
        SET_PLAYER_CONTROL( sub_919(), 1, 0 );
    }
    DISPLAY_HUD( 1 );
    l_U74 = 0;
    l_U74 = l_U74;
    l_U75 = 0;
    return;
}

void sub_4733(int iParam0)
{
    if (iParam0->_fU28)
    {
        iParam0->_fU0 = TIMERA();
    }
    else
    {
        iParam0->_fU0 = TIMERB();
    }
    if (iParam0->_fU32 == 1)
    {
        iParam0->_fU0 = TIMERSYSTEM();
    }
    iParam0->_fU4 = iParam0->_fU0;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = 0;
    iParam0->_fU24 = 0;
    return;
}

void sub_5399(int iParam0)
{
    iParam0->_fU36 = 0;
    iParam0->_fU40 = 0;
    return;
}

void sub_5497()
{
    sub_507( "GA", "P_CLEANUP_PE start", 0 );
    if ((CUTSCENE_NAMED_IS_LOADING( "MID_02_PP_concat" )) || (CUTSCENE_IS_LOADED( "MID_02_PP_concat" )))
    {
        sub_507( "AT", "Purging loaded cutscene.", 0 );
        CLEAR_NAMED_CUTSCENE( "MID_02_PP_concat" );
    }
    sub_507( "AT", "Disabling WALLA: S_POLICE_WZ_PARKING_LOT and AMBIENT: S_POLICE_ZONE_PARKING_LOT_GUNFIGHT", 0 );
    ENABLE_WALLA_ZONE( "S_POLICE_WZ_PARKING_LOT", 0 );
    ENABLE_AMBIENT_ZONE( "S_POLICE_ZONE_PARKING_LOT_GUNFIGHT", 0 );
    sub_5848( l_U849, 0 );
    sub_6011( ref l_U849 );
    ISEQ_TERMINATE( 1695938919 );
    sub_6210( 1695938919, ref g_U2662 );
    sub_6583( ref l_U668, 0 );
    sub_7467( ref l_U343 );
    sub_7467( ref l_U451 );
    sub_7501( l_U479 );
    sub_7618( l_U487 );
    sub_7618( l_U489 );
    sub_7618( l_U491 );
    sub_7618( l_U493 );
    sub_7618( l_U494 );
    sub_7702( ref l_U480 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U361._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U387._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U647._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U582._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U603._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U241._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U220._fU0 );
    GAMEPLAY_HELPER_BOX_DESTROY( ref l_U899._fU0 );
    sub_507( "GA", "P_CLEANUP_PE end", 0 );
    return;
}

void sub_5848(int iParam0, unknown uParam1)
{
    if (iParam0 != -1)
    {
        sub_507( "MF", "P_SAFE_STOP_SOUND: Stopping Sound...", 0 );
        STOP_SOUND( iParam0, uParam1 );
    }
    else
    {
        sub_507( "MF", "P_SAFE_STOP_SOUND: Not stopping sound (SoundID = -1)", 0 );
    }
    return;
}

void sub_6011(unknown uParam0)
{
    if ((uParam0^) != -1)
    {
        sub_507( "MF", "P_SAFE_RELEASE_SOUND_ID: Releasing Sound...", 0 );
        RELEASE_SOUND_ID( (uParam0^) );
        (uParam0^) = -1;
    }
    else
    {
        sub_507( "MF", "P_SAFE_RELEASE_SOUND_ID: Not RELEASING sound (SoundID != -1)", 0 );
    }
    return;
}

void sub_6210(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (ISEQ_DOES_EXIST( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6322( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The eTempAssetName ISEQ is NOT valid!!!", 0 );
    }
    return;
}

int sub_6322(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            ;
        }
        else if ((uParam1^)[I] == iParam0)
        {
            (uParam1^)[I] = nil;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            Result = I;
        }
        else
        {
            (uParam1^)[I] = nil;
        };;;
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    return -1;
}

void sub_6583(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if ((iParam0->_fU4 == 1) AND (iParam0->_fU320 == 1))
        {
            sub_6627( iParam0, 1 );
        }
        iParam0->_fU0 = 1;
    }
    else
    {
        sub_6627( iParam0, 0 );
        sub_6827( iParam0, 0 );
        if ((IS_PED_DEAD( sub_897() )) == 0)
        {
            TASK_CLEAR_LOOK_AT( sub_897() );
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                SET_PED_FORCED_TO_WALK( sub_897(), 0 );
                iParam0->_fU328 = 0;
            }
        }
        iParam0->_fU8 = 0;
        iParam0->_fU0 = 0;
    }
    return;
}

void sub_6627(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        if (iParam0->_fU12 != nil)
        {
            if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
            {
                ENABLE_GLINT( iParam0->_fU12, 1 );
            }
            else
            {
                iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
            }
        }
        else
        {
            iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
        }
    }
    else if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            ENABLE_GLINT( iParam0->_fU12, 0 );
        }
    }
    return;
}

void sub_6827(int iParam0, int iParam1)
{
    if (iParam1 == 1)
    {
        SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
        SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
        if ((iParam0->_fU72 == 0) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU68 == 1)))
        {
            SET_INTERACTIONTEXT_VISIBLE( 0 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
        else
        {
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
        sub_6978( iParam0 );
        if (iParam0->_fU332 == 1)
        {
            SET_INTERACTIONTEXT_PULSE( 1 );
            SET_INTERACTIONTEXT_PULSE_PERIOD( iParam0->_fU336 );
        }
    }
    else
    {
        SET_INTERACTIONTEXT_VISIBLE( 0 );
        SET_INTERACTIONTEXT_BUTTON_VISIBLE( 0 );
    }
    return;
}

void sub_6978(int iParam0)
{
    if (iParam0->_fU60 == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 0 );
        iParam0->_fU56 = 0;
    }
    else if (iParam0->_fU56 == 1)
    {
        if ((sub_7039( iParam0 )) == 0)
        {
            SET_INTERACTIONTEXT_AVAILABLE( 0 );
            iParam0->_fU56 = 0;
        }
    }
    else if ((sub_7039( iParam0 )) == 1)
    {
        SET_INTERACTIONTEXT_AVAILABLE( 1 );
        iParam0->_fU56 = 1;
    };;;
    return;
}

int sub_7039(int iParam0)
{
    if (((IS_PED_DEAD( sub_897() )) == 0) AND ((IS_PLAYER_DEAD( sub_919() )) == 0))
    {
        if (((IS_PED_RELOADING( sub_897() )) == 1) || (((IS_PED_GETTING_UP( sub_897() )) == 1) || (((IS_PED_PICKING_UP_PICKUP( sub_897() )) == 1) || (((IS_PED_IN_COVER( sub_897() )) == 1) || (((IS_PED_DUCKING( sub_897() )) == 1) || (IS_PLAYER_SHOOTDODGING() == 1))))))
        {
            return 0;
        }
        if (iParam0->_fU304 == 0)
        {
            if ((IS_MONOLOGUE_PLAYING() == 1) || ((IS_ANY_SPEECH_PLAYING( sub_897() )) == 1))
            {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

void sub_7467(unknown uParam0)
{
    int I;

    I = 0;
    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_7501( (uParam0^)[I] );
    }
    return;
}

void sub_7501(unknown uParam0)
{
    if (DOES_PED_EXIST( uParam0 ))
    {
        if ((NOT (IS_PED_DEAD( uParam0 ))) || (IS_PED_DEAD( uParam0 )))
        {
            REMOVE_ALL_PED_WEAPONS( uParam0 );
            DELETE_PED( ref uParam0 );
        }
    }
    return;
}

void sub_7618(unknown uParam0)
{
    if (DOES_OBJECT_EXIST( uParam0 ))
    {
        DELETE_OBJECT( ref uParam0 );
    }
    return;
}

void sub_7702(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_7735( (uParam0^)[I] );
    }
    return;
}

void sub_7735(unknown uParam0)
{
    if ((DOES_PLACEMENT_EXIST( uParam0 )) == 1)
    {
        REMOVE_PLACEMENT( uParam0 );
    }
    return;
}

void sub_7940(unknown uParam0)
{
    char[64] cVar3;
    unknown uVar19;

    if (NOT (IS_PED_DEAD( sub_897() )))
    {
        sub_7992( sub_897(), g_U2953[uParam0], g_U3083[uParam0] );
        FREEZE_PED_POSITION( sub_897(), 1 );
        if (NOT (IS_STRING_NULL( ref g_U1091[uParam0]._fU0 )))
        {
            StrCopy( ref cVar3, "Loading room: ", 64 );
            ConcatString(ref cVar3, ref g_U1091[uParam0]._fU0, 64);
            uVar19 = GET_INTERIOR_FROM_NAME( ref g_U1091[uParam0]._fU64, 0 );
            SET_INTERIOR_ACTIVE( uVar19, 1, 0 );
            LOAD_SCENE_FOR_ROOM_BY_KEY( uVar19, GET_HASH_KEY( ref g_U1091[uParam0]._fU0 ) );
        }
        FREEZE_PED_POSITION( sub_897(), 0 );
    }
    return;
}

void sub_7992(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_COORDS( uParam0, uParam1, 1 );
        SET_PED_HEADING( uParam0, uParam4 );
    }
    return;
}

void sub_8321(int iParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    int iVar9;
    int iVar10;
    int iVar11;
    unknown uVar12;
    unknown uVar13;

    sub_507( "GA", "Restoring the player to the checkpoint - Start", 0 );
    if (l_U0)
    {
        INCREMENT_CHECKPOINT_ATTEMPT();
    }
    g_U648 = 0;
    if (iParam0->_fU0 == 0)
    {
        SCRIPT_ASSERT( "ERROR: Trying to restore a checkpoint that hasn't been saved!!!", 0 );
    }
    sub_8505( iParam0->_fU52 );
    if (SCRIPT_VAR_EXISTS( "SV_LOAD_CNT" ))
    {
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", (SCRIPT_VAR_GET_INT( "SV_LOAD_CNT" )) + 1 );
    }
    else
    {
        SCRIPT_VAR_ADD_INT( "SV_LOAD_CNT" );
        SCRIPT_VAR_SET_INT( "SV_LOAD_CNT", 1 );
    }
    CLEAR_KILL_STREAK_RECORDS();
    AUDIO_MUSIC_SUSPEND( 0 );
    DEACTIVATE_BULLET_TIME( 1, 0 );
    ALLOW_BULLET_CAMERA_TO_GAMEPLAY( 1, 0 );
    REMOVE_ALL_ENVIRONMENT_BLOOD();
    RESET_BLOOD_EFFECTS();
    REMOVE_ALL_GLINTS();
    RESET_DESTROYED_COVER();
    RESET_ALL_PTFX();
    uVar4 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam1 )};
    CLEAR_AREA( iParam0->_fU4, 10000.00000000, 1 );
    if (NOT (IS_PED_DEAD( uParam1 )))
    {
        SET_PED_COORDS( uParam1, iParam0->_fU4, 1 );
        sub_9582( uParam1 );
        SET_PED_HEADING( uParam1, iParam0->_fU16 );
    }
    CLEAR_AREA( uVar4, 3.00000000, 1 );
    LOAD_SCENE( iParam0->_fU4 );
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( 0.00000000, 1065353216, 0 );
    iParam0->_fU28 = GET_PED_MAX_HEALTH( uParam1 );
    SET_PED_HEALTH( uParam1, iParam0->_fU28, 0 );
    RESET_PED_GORE( uParam1 );
    RESET_PED_VISIBLE_DAMAGE( uParam1 );
    REMOVE_ALL_PED_WEAPONS( uParam1 );
    if (NOT (iParam0->_fU56 == -1569615261))
    {
        uVar7 = sub_9874( uParam1, iParam0->_fU56, 0, iParam0->_fU76, 1 );
        sub_10234( uVar7, iParam0 + 96, iParam0 + 100 );
    }
    if (NOT (iParam0->_fU60 == -1569615261))
    {
        uVar7 = sub_9874( uParam1, iParam0->_fU60, 1, iParam0->_fU80, 1 );
        sub_10234( uVar7, iParam0 + 104, iParam0 + 108 );
    }
    if (NOT (iParam0->_fU64 == -1569615261))
    {
        uVar7 = sub_9874( uParam1, iParam0->_fU64, 2, iParam0->_fU84, 1 );
        sub_10234( uVar7, iParam0 + 112, iParam0 + 116 );
    }
    if (NOT (iParam0->_fU68 == -1569615261))
    {
        uVar7 = sub_10519( uParam1, iParam0->_fU68, iParam0->_fU88, 0, 1 );
        sub_10234( uVar7, iParam0 + 120, iParam0 + 124 );
    }
    if (NOT (iParam0->_fU72 == -1569615261))
    {
        uVar7 = sub_10519( uParam1, iParam0->_fU72, iParam0->_fU92, 1, 1 );
        sub_10234( uVar7, iParam0 + 128, iParam0 + 132 );
    }
    if (l_U0 == 1)
    {
        if ((IS_PED_DEAD( uParam1 )) == 0)
        {
            if (iParam0->_fU68 != -1569615261)
            {
                uVar7 = GET_WEAPON_FROM_HAND( uParam1, 0, 0 );
                if ((GET_DOES_WEAPON_EXIST( uVar7 )) == 1)
                {
                    uVar8 = GET_WEAPON_TYPE( uVar7 );
                    if ((sub_11012( uVar8 )) == 1)
                    {
                        iVar9 = GET_MAX_AMMO_IN_HAND_CLIP_MP( uParam1, 0 );
                        iVar10 = iParam0->_fU88;
                        if (iVar10 < iVar9)
                        {
                            iVar11 = iVar9 - iVar10;
                            ADD_AMMO_TO_PED( uParam1, uVar8, iVar11, 0 );
                            SET_WEAPON_AMMO_IN_CLIP( uVar7, iVar9 );
                        }
                    }
                }
            }
        }
    }
    sub_11173( iParam0->_fU52 );
    SET_ADRENALINE_AMT( iParam0->_fU32 );
    if (GET_ADRENALINE_AMT() < 0.20000000)
    {
        SET_ADRENALINE_AMT( 0.20000000 );
    }
    SET_PAYNEKILLER_AMT( iParam0->_fU36 );
    SET_PED_DUCKING( sub_897(), 0 );
    GET_TIME_OF_DAY( ref uVar12, ref uVar13 );
    if (iParam0->_fU140 == 1)
    {
        FREEZE_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    else
    {
        RELEASE_TIME_OF_DAY();
        SET_TIME_OF_DAY( iParam0->_fU40, iParam0->_fU44 );
    }
    SET_PED_SWEAT( uParam1, iParam0->_fU136, -1.00000000 );
    RESTORE_PICKUPS();
    SET_GAMEPLAY_CAM_RELATIVE_HEADING( iParam0->_fU20, 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( iParam0->_fU24, 1065353216, 0 );
    HANDLE_CHECKPOINT_RESTART();
    if (l_U0)
    {
        ADJUST_AMMO_ATTEMPTS();
        ADJUST_PAIN_KILLERS_ATTEMPTS();
    }
    l_U0 = 1;
    DISPLAY_HUD( 1 );
    if (IS_DEATH_PANEL_WIPE_ALLOWED())
    {
        if (IS_BULLET_CAMERA_WIPE_STOPPED())
        {
            RESUME_BULLET_CAMERA_WIPE_ON_FADEIN();
        }
    }
    sub_507( "GA", "Restoring the player to the checkpoint - End", 0 );
    return;
}

void sub_8505(unknown uParam0)
{
    int iVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    iVar3 = 0;
    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        iVar3 = sub_8537( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, iVar3, 513, uParam0 );
    END_CONTEXT( ref uVar4 );
    return;
}

int sub_8537(unknown uParam0)
{
    if (ARE_STRINGS_EQUAL( uParam0, "s_air" ))
    {
        return 21;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_beach" ))
    {
        return 22;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_boat" ))
    {
        return 10;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_booze" ))
    {
        return 0;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_busdep" ))
    {
        return 17;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_cemet" ))
    {
        return 15;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_club" ))
    {
        return 5;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_clubride" ))
    {
        return 4;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fashion" ))
    {
        return 3;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav0" ))
    {
        return 13;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav1" ))
    {
        return 14;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fav2" ))
    {
        return 16;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_fire" ))
    {
        return 12;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_hotel" ))
    {
        return 19;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_intro" ))
    {
        return 1;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_marina" ))
    {
        return 9;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc" ))
    {
        return 7;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_nyc2" ))
    {
        return 8;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_office" ))
    {
        return 11;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_pana" ))
    {
        return 18;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_police" ))
    {
        return 20;
    }
    else if (ARE_STRINGS_EQUAL( uParam0, "s_stad" ))
    {
        return 6;
    };;;;;;;;;;;;;;;;;;;;;;
    return 99;
}

void sub_9582(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        SET_LOAD_COLLISION_FOR_PED_FLAG( uParam0, 1 );
        SET_PED_COORDS_NO_OFFSET( uParam0, uVar3 );
        FREEZE_PED_POSITION( uParam0, 1 );
        REQUEST_COLLISION_AT_COORD( uVar3 );
        if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
        {
            FREEZE_PED_POSITION( uParam0, 0 );
        }
    }
    return;
}

void sub_9874(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's holster MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HOLSTER( uParam0, uParam1, uParam3, uParam2 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HOLSTER( uParam0, uParam2 );
                }
            }
        }
    }
    else
    {
        sub_10190( "[SP]### (F_GivePedWeaponToHolster) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

void sub_10190(unknown uParam0)
{
    return;
}

void sub_10234(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        if (IS_BIT_SET( (uParam1^), I ))
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 1 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, IS_BIT_SET( (uParam2^), I ) );
        }
        else
        {
            ENABLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
            TOGGLE_WEAPON_ATTACHMENT( uParam0, I, 0 );
        }
    }
    return;
}

void sub_10519(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, int iParam4)
{
    unknown Result;

    if ((HAS_WEAPON_LOADED( uParam1 )) == 0)
    {
        SCRIPT_ASSERT( "The weapon model you are giving to the ped's hand MUST BE PRELOADED!!!!", 0 );
    }
    Result = nil;
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        Result = GIVE_WEAPON_TO_PED_HAND( uParam0, uParam1, uParam2, uParam3 );
        if (iParam4 == 1)
        {
            Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
            while (NOT (GET_DOES_WEAPON_EXIST( Result )))
            {
                WAIT( 0 );
                if ((IS_PED_DEAD( uParam0 )) == 0)
                {
                    Result = GET_WEAPON_FROM_HAND( uParam0, uParam3, 0 );
                }
            }
        }
    }
    else
    {
        sub_10190( "[SP]### (F_GivePedWeapon) Error: Trying to give a dead ped a weapon. ###" );
    }
    return Result;
}

int sub_11012(unknown uParam0)
{
    int iVar3;

    iVar3 = GET_WEAPONTYPE_AMMO( uParam0 );
    if ((iVar3 == -1383321053) || ((iVar3 == -1295933220) || ((iVar3 == 1138793073) || (iVar3 == -1088031219))))
    {
        return 1;
    }
    return 0;
}

void sub_11173(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
    {
        uVar3 = sub_8537( ref uVar20 );
    }
    STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, uParam0 );
    sub_11245( uVar3 );
    START_CONTEXT( ref uVar4 );
    return;
}

void sub_11245(int iParam0)
{
    if (iParam0 != 3)
    {
        END_CONTEXT( "S_FAS_GG_PT" );
    }
    if (iParam0 != 5)
    {
        END_CONTEXT( "S_CLB_GG_M3" );
        END_CONTEXT( "S_CLB_MS" );
    }
    if (iParam0 != 6)
    {
        END_CONTEXT( "S_STA_GG_M1" );
        END_CONTEXT( "S_STA_GG_M81" );
    }
    if (iParam0 != 7)
    {
        END_CONTEXT( "S_NY1_GG_19" );
    }
    if (iParam0 != 8)
    {
        END_CONTEXT( "S_NY2_GG_40" );
        END_CONTEXT( "S_NY2_GG_M5" );
    }
    if (iParam0 != 9)
    {
        END_CONTEXT( "S_MAR_GG_LM" );
        END_CONTEXT( "S_MAR_GG_9M" );
    }
    if (iParam0 != 11)
    {
        END_CONTEXT( "S_OFF_GG_MD" );
    }
    if (iParam0 != 14)
    {
        END_CONTEXT( "S_FV1_GG_SP" );
        END_CONTEXT( "S_FV1_GG_SA" );
    }
    if (iParam0 != 15)
    {
        END_CONTEXT( "S_NYC_GG_6M" );
        END_CONTEXT( "S_NYC_GG_A9" );
    }
    if (iParam0 != 16)
    {
        END_CONTEXT( "S_FV2_GG_D5" );
        END_CONTEXT( "S_FV2_GG_97" );
    }
    if (iParam0 != 17)
    {
        END_CONTEXT( "S_BUS_GG_M4" );
        END_CONTEXT( "S_BUS_GG_FN" );
    }
    if (iParam0 != 18)
    {
        END_CONTEXT( "S_PAN_GG_AK" );
        END_CONTEXT( "S_PAN_GG_SS" );
    }
    if (iParam0 != 19)
    {
        END_CONTEXT( "S_HOT_GG_G3" );
        END_CONTEXT( "S_HOT_GG_LA" );
    }
    if (iParam0 != 20)
    {
        END_CONTEXT( "S_POL_GG_G6" );
        END_CONTEXT( "S_POL_GG_RP" );
        END_CONTEXT( "S_POL_GG_MP" );
    }
    if (iParam0 != 21)
    {
        END_CONTEXT( "S_AIR_GG_RG" );
        END_CONTEXT( "S_AIR_GG_PD" );
    }
    return;
}

void sub_12543()
{
    int iVar2;
    int I;
    int J;

    iVar2 = l_U158;
    if (l_U849 != -1)
    {
        if (NOT (sub_12604( l_U494, "po_anim2", "Dr_exch_slide" )))
        {
            sub_507( "GA", "Stopping exit door sounds.", 0 );
            sub_5848( l_U849, 0 );
            sub_6011( ref l_U849 );
        }
    }
    switch (l_U158)
    {
        case 0: break;
        case 1:
        sub_507( "SP", "eCheckpointState = CP_INITIALIZE_SCRIPT_DATA", 0 );
        sub_12914();
        sub_13102();
        SET_SCRIPT_CONTROL_RESET_ON_PLAYER_DEATH( 1 );
        l_U158 = 2;
        sub_507( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        break;
        case 2:
        sub_507( "SP", "eCheckpointState = CP_INITIAL_REQUEST_ASSETS", 0 );
        g_U822[3] = 0;
        sub_16410();
        sub_20912();
        l_U158 = 3;
        sub_507( "SP", "eCheckpointState = CP_INITIAL_LOADING_ASSETS", 0 );
        break;
        case 3:
        if ((sub_23695( ref g_U2613 )) AND ((sub_23568( ref g_U2889 )) AND ((sub_23377( ref g_U2662 )) AND ((sub_23250( ref g_U2741 )) AND (sub_23130( ref g_U2468 ))))))
        {
            if ((NOT l_U109._fU0) AND (g_U820 == 3))
            {
                l_U158 = 4;
                sub_507( "SP", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
            }
            else
            {
                l_U158 = 6;
                sub_507( "SP", "eCheckpointState = CP_PRE_CREATE_PE_PEDS", 0 );
            }
        }
        break;
        case 4:
        sub_507( "GA", "eCheckpointState = CP_LEVEL_LOAD_SCRIPT_SETUP", 0 );
        l_U160 = 0;
        g_U842[3] = 1;
        if (NOT (sub_24051( ref l_U109 )))
        {
            sub_10519( sub_897(), -862236369, 200, 0, 0 );
            sub_9874( sub_897(), -862236369, 0, 200, 0 );
            l_U158 = 5;
            sub_507( "GA", "eCheckpointState = CP_LEVEL_LOAD_WAIT_FOR_PLAYER_WEAPONS", 0 );
        }
        else
        {
            l_U158 = 6;
            sub_507( "GA", "eCheckpointState = CP_PRE_CREATE_PE_PEDS", 0 );
        }
        break;
        case 5:
        if (NOT (IS_PED_DEAD( sub_897() )))
        {
            if ((GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HOLSTER( sub_897(), 0 ) )) AND (GET_DOES_WEAPON_EXIST( GET_WEAPON_FROM_HAND( sub_897(), 0, 0 ) )))
            {
                g_U821 = 3;
                sub_24539( ref l_U109, g_U821, sub_897(), g_U2953[3], g_U3083[3], g_U3127[3], g_U3171[3], 1 );
                l_U158 = 6;
                sub_507( "GA", "eCheckpointState = CP_PRE_CREATE_PE_PEDS", 0 );
            }
        }
        break;
        case 6:
        if (l_U159)
        {
            l_U262 = 1;
        }
        if ((l_U262 != 4) AND (l_U262 != 0))
        {
            sub_28254();
        }
        if ((l_U262 > 2) AND (l_U409 == 0))
        {
            l_U409 = 1;
        }
        if ((l_U409 != 4) AND (l_U409 != 0))
        {
            sub_30531();
        }
        if ((l_U409 == 4) AND ((l_U262 == 4) AND (NOT (DOES_PED_EXIST( l_U479 )))))
        {
            sub_32150();
        }
        if ((DOES_PED_EXIST( l_U479 )) AND ((l_U409 == 4) AND (l_U262 == 4)))
        {
            l_U158 = 7;
            sub_507( "SP", "eCheckpointState = CP_WAITING_TO_ACTIVATE", 0 );
        }
        break;
        case 7:
        if (l_U159)
        {
            g_U822[3] = 1;
        }
        if (g_U842[3])
        {
            if (l_U160)
            {
                if (CUTSCENE_IS_LOADED( "MID_02_PP_concat" ))
                {
                    l_U157 = 1;
                    sub_30266( ref l_U343 );
                    for ( I = 0; I < l_U451; I++ )
                    {
                        SET_PED_VISIBLE( l_U451[I], 0 );
                    }
                    sub_32564();
                    l_U158 = 8;
                    sub_507( "GA", "eCheckpointState = CP_HANDLE_MID_02_PP", 0 );
                }
                else
                {
                    sub_507( "GA", "Waiting for MID_02_PP to load.", 0 );
                }
            }
            else if (NOT l_U157)
            {
                sub_33419();
                l_U157 = 1;
            }
            sub_32564();
            l_U158 = 8;
            sub_507( "GA", "eCheckpointState = CP_HANDLE_MID_02_PP", 0 );;
        }
        break;
        case 8:
        if (l_U159)
        {
            sub_39589( ref l_U162, "MID_02_PP_concat", 33726, 33745, 35182, 36233, 36252, 39278, 250, 0 );
            sub_40008( ref l_U162, ref g_U1091[3]._fU64, ref g_U1091[3]._fU0 );
            if (l_U160)
            {
                l_U162._fU104 = 0;
                l_U162._fU4 = 2;
            }
            else
            {
                l_U162._fU4 = 7;
            }
        }
        if (sub_40111( ref l_U162 ))
        {
            if (IS_SCREEN_FADED_OUT())
            {
                DO_SCREEN_FADE_IN( 0 );
            }
            if (g_U821 != 3)
            {
                g_U821 = 3;
                sub_24539( ref l_U109, g_U821, sub_897(), g_U2953[3], g_U3083[3], g_U3127[3], g_U3171[3], 1 );
            }
            l_U158 = 9;
            sub_507( "GA", "eCheckpointState = CP_GAMEPLAY_COMBAT_PRISONER_EXCHANGE", 0 );
        }
        break;
        case 9:
        if (l_U159)
        {
            sub_42627();
        }
        sub_42963( ref l_U343, -1054867456, 0, 1 );
        sub_43114( ref l_U343 );
        sub_43316();
        if ((sub_43126( ref l_U451 )) > 0)
        {
            sub_46501();
        }
        else if (NOT l_U356)
        {
            sub_507( "GA", "Forcing enemies to combat the player.", 0 );
            for ( J = 0; J < l_U343; J++ )
            {
                if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[J] ))))
                {
                    REGISTER_TARGET( l_U343[J], sub_897() );
                    TASK_COMBAT_PED( l_U343[J], sub_897() );
                }
            }
            l_U356 = 1;
        }
        if (NOT l_U383)
        {
            if (NOT (IS_PED_DEAD( sub_897() )))
            {
                if (NOT (IS_PED_IN_COVER( sub_897() )))
                {
                    sub_46924();
                    l_U383 = 1;
                }
            }
        }
        if (NOT l_U384)
        {
            if (NOT (IS_PED_DEAD( sub_897() )))
            {
                if (NOT (IS_PED_IN_COVER( sub_897() )))
                {
                    sub_47181();
                    l_U384 = 1;
                }
            }
        }
        if (NOT l_U382)
        {
            if ((sub_47389( l_U361 )) || ((IS_PED_DEAD( l_U343[2] )) AND (IS_PED_DEAD( l_U343[1] ))))
            {
                sub_47426();
                l_U382 = 1;
            }
        }
        if (NOT l_U385)
        {
            if ((sub_47389( l_U361 )) || (IS_PED_DEAD( l_U343[1] )))
            {
                sub_47701();
                l_U385 = 1;
            }
        }
        if (NOT l_U386)
        {
            if ((sub_47389( l_U361 )) || (IS_PED_DEAD( l_U343[2] )))
            {
                sub_47952();
                l_U386 = 1;
            }
        }
        if (NOT l_U408)
        {
            if (((sub_43126( ref l_U343 )) == 1) || (sub_47389( l_U387 )))
            {
                sub_48199();
                l_U408 = 1;
            }
        }
        if ((NOT IS_BULLET_CAMERA_ACTIVE()) AND ((sub_43126( ref l_U343 )) == 0))
        {
            sub_507( "AT", "Enabling WALLA: S_POLICE_WZ_PARKING_LOT and AMBIENT: S_POLICE_ZONE_PARKING_LOT_GUNFIGHT", 0 );
            ENABLE_WALLA_ZONE( "S_POLICE_WZ_PARKING_LOT", 1 );
            ENABLE_AMBIENT_ZONE( "S_POLICE_ZONE_PARKING_LOT_GUNFIGHT", 1 );
            if (sub_48564())
            {
                sub_45883( "SPOL_LASKA", ref l_U627 );
            }
            sub_507( "AT", "Playing music one shot PRECINCT_ONESHOT_1", 0 );
            AUDIO_MUSIC_PLAY_ONESHOT();
            sub_507( "AT", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_2_3", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2_3", "", 0, 5000, -1, -1082130432, 0 );
            sub_1591( ref l_U861, 6000, 1, 0 );
            sub_1727( ref l_U861 );
            l_U158 = 10;
            sub_507( "GA", "eCheckpointState = CP_GAMEPLAY_OPEN_DOORS", 0 );
        }
        break;
        case 10:
        if (l_U159)
        {
            if (NOT g_U862[4]._fU36)
            {
                g_U862[4]._fU36 = 1;
            }
            sub_15845( ref l_U668, 1 );
            sub_6583( ref l_U496, 1 );
            if (DOES_OBJECT_EXIST( l_U489 ))
            {
                SET_OBJECT_VISIBLE( l_U489, 1 );
            }
            sub_1591( ref l_U879, 1, 1, 0 );
            sub_1727( ref l_U879 );
        }
        sub_1465( 0 );
        if ((sub_48564()) AND ((l_U879._fU16) || (sub_2046( ref l_U879 ))))
        {
            if (NOT sub_1843())
            {
                if (sub_49073( ref l_U647, 0 ))
                {
                    sub_45883( "SPOL_MXCLSCR", ref l_U637 );
                    sub_1591( ref l_U879, l_U888, 1, 0 );
                    sub_1727( ref l_U879 );
                }
                if (sub_2046( ref l_U861 ))
                {
                    sub_1591( ref l_U870, 13000, 1, 0 );
                    sub_1727( ref l_U870 );
                    sub_1591( ref l_U879, l_U888, 1, 0 );
                    sub_1727( ref l_U879 );
                }
                if (NOT (sub_47389( l_U899 )))
                {
                    if (sub_2046( ref l_U870 ))
                    {
                        sub_45883( "SPOL_EXCHDAD", ref l_U889 );
                        sub_1591( ref l_U879, l_U888, 1, 0 );
                        sub_1727( ref l_U879 );
                    }
                }
            }
        }
        sub_43316();
        if (sub_43330( ref l_U496 ))
        {
            sub_49384();
            l_U158 = 11;
            sub_507( "GA", "eCheckpointState = CP_HANDLE_DOOR_OPEN_NIS", 0 );
        }
        break;
        case 11:
        sub_49922( ref l_U937 );
        if (l_U159)
        {
            l_U799 = 1;
            sub_507( "AT", "Forcing music PRECINCT_FINAL mood PRECINCT_01_5", 0 );
            AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_5", "", 0, 5000, 7000, -1082130432, 0 );
        }
        sub_50801();
        if (l_U799 == 5)
        {
            l_U158 = 12;
            sub_507( "GA", "eCheckpointState = CP_GAMEPLAY_EXIT_PRISONER_EXCHANGE", 0 );
        }
        break;
        case 12:
        sub_43316();
        if (sub_52332( ref l_U241, ref l_U220, 0, 0 ))
        {
            g_U842[4] = 1;
            l_U158 = 13;
            sub_507( "GA", "eCheckpointState = CP_FINISHED", 0 );
        }
        break;
        case 13:
        if (g_U821 == 4)
        {
            SET_EXITFLAG_FOR_SCRIPT( GET_ID_OF_THIS_THREAD() );
            l_U158 = 0;
            sub_507( "SP", "eCheckpointState = CP_IDLE", 0 );
        }
        break;
    }
    if (l_U158 != iVar2)
    {
        l_U159 = 1;
    }
    else
    {
        l_U159 = 0;
    }
    return;
}

int sub_12604(unknown uParam0, unknown uParam1, unknown uParam2)
{
    if ((DOES_OBJECT_EXIST( uParam0 )) == 1)
    {
        if (IS_OBJECT_PLAYING_ANIM( uParam0, uParam2, uParam1 ))
        {
            return 1;
        }
    }
    return 0;
}

void sub_12914()
{
    sub_507( "GA", "P_INITIALIZE_SCRIPT_DATA start", 0 );
    l_U159 = 1;
    l_U262 = 0;
    l_U263 = 0;
    l_U382 = 0;
    l_U383 = 0;
    l_U384 = 0;
    l_U385 = 0;
    l_U386 = 0;
    l_U408 = 0;
    l_U356 = 0;
    l_U409 = 0;
    l_U410 = 0;
    l_U850 = 0;
    l_U798 = 0;
    sub_507( "GA", "P_INITIALIZE_SCRIPT_DATA end", 0 );
    return;
}

void sub_13102()
{
    sub_507( "GA", "P_SET_STATIC_DATA start", 0 );
    sub_13188( ref l_U264[0], 49.64000000, -33.46000000, -3.39000000, 122.38000000, -817482235, 7, 3, 2, 0, 0 );
    sub_13188( ref l_U264[1], 53.81000000, -42.35000000, -3.39000000, 90.00000000, 2066575688, 7, 3, 2, 0, 0 );
    sub_13188( ref l_U264[2], 58.75000000, -37.95000000, -3.39000000, 90.00000000, 1067918748, 7, 3, 2, 0, 0 );
    sub_13188( ref l_U264[3], 60.11000000, -34.80000000, -3.40000000, 125.77000000, 1107387953, 7, 3, 2, 0, 0 );
    sub_13188( ref l_U264[4], 60.12000000, -42.36000000, -3.40000000, 91.65000000, 1621364061, 7, 3, 2, 0, 0 );
    sub_13188( ref l_U264[5], 58.81000000, -41.86000000, -3.39000000, 86.99000000, -1709207745, 7, 3, 2, 0, 0 );
    sub_13188( ref l_U411[0], 39.25620000, -37.69260000, -3.40155300, 238.21550000, -1946849719, 8, 4, 2, 5, 0 );
    sub_13188( ref l_U411[1], 41.48700000, -34.07420000, -3.40155300, 158.91240000, 331247629, 8, 4, 2, 5, 0 );
    sub_13188( ref l_U411[2], 42.47650000, -39.92310000, -3.40155300, 254.61790000, 887553342, 8, 4, 2, 5, 0 );
    sub_13188( ref l_U466, 32.98461000, -36.07926000, -3.30000000, 268.12000000, 332159537, 6, 5, 2, 0, 0 );
    sub_13760( ref l_U361, "tb_PE_UntetherUFE", 38.03000000, -37.54000000, -3.50000000, 3.00000000, 10.57000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13760( ref l_U387, "tb_PE_ReleaseSecurityBoothGuy", 41.94000000, -37.94000000, -3.50000000, 3.83000000, 12.10000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13760( ref l_U647, "tb_PE_NearExitDoor", 55.59000000, -42.76000000, -3.60000000, 4.04000000, 2.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13760( ref l_U582, "tb_PE_ButtonPOI", 59.59000000, -42.26000000, -3.50000000, 3.00000000, 3.00000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13760( ref l_U603, "tb_PE_ButtonAction", 58.71000000, -42.29000000, -3.50000000, 1.25000000, 1.25000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13760( ref l_U241, "tb_PE_CutSys_NearDoorExit", 55.47000000, -42.69000000, -3.40000000, 4.88000000, 4.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13760( ref l_U220, "tb_PE_DoorExit", 55.47000000, -44.84000000, -3.40000000, 2.29000000, 3.00000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_13760( ref l_U899, "tb_PE_PlayerInSecurityBooth", 60.14000000, -39.86000000, -3.50000000, 3.83000000, 14.88000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14491( ref l_U358, "te_PE_SecurityBoothLeftWindow", 60.01000000, -34.74000000, -3.50000000, 4.41000000, 2.03000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14491( ref l_U357, "te_PE_InsideSecurityBooth", 60.01000000, -39.82000000, -3.50000000, 4.41000000, 15.31000000, 4.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14491( ref l_U359, "te_PE_PrisonerExchange", 49.12000000, -37.98000000, -3.50000000, 26.09000000, 19.09000000, 3.00000000, 0.00000000, 0.00000000, 0.00000000, 1 );
    sub_14491( ref l_U360, "te_PE_Desk", 50.98000000, -33.42000000, -3.43000000, 2.39000000, 7.33000000, 3.00000000, 0.00000000, 0.00000000, 90.00000000, 1 );
    sub_14807( ref l_U496, 1, l_U624, l_U603, l_U582, 0, 0 );
    sub_15485( ref l_U496, 30, "POI_POLSECURITY" );
    sub_15676( ref l_U668, 2, l_U754, l_U754, l_U754, 1.50000000, 3.00000000, 1, 0 );
    sub_15485( ref l_U668, 30, "POI_PRISONERLOG" );
    sub_15813( ref l_U668, 0 );
    sub_15845( ref l_U668, 0 );
    sub_15905( ref l_U668, 1 );
    sub_15973( ref l_U930, -2084425897, 32.63453000, -34.34916000, -1.96272000, 0.00000000, 0.00000000, 0.00000000 );
    sub_16021( ref l_U930, 1 );
    sub_507( "GA", "P_SET_STATIC_DATA end", 0 );
    return;
}

void sub_13188(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10)
{
    iParam0->_fU0 = {uParam1};
    iParam0->_fU20 = uParam5;
    iParam0->_fU12 = uParam4;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU36 = uParam8;
    iParam0->_fU32 = uParam9;
    iParam0->_fU44 = 0;
    iParam0->_fU16 = GET_SCENE_PED_MODEL( uParam5 );
    iParam0->_fU48 = uParam10;
    return;
}

void sub_13760(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    StrCopy( ref iParam0->_fU0, uParam1, 64 );
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = {uParam2};
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 1, iParam0 + 0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14491(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11)
{
    iParam0->_fU0 = uParam1;
    GAMEPLAY_HELPER_BOX_ANGLED_CREATE( 2, iParam0->_fU0, uParam2, uParam5, uParam6, uParam7, uParam8, uParam11 );
    return;
}

void sub_14807(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21, unknown uParam22, unknown uParam23, unknown uParam24, unknown uParam25, unknown uParam26, unknown uParam27, unknown uParam28, unknown uParam29, unknown uParam30, unknown uParam31, unknown uParam32, unknown uParam33, unknown uParam34, unknown uParam35, unknown uParam36, unknown uParam37, unknown uParam38, unknown uParam39, unknown uParam40, unknown uParam41, unknown uParam42, unknown uParam43, unknown uParam44, unknown uParam45, unknown uParam46, unknown uParam47, unknown uParam48)
{
    sub_14824( iParam0, uParam47 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU80 = 1;
    iParam0->_fU116 = {uParam5};
    iParam0->_fU88 = 1;
    iParam0->_fU216 = {uParam26};
    iParam0->_fU320 = uParam48;
    iParam0->_fU20 = {uParam2};
    sub_15190( iParam0 );
    return;
}

void sub_14824(int iParam0, unknown uParam1)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = 0;
    iParam0->_fU8 = 0;
    iParam0->_fU12 = nil;
    iParam0->_fU16 = 0;
    iParam0->_fU20 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU52 = 1;
    iParam0->_fU56 = 1;
    iParam0->_fU60 = 0;
    iParam0->_fU64 = 0;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = 0;
    iParam0->_fU80 = 0;
    iParam0->_fU84 = 0;
    iParam0->_fU100 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU112 = 0.00000000;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU96 = 0;
    iParam0->_fU200 = {0.00000000, 0.00000000, 0.00000000};
    iParam0->_fU212 = 0.00000000;
    iParam0->_fU300 = 0;
    iParam0->_fU304 = 1;
    iParam0->_fU308 = 0;
    iParam0->_fU324 = 1;
    iParam0->_fU328 = 0;
    iParam0->_fU340 = 0;
    iParam0->_fU336 = 0.20000000;
    return;
}

void sub_15190(int iParam0)
{
    if (iParam0->_fU12 != nil)
    {
        if ((DOES_GLINT_EXIST( iParam0->_fU12 )) == 1)
        {
            REMOVE_GLINT( iParam0->_fU12 );
        }
    }
    iParam0->_fU12 = CREATE_GLINT( iParam0->_fU16, iParam0->_fU20 );
    sub_15269( iParam0 );
    return;
}

void sub_15269(int iParam0)
{
    if (iParam0->_fU0 == 1)
    {
        if (iParam0->_fU320 == 1)
        {
            if ((iParam0->_fU8 > 0) AND (iParam0->_fU4 == 0))
            {
                sub_6627( iParam0, 1 );
            }
            else if ((iParam0->_fU8 < 2) AND (iParam0->_fU4 == 1))
            {
                sub_6627( iParam0, 1 );
            }
            else if ((iParam0->_fU8 == 1) AND (iParam0->_fU4 == 2))
            {
                sub_6627( iParam0, 1 );
            }
            else
            {
                sub_6627( iParam0, 0 );
            };;;
        }
        else
        {
            sub_6627( iParam0, 0 );
        }
    }
    else
    {
        sub_6627( iParam0, 0 );
    }
    return;
}

void sub_15485(int iParam0, unknown uParam1, unknown uParam2)
{
    StrCopy( ref iParam0->_fU32, uParam2, 16 );
    iParam0->_fU48 = uParam1;
    sub_15516( iParam0 );
    return;
}

void sub_15516(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND (iParam0->_fU0 == 1))
    {
        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
        {
            SET_INTERACTIONTEXT_BUTTON( iParam0->_fU48 );
            SET_INTERACTIONTEXT_TEXT( iParam0 + 32 );
            SET_INTERACTIONTEXT_VISIBLE( 1 );
            SET_INTERACTIONTEXT_BUTTON_VISIBLE( 1 );
            SET_INTERACTIONTEXT_AVAILABLE( 1 );
            iParam0->_fU56 = 1;
        }
    }
    return;
}

void sub_15676(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14)
{
    sub_14824( iParam0, uParam13 );
    iParam0->_fU4 = uParam1;
    iParam0->_fU100 = {uParam5};
    iParam0->_fU112 = uParam11;
    iParam0->_fU200 = {uParam8};
    iParam0->_fU212 = uParam12;
    iParam0->_fU320 = uParam14;
    iParam0->_fU20 = {uParam2};
    sub_15190( iParam0 );
    return;
}

void sub_15813(int iParam0, unknown uParam1)
{
    iParam0->_fU324 = uParam1;
    return;
}

void sub_15845(int iParam0, int iParam1)
{
    if (iParam1 == 0)
    {
        iParam0->_fU60 = 1;
    }
    else
    {
        iParam0->_fU60 = 0;
    }
    sub_6978( iParam0 );
    return;
}

void sub_15905(int iParam0, unknown uParam1)
{
    iParam0->_fU68 = uParam1;
    return;
}

void sub_15973(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU4 = {uParam2};
    iParam0->_fU16 = {uParam5};
    return;
}

void sub_16021(int iParam0, int iParam1)
{
    int iVar4;
    float fVar5;

    if ((sub_16033( iParam0 )) == 0)
    {
        sub_16099( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
    }
    else
    {
        iVar4 = 0;
        fVar5 = 0.00000000;
        GET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, ref iVar4, ref fVar5 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar5 );
    }
    return;
}

int sub_16033(int iParam0)
{
    int iVar3;

    iVar3 = DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS( iParam0->_fU4, 1.00000000, iParam0->_fU0 );
    if (iVar3 == 1)
    {
        return 1;
    }
    return 0;
}

void sub_16099(unknown uParam0)
{
    (uParam0^) = {(uParam0^)};
    return;
}

void sub_16410()
{
    sub_507( "GA", "P_REQUEST_PE_PERSISTENT_ASSETS start", 0 );
    sub_16478( ref l_U145, ref g_U2468 );
    sub_17886( ref g_U3553, ref g_U2741 );
    sub_18869( ref g_U3489, ref g_U2889 );
    sub_19864( ref l_U153, ref g_U2613 );
    sub_507( "GA", "P_REQUEST_PE_PERSISTENT_ASSETS end", 0 );
    return;
}

void sub_16478(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_16513( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_16513(unknown uParam0, unknown uParam1)
{
    int iVar4;

    if (IS_MODEL_IN_CDIMAGE( uParam0 ))
    {
        iVar4 = sub_16548( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar4 >= 0)
        {
            (uParam1^)[iVar4]._fU0 = uParam0;
            (uParam1^)[iVar4]._fU4 = 1;
            sub_16679( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

int sub_16548(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being requested!!!", 0 );
                sub_16679( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is already loading!!!", 0 );
                sub_16679( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_MODEL_LOADED( iParam0 ))
                {
                    sub_16679( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The MODEL_NAME asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_17327( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The MODEL_NAME asset is currently being removed!!!", 0 );
                sub_16679( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_MODEL_LOADED( iParam0 ))
        {
            SCRIPT_ASSERT( "The MODEL_NAME is already loaded, but the asset status flag was not set!!!", 0 );
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_16679( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The MODEL_NAMES - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_16679(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16699( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The MODEL_NAME asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_16699(int iParam0, unknown uParam1)
{
    int I;
    int Result;

    Result = -1;
    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if ((uParam1^)[I] == nil)
        {
            Result = I;
        }
        else if (IS_THREAD_ACTIVE( (uParam1^)[I] ))
        {
            if ((uParam1^)[I] == iParam0)
            {
                (uParam1^)[I] = nil;
                Result = I;
            }
        }
        else
        {
            (uParam1^)[I] = nil;
            Result = I;
        }
    }
    if (NOT (Result == -1))
    {
        return Result;
    }
    SCRIPT_ASSERT( "There are no THREADID indices available for insert!!!", 0 );
    return -1;
}

void sub_17327(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I] = nil;
    }
    return;
}

void sub_17886(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_17907( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 32 );
        (uParam1^)[iVar4]._fU32 = 1;
        sub_18044( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_17907(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU32 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being requested!!!", 0 );
                sub_18044( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is already loading!!!", 0 );
                sub_18044( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
                {
                    sub_18044( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The ANIM_DICT asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 32 );
                    (uParam1^)[Result]._fU32 = 0;
                    sub_17327( ref (uParam1^)[Result]._fU36 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU32 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The ANIM_DICT asset is currently being removed!!!", 0 );
                sub_18044( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU32 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_ANIM_DICT_LOADED( uParam0, 0 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 32 );
            (uParam1^)[iVar6]._fU32 = 1;
            sub_18044( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The ANIM_DICT - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_18044(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16699( uParam2, ref (uParam1^)[uParam0]._fU36 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU36[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ANIM_DICT asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_18869(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_18890( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        StrCopy( ref (uParam1^)[iVar4]._fU0, uParam0, 64 );
        (uParam1^)[iVar4]._fU64 = 1;
        sub_19028( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_18890(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU64 == 1)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being requested!!!", 0 );
                sub_19028( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 2)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is already loading!!!", 0 );
                sub_19028( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 3)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                if (IS_SCRIPT_AUDIO_BANK_LOADED( ref (uParam1^)[Result]._fU0, 1 ))
                {
                    sub_19028( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The AUDIO_BANK asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    StrCopy( ref (uParam1^)[Result]._fU0, "", 64 );
                    (uParam1^)[Result]._fU64 = 0;
                    sub_17327( ref (uParam1^)[Result]._fU68 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU64 == 4)
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[Result]._fU0, uParam0 ))
            {
                SCRIPT_ASSERT( "The AUDIO_BANK asset is currently being removed!!!", 0 );
                sub_19028( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU64 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (IS_SCRIPT_AUDIO_BANK_LOADED( uParam0, 1 ))
        {
            StrCopy( ref (uParam1^)[iVar6]._fU0, uParam0, 64 );
            (uParam1^)[iVar6]._fU64 = 3;
            sub_19028( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The AUDIO_BANK - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_19028(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16699( uParam2, ref (uParam1^)[uParam0]._fU68 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU68[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The AUDIO_BANK asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_19864(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_19899( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_19899(unknown uParam0, unknown uParam1)
{
    int iVar4;

    iVar4 = sub_19920( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
    if (iVar4 >= 0)
    {
        (uParam1^)[iVar4]._fU0 = uParam0;
        (uParam1^)[iVar4]._fU4 = 1;
        sub_20052( iVar4, uParam1, GET_ID_OF_THIS_THREAD() );
    }
    return;
}

int sub_19920(int iParam0, unknown uParam1, unknown uParam2)
{
    int Result;
    int iVar6;

    iVar6 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being requested!!!", 0 );
                sub_20052( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is already loading!!!", 0 );
                sub_20052( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if (HAS_WEAPON_LOADED( iParam0 ))
                {
                    sub_20052( Result, uParam1, uParam2 );
                    return -1;
                }
                else
                {
                    SCRIPT_ASSERT( "The WEAPON_TYPE asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                    (uParam1^)[Result]._fU0 = 0;
                    (uParam1^)[Result]._fU4 = 0;
                    sub_17327( ref (uParam1^)[Result]._fU8 );
                    return Result;
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                SCRIPT_ASSERT( "The WEAPON_TYPE asset is currently being removed!!!", 0 );
                sub_20052( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar6 = Result;
        };;;;;
    }
    if (NOT (iVar6 == -1))
    {
        if (HAS_WEAPON_LOADED( iParam0 ))
        {
            (uParam1^)[iVar6]._fU0 = iParam0;
            (uParam1^)[iVar6]._fU4 = 3;
            sub_20052( iVar6, uParam1, uParam2 );
            return -1;
        }
        else
        {
            return iVar6;
        }
    }
    SCRIPT_ASSERT( "The WEAPON_TYPE - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_20052(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16699( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The WEAPON_TYPE asset thread indices are NOT available!!!", 0 );
    }
    return;
}

void sub_20912()
{
    sub_507( "GA", "P_REQUEST_PE_NONPERSISTENT_ASSETS start", 0 );
    if ((l_U160) AND (g_U820 != 3))
    {
        sub_507( "AT", "Preloading PRECINCT_ONESHOT_2.", 0 );
        AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_2", 0 );
    }
    sub_21076( 1695938919, ref g_U2662 );
    sub_507( "GA", "P_REQUEST_PE_NONPERSISTENT_ASSETS end", 0 );
    return;
}

void sub_21076(unknown uParam0, unknown uParam1)
{
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    int iVar12;

    if (ISEQ_DOES_EXIST( uParam0 ))
    {
        iVar12 = sub_21111( uParam0, uParam1, GET_ID_OF_THIS_THREAD() );
        if (iVar12 >= 0)
        {
            ISEQ_GET_NAME( 32, ref uVar4, uParam0 );
            (uParam1^)[iVar12]._fU0 = uParam0;
            (uParam1^)[iVar12]._fU4 = 1;
            sub_21263( iVar12, uParam1, GET_ID_OF_THIS_THREAD() );
        }
    }
    else
    {
        SCRIPT_ASSERT( "[CCB] ### The eTempAssetName ISEQ is NOT valid!!! ###", 0 );
    }
    return;
}

int sub_21111(int iParam0, unknown uParam1, unknown uParam2)
{
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    int Result;
    int iVar14;

    iVar14 = -1;
    for ( Result = 0; Result <= ((uParam1^) - 1); Result++ )
    {
        if ((uParam1^)[Result]._fU4 == 1)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being requested!!!", 0 );
                sub_21263( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 2)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loading!!!", 0 );
                sub_21263( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 3)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                if ((uParam1^)[Result]._fU0 != 0)
                {
                    if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 2 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        sub_21263( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 1 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset is currently loading!!!", 0 );
                        sub_21263( Result, uParam1, uParam2 );
                        return -1;
                    }
                    else if (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 6 ))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already TERMINATED!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        return Result;
                    }
                    else if ((ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 5 )) || (ISEQ_QUERY_STATE( (uParam1^)[Result]._fU0, 4 )))
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ status is LOADED but the asset is already interrupted or shutting down!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_17327( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    }
                    else
                    {
                        ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                        SCRIPT_ASSERT( "The ISEQ asset status is loaded, but the asset is currently NOT loaded!!!", 0 );
                        (uParam1^)[Result]._fU0 = 0;
                        (uParam1^)[Result]._fU4 = 0;
                        sub_17327( ref (uParam1^)[Result]._fU8 );
                        return Result;
                    };;;;
                }
                else
                {
                    SCRIPT_ASSERT( "Trying to update the state of a DUMMY_SEQUENCE!!!", 0 );
                }
            }
        }
        else if ((uParam1^)[Result]._fU4 == 4)
        {
            if ((uParam1^)[Result]._fU0 == iParam0)
            {
                ISEQ_GET_NAME( 32, ref uVar5, (uParam1^)[Result]._fU0 );
                SCRIPT_ASSERT( "The ISEQ asset is currently being removed!!!", 0 );
                sub_21263( Result, uParam1, uParam2 );
                return -1;
            }
        }
        else if ((uParam1^)[Result]._fU4 == 0)
        {
            iVar14 = Result;
        };;;;;
    }
    if (NOT (iVar14 == -1))
    {
        if (iParam0 != 0)
        {
            if ((ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 3 )) || (ISEQ_QUERY_STATE( (uParam1^)[iVar14]._fU0, 2 )))
            {
                ISEQ_GET_NAME( 32, ref uVar5, iParam0 );
                SCRIPT_ASSERT( "The ISEQ asset is already loaded, but the asset status flag was not set!!!", 0 );
                (uParam1^)[iVar14]._fU0 = iParam0;
                (uParam1^)[iVar14]._fU4 = 3;
                sub_21263( iVar14, uParam1, uParam2 );
                return -1;
            }
            else
            {
                return iVar14;
            }
        }
        else
        {
            SCRIPT_ASSERT( "Trying to check if index is available for a DUMMY_SEQUENCE!!!", 0 );
        }
    }
    SCRIPT_ASSERT( "The ISEQ - STREAMREQ array is full!!!", 0 );
    return -1;
}

void sub_21263(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int iVar5;

    iVar5 = sub_16699( uParam2, ref (uParam1^)[uParam0]._fU8 );
    if (iVar5 >= 0)
    {
        (uParam1^)[uParam0]._fU8[iVar5] = uParam2;
    }
    else
    {
        SCRIPT_ASSERT( "The ISEQ asset thread indices are NOT available!!!", 0 );
    }
    return;
}

int sub_23130(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23250(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU32 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU32 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23377(unknown uParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            ISEQ_GET_NAME( 32, ref uVar3, (uParam0^)[I]._fU0 );
            return 0;
        };;;
    }
    return 1;
}

int sub_23568(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU64 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU64 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_23695(unknown uParam0)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        if ((uParam0^)[I]._fU4 == 1)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 2)
        {
            return 0;
        }
        else if ((uParam0^)[I]._fU4 == 4)
        {
            return 0;
        };;;
    }
    return 1;
}

int sub_24051(unknown uParam0)
{
    sub_507( "rw", "HAS_SAVEFILE_LOADED()", 0 );
    if (IS_ARCADE_MODE_ACTIVE())
    {
        return 0;
    }
    if (HAS_LOAD_JUST_OCCURRED())
    {
        if ((GET_CHECKPOINT_SELECTED() == 1) || (GET_CHECKPOINT_SELECTED() == 0))
        {
            return 0;
        }
        else
        {
            l_U0 = 0;
            CHECKPOINT_STORAGE_LOAD( uParam0, l_U1 );
            sub_8321( uParam0, sub_897() );
        }
        if (IS_IN_STORY_MODE())
        {
            START_CONTEXT( "LEVEL" );
        }
        return 1;
    }
    return 0;
}

void sub_24539(int iParam0, int iParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, int iParam9)
{
    int iVar12;
    int iVar13;
    int iVar14;
    int iVar15;
    int iVar16;

    sub_507( "GA", "Saving the player data for checkpoint - Start", 0 );
    if ((IS_PED_DEAD( uParam2 )) == 0)
    {
        sub_507( "SP", "Saving to scripted data...", 0 );
        RESET_CHECKPOINT_ATTEMPTS();
        if (SCRIPT_VAR_EXISTS( "SV_SAVE_CNT" ))
        {
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", (SCRIPT_VAR_GET_INT( "SV_SAVE_CNT" )) + 1 );
        }
        else
        {
            SCRIPT_VAR_ADD_INT( "SV_SAVE_CNT" );
            SCRIPT_VAR_SET_INT( "SV_SAVE_CNT", 1 );
        }
        sub_11173( iParam1 );
        sub_24798( iParam1 );
        iParam0->_fU52 = iParam1;
        iParam0->_fU4 = {uParam3};
        iParam0->_fU16 = uParam6;
        iParam0->_fU20 = uParam7;
        iParam0->_fU24 = uParam8;
        iParam0->_fU28 = GET_PED_HEALTH( uParam2 );
        iParam0->_fU56 = -1569615261;
        iParam0->_fU60 = -1569615261;
        iParam0->_fU64 = -1569615261;
        iParam0->_fU68 = -1569615261;
        iParam0->_fU72 = -1569615261;
        iParam0->_fU76 = 0;
        iParam0->_fU80 = 0;
        iParam0->_fU84 = 0;
        iParam0->_fU88 = 0;
        iParam0->_fU92 = 0;
        iVar12 = GET_WEAPON_FROM_HAND( uParam2, 0, 0 );
        iVar13 = GET_WEAPON_FROM_HAND( uParam2, 1, 0 );
        iVar14 = GET_WEAPON_FROM_HOLSTER( uParam2, 0 );
        iVar15 = GET_WEAPON_FROM_HOLSTER( uParam2, 1 );
        iVar16 = GET_WEAPON_FROM_HOLSTER( uParam2, 2 );
        if (GET_DOES_WEAPON_EXIST( iVar12 ))
        {
            iParam0->_fU68 = GET_WEAPON_TYPE( iVar12 );
            iParam0->_fU88 = (GET_WEAPON_AMMO( iVar12 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar12 ));
            sub_25249( iVar12, iParam0 + 120, iParam0 + 124 );
        }
        if (GET_DOES_WEAPON_EXIST( iVar13 ))
        {
            iParam0->_fU72 = GET_WEAPON_TYPE( iVar13 );
            iParam0->_fU92 = (GET_WEAPON_AMMO( iVar13 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar13 ));
            sub_25249( iVar13, iParam0 + 128, iParam0 + 132 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar13 ) ))
                {
                    iParam0->_fU92 = GET_WEAPON_AMMO_IN_CLIP( iVar12 );
                }
            }
        }
        if ((iVar14 != iVar13) AND ((iVar14 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar14 ))))
        {
            iParam0->_fU56 = GET_WEAPON_TYPE( iVar14 );
            iParam0->_fU76 = (GET_WEAPON_AMMO( iVar14 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar14 ));
            sub_25249( iVar14, iParam0 + 96, iParam0 + 100 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar14 ) ))
                {
                    iParam0->_fU76 = GET_WEAPON_AMMO_IN_CLIP( iVar14 );
                }
            }
        }
        if ((iVar15 != iVar13) AND ((iVar15 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar15 ))))
        {
            iParam0->_fU60 = GET_WEAPON_TYPE( iVar15 );
            iParam0->_fU80 = (GET_WEAPON_AMMO( iVar15 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar15 ));
            sub_25249( iVar15, iParam0 + 104, iParam0 + 108 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar15 ) ))
                {
                    iParam0->_fU80 = GET_WEAPON_AMMO_IN_CLIP( iVar15 );
                }
            }
        }
        if ((iVar16 != iVar13) AND ((iVar16 != iVar12) AND (GET_DOES_WEAPON_EXIST( iVar16 ))))
        {
            iParam0->_fU64 = GET_WEAPON_TYPE( iVar16 );
            iParam0->_fU84 = (GET_WEAPON_AMMO( iVar16 )) + (GET_WEAPON_AMMO_IN_CLIP( iVar16 ));
            sub_25249( iVar16, iParam0 + 112, iParam0 + 116 );
            if (GET_DOES_WEAPON_EXIST( iVar12 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar12 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar13 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar13 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar14 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar14 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
            if (GET_DOES_WEAPON_EXIST( iVar15 ))
            {
                if (sub_25481( GET_WEAPON_TYPE( iVar15 ), GET_WEAPON_TYPE( iVar16 ) ))
                {
                    iParam0->_fU84 = GET_WEAPON_AMMO_IN_CLIP( iVar16 );
                }
            }
        }
        SAVE_PICKUPS();
        iParam0->_fU32 = GET_ADRENALINE_AMT();
        iParam0->_fU36 = GET_PAYNEKILLER_AMT();
        GET_TIME_OF_DAY( iParam0 + 40, iParam0 + 44 );
        iParam0->_fU140 = IS_TIME_OF_DAY_FROZEN();
        iParam0->_fU136 = GET_PED_SWEAT( uParam2 );
        if (iParam9 == 1)
        {
            if (IS_MAGDEMO() == 0)
            {
                ENABLE_CHECKPOINT_ICON();
            }
        }
        if (iParam1 >= 0)
        {
            sub_27039( iParam0 );
            iParam0->_fU0 = 1;
            if (IS_ARCADE_MODE_ACTIVE() == 0)
            {
                CHECKPOINT_STORAGE_SAVE( iParam0, l_U1, iParam0->_fU52 );
                REQUEST_SAVE();
            }
        }
        if (IS_ARCADE_MODE_ACTIVE())
        {
            UPDATE_ARCADE_CHECK_POINT( iParam0->_fU52 );
        }
    }
    else
    {
        SCRIPT_ASSERT( "Error: Player is dead while saving a checkpoint!!!", 0 );
    }
    sub_507( "GA", "Saving the player data for checkpoint - End", 0 );
    return;
}

void sub_24798(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;
    unknown uVar9;
    unknown uVar10;
    unknown uVar11;
    unknown uVar12;
    unknown uVar13;
    unknown uVar14;
    unknown uVar15;
    unknown uVar16;
    unknown uVar17;
    unknown uVar18;
    unknown uVar19;
    unknown uVar20;
    unknown uVar21;
    unknown uVar22;
    unknown uVar23;
    unknown uVar24;
    unknown uVar25;
    unknown uVar26;
    unknown uVar27;
    unknown uVar28;
    unknown uVar29;
    unknown uVar30;
    unknown uVar31;
    unknown uVar32;
    unknown uVar33;
    unknown uVar34;
    unknown uVar35;

    if (iParam0 >= 0)
    {
        if (GET_NAME_OF_CURRENT_LEVEL( 64, ref uVar20 ))
        {
            uVar3 = sub_8537( ref uVar20 );
        }
        STRING_FORMAT( 64, ref uVar4, "M_{}_L_{}", 2, 513, uVar3, 513, iParam0 - 1 );
        sub_507( "TEH", "Ending context", 0 );
        sub_507( "TEH", "Ending context", 0 );
        END_CONTEXT( ref uVar4 );
    }
    return;
}

void sub_25249(unknown uParam0, unknown uParam1, unknown uParam2)
{
    int I;

    for ( I = 0; I < 26; I++ )
    {
        CLEAR_BIT( uParam1, I );
        CLEAR_BIT( uParam2, I );
        if (IS_WEAPON_ATTACHMENT_ENABLED( uParam0, I ))
        {
            SET_BIT( uParam1, I );
            if (IS_WEAPON_ATTACHMENT_TOGGLED( uParam0, I ))
            {
                SET_BIT( uParam2, I );
            }
        }
    }
    return;
}

void sub_25481(int iParam0, int iParam1)
{
    int Result;

    Result = 0;
    if ((iParam0 == -612753081) || ((iParam0 == 68019059) || ((iParam0 == 456708483) || ((iParam0 == -862236369) || (iParam0 == 406496141)))))
    {
        if ((iParam1 == -612753081) || ((iParam1 == 68019059) || ((iParam1 == 456708483) || ((iParam1 == -862236369) || (iParam1 == 406496141)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 724901397) || ((iParam0 == 57534114) || ((iParam0 == 1308526797) || ((iParam0 == -1074756423) || (iParam0 == -1013714740)))))
    {
        if ((iParam1 == 724901397) || ((iParam1 == 57534114) || ((iParam1 == 1308526797) || ((iParam1 == -1074756423) || (iParam1 == -1013714740)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 514118749) || ((iParam0 == -184942895) || ((iParam0 == -168327769) || ((iParam0 == 1845102363) || (iParam0 == 434544317)))))
    {
        if ((iParam1 == 514118749) || ((iParam1 == -184942895) || ((iParam1 == -168327769) || ((iParam1 == 1845102363) || (iParam1 == 434544317)))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -110877124) || (iParam0 == 319712764))
    {
        if ((iParam1 == -110877124) || (iParam1 == 319712764))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == -1464892298) || ((iParam0 == 1194438308) || ((iParam0 == -1404433099) || ((iParam0 == 1478009203) || ((iParam0 == -691403429) || (iParam0 == 1964270085))))))
    {
        if ((iParam1 == -1464892298) || ((iParam1 == 1194438308) || ((iParam1 == -1404433099) || ((iParam1 == 1478009203) || ((iParam1 == -691403429) || (iParam1 == 1964270085))))))
        {
            Result = 1;
        }
    }
    else if ((iParam0 == 10648147) || (iParam0 == 1224272620))
    {
        if ((iParam1 == 10648147) || (iParam1 == 1224272620))
        {
            Result = 1;
        }
    };;;;;;
    return Result;
}

void sub_27039(int iParam0)
{
    sub_10190( "CHECKPOINT DATA" );
    sub_27078( iParam0->_fU4 );
    sub_27101( iParam0->_fU16 );
    sub_27101( iParam0->_fU20 );
    sub_27101( iParam0->_fU24 );
    sub_27144( iParam0->_fU28 );
    sub_27144( iParam0->_fU56 );
    sub_27144( iParam0->_fU60 );
    sub_27144( iParam0->_fU64 );
    sub_27144( iParam0->_fU68 );
    sub_27144( iParam0->_fU72 );
    sub_27144( iParam0->_fU76 );
    sub_27144( iParam0->_fU80 );
    sub_27144( iParam0->_fU84 );
    sub_27144( iParam0->_fU88 );
    sub_27144( iParam0->_fU92 );
    sub_27101( iParam0->_fU32 );
    sub_27144( iParam0->_fU36 );
    sub_27144( iParam0->_fU40 );
    sub_27144( iParam0->_fU44 );
    sub_27101( iParam0->_fU136 );
    sub_27349( iParam0->_fU140 );
    sub_27144( iParam0->_fU52 );
    sub_10190( "---nRightHolsterAttachmentEnabled: " );
    sub_27144( iParam0->_fU96 );
    sub_10190( "---nRightHolsterAttachmentToggled: " );
    sub_27144( iParam0->_fU100 );
    sub_10190( "---nLeftHolsterAttachmentEnabled: " );
    sub_27144( iParam0->_fU104 );
    sub_10190( "---nLeftHolsterAttachmentToggled: " );
    sub_27144( iParam0->_fU108 );
    sub_10190( "---nRifleHolsterAttachmentEnabled: " );
    sub_27144( iParam0->_fU112 );
    sub_10190( "---nRifleHolsterAttachmentToggled: " );
    sub_27144( iParam0->_fU116 );
    sub_10190( "---nRightHandAttachmentEnabled: " );
    sub_27144( iParam0->_fU120 );
    sub_10190( "---nRightHandAttachmentToggled: " );
    sub_27144( iParam0->_fU124 );
    sub_10190( "---nLeftHandAttachmentEnabled: " );
    sub_27144( iParam0->_fU128 );
    sub_10190( "---nLeftHandAttachmentToggled: " );
    sub_27144( iParam0->_fU132 );
    sub_27144( l_U1 );
    sub_27144( 144 );
    return;
}

void sub_27078(unknown uParam0, unknown uParam1, unknown uParam2)
{
    return;
}

void sub_27101(unknown uParam0)
{
    return;
}

void sub_27144(unknown uParam0)
{
    return;
}

void sub_27349(boolean bParam0)
{
    if (bParam0)
    {
        ;
    }
    return;
}

void sub_28254()
{
    switch (l_U262)
    {
        case 1:
        sub_507( "GA", "e_PE_EnemySpawn = ENTITY_STATE_INIT", 0 );
        sub_28359( ref l_U350, 1056964608, 0 );
        l_U263 = 0;
        l_U262 = 2;
        sub_507( "GA", "e_PE_EnemySpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U343[l_U263] = sub_28612( ref l_U264[l_U263] );
        sub_29451( l_U343[l_U263], ref l_U350 );
        if (NOT (IS_PED_DEAD( l_U343[l_U263] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U343[l_U263], ref g_U3245 );
            SET_PED_AI_TEMPLATE( l_U343[l_U263], "AIT_EXPERT" );
            if (l_U263 != 3)
            {
                SET_PED_COMBAT_RANGE_MAX( l_U343[l_U263], 10.00000000 );
            }
            SET_PED_ALERTNESS( l_U343[l_U263], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U343[l_U263], 1 );
            SET_PED_FLAG_AGGRESSIVE_CHARGER( l_U343[l_U263], 1 );
            SET_PED_RELATIONSHIP( l_U343[l_U263], 2, 4 );
        }
        l_U263++;
        if (l_U263 >= 6)
        {
            l_U262 = 3;
            sub_507( "GA", "e_PE_EnemySpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_30024( ref l_U343, "pi_PE_Enemy" );
        sub_10519( l_U343[0], 434544317, 25000, 0, 0 );
        sub_10519( l_U343[1], 434544317, 25000, 0, 0 );
        sub_10519( l_U343[2], 1308526797, 25000, 0, 0 );
        sub_10519( l_U343[3], 1308526797, 25000, 0, 0 );
        sub_10519( l_U343[4], -862236369, 25000, 0, 0 );
        sub_10519( l_U343[5], -862236369, 25000, 0, 0 );
        sub_30266( ref l_U343 );
        l_U262 = 4;
        sub_507( "GA", "e_PE_EnemySpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_28359(int iParam0, unknown uParam1, boolean bParam2)
{
    iParam0->_fU4 = uParam1;
    iParam0->_fU0 = CREATE_GROUP( 3, 1 );
    if (bParam2)
    {
        while (NOT (DOES_GROUP_EXIST( iParam0->_fU0 )))
        {
            WAIT( 0 );
        }
    }
    SET_GROUP_RATIO_FIRING_AT_VISIBLE( iParam0->_fU0, iParam0->_fU4 );
    SET_GROUP_RATIO_FIRING_AT_INVISIBLE( iParam0->_fU0, iParam0->_fU4 );
    if (iParam0->_fU8)
    {
        SET_GROUP_FORMATION( iParam0->_fU0, iParam0->_fU12 );
        SET_GROUP_FORMATION_SPACING( iParam0->_fU0, iParam0->_fU16 );
        SET_GROUP_FORMATION_MAX_MOVE_SPEED( iParam0->_fU0, iParam0->_fU20 );
    }
    return;
}

void sub_28612(int iParam0)
{
    int iVar3;

    iVar3 = 0;
    if (iParam0->_fU16 == 0)
    {
        if (iParam0->_fU20 != 0)
        {
            iVar3 = GET_SCENE_PED_MODEL( iParam0->_fU20 );
        }
    }
    else
    {
        iVar3 = iParam0->_fU16;
    }
    if ((HAS_MODEL_LOADED( iVar3 )) == 0)
    {
        SCRIPT_ASSERT( "Error: The model you are trying to create a ped with MUST BE PRELOADED!!!!", 0 );
        sub_28782( iParam0->_fU16, 1 );
    }
    iParam0->_fU40 = CREATE_PED( iParam0->_fU24, iParam0->_fU16, iParam0->_fU0, iParam0->_fU12, 1, iParam0->_fU48 );
    if (((IS_PED_DEAD( iParam0->_fU40 )) == 0) AND ((DOES_PED_EXIST( iParam0->_fU40 )) == 1))
    {
        if (iParam0->_fU20 != 0)
        {
            SET_PERSISTENT_PED_VARIATION_ENUM( iParam0->_fU40, iParam0->_fU20 );
        }
        SET_PED_RELATIONSHIP_GROUP( iParam0->_fU40, iParam0->_fU28 );
        SET_PED_RELATIONSHIP( iParam0->_fU40, iParam0->_fU36, iParam0->_fU32 );
        SET_LOAD_COLLISION_FOR_PED_FLAG( iParam0->_fU40, 1 );
        SET_PED_COORDS_NO_OFFSET( iParam0->_fU40, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU40 ) );
        SET_PED_HEADING( iParam0->_fU40, iParam0->_fU12 );
        iParam0->_fU44 = 1;
    }
    else
    {
        SCRIPT_ASSERT( "Error: The ped you created doesn't exist or is dead!", 0 );
    }
    sub_29251( iParam0->_fU40 );
    sub_29331( iParam0->_fU40 );
    return iParam0->_fU40;
}

void sub_28782(unknown uParam0, boolean bParam1)
{
    if ((IS_MODEL_IN_CDIMAGE( uParam0 )) == 0)
    {
        sub_10190( "[SP]### ERROR! (LoadModel) Trying to load a model that isn't in the img! ###" );
    }
    REQUEST_MODEL( uParam0 );
    "[doubled result, dropped if not asigned]";
    if (bParam1)
    {
        while ((HAS_MODEL_LOADED( uParam0 )) == 0)
        {
            WAIT( 0 );
        }
    }
    return;
}

void sub_29251(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_HEALTH( uParam0, 200, 0 );
        SET_PED_ACCURACY( uParam0, -729479261 );
    }
    return;
}

void sub_29331(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        SET_PED_AI_TEMPLATE( uParam0, "AIT_DEFAULT_GENERIC" );
    }
    return;
}

void sub_29451(unknown uParam0, int iParam1)
{
    int iVar4;
    unknown uVar5;

    if ((DOES_GROUP_EXIST( iParam1->_fU0 )) == 0)
    {
        sub_10190( "[SP]### Warning!!! Group does not exist. Creating new group specified attributes. ###" );
        if (iParam1->_fU4 > 0)
        {
            sub_28359( iParam1, iParam1->_fU4, 0 );
        }
        else
        {
            sub_28359( iParam1, 1056964608, 0 );
        }
    }
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        GET_GROUP_SIZE( iParam1->_fU0, ref iVar4, ref uVar5 );
        if (iVar4 == 0)
        {
            SET_PED_AS_GROUP_LEADER( uParam0, iParam1->_fU0 );
        }
        else
        {
            SET_PED_AS_GROUP_MEMBER( uParam0, iParam1->_fU0 );
        }
        SET_PED_NEVER_LEAVES_GROUP( uParam0, 1 );
    }
    return;
}

void sub_30024(unknown uParam0, unknown uParam1)
{
    int I;
    char[32] cVar5;

    for ( I = 0; I < (uParam0^); I++ )
    {
        if (DOES_PED_EXIST( (uParam0^)[I] ))
        {
            StrCopy( ref cVar5, uParam1, 32 );
            ConcatString(ref cVar5, " ", 32);
            ConcatString(ref cVar5, I, 32);
            SET_PED_NAME_DEBUG( (uParam0^)[I], ref cVar5 );
        }
    }
    return;
}

void sub_30266(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_30297( (uParam0^)[I] );
    }
    return;
}

void sub_30297(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 1 );
        SET_PED_VISIBLE( uParam0, 0 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 0 );
        FREEZE_PED_POSITION( uParam0, 1 );
        SET_PED_COLLISION( uParam0, 0 );
        SET_PED_PROOFS( uParam0, 1, 1, 1, 1, 1 );
    }
    return;
}

void sub_30531()
{
    unknown uVar2;
    int I;

    switch (l_U409)
    {
        case 1:
        sub_507( "GA", "e_PE_PrisonerSpawn = ENTITY_STATE_INIT", 0 );
        l_U410 = 0;
        l_U409 = 2;
        sub_507( "GA", "e_PE_PrisonerSpawn = ENTITY_STATE_CREATING", 0 );
        break;
        case 2:
        l_U451[l_U410] = sub_28612( ref l_U411[l_U410] );
        uVar2 = sub_10519( l_U451[l_U410], -862236369, 25000, 0, 0 );
        SET_WEAPON_CHANCE_TO_FIRE_BLANKS( uVar2, 100 );
        if (NOT (IS_PED_DEAD( l_U451[l_U410] )))
        {
            SET_ROOM_FOR_PED_BY_NAME( l_U451[l_U410], ref g_U3245 );
            SET_PED_AI_TEMPLATE( l_U451[l_U410], "AIT_NOVICE" );
            SET_PED_ALERTNESS( l_U451[l_U410], 3 );
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U451[l_U410], 1 );
            SET_PED_RELATIONSHIP( l_U451[l_U410], 2, 3 );
        }
        l_U410++;
        if (l_U410 >= 3)
        {
            l_U409 = 3;
            sub_507( "GA", "e_PE_PrisonerSpawn = ENTITY_STATE_POST_CREATE_SETUP", 0 );
        }
        break;
        case 3:
        sub_30024( ref l_U451, "pi_PE_Prisoner" );
        sub_31047( l_U451[0], 3 );
        sub_31047( l_U451[1], 4 );
        sub_31047( l_U451[2], 5 );
        for ( I = 0; I < l_U451; I++ )
        {
            SET_PED_VISIBLE( l_U451[I], 0 );
        }
        l_U409 = 4;
        sub_507( "GA", "e_PE_PrisonerSpawn = ENTITY_STATE_COMPLETE", 0 );
        break;
    }
    return;
}

void sub_31047(unknown uParam0, unknown uParam1)
{
    char[32] cVar4;
    char[32] cVar12;

    StrCopy( ref cVar4, "DAM_DEAD", 32 );
    switch (uParam1)
    {
        case 0:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
        case 1:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_02", 32 );
        break;
        case 2:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_03", 32 );
        break;
        case 3:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_01", 32 );
        break;
        case 4:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_02", 32 );
        break;
        case 5:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_03", 32 );
        break;
        case 6:
        StrCopy( ref cVar12, "MED_DEAD_POSE_BACK_04", 32 );
        break;
        case 7:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_01", 32 );
        break;
        case 8:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_02", 32 );
        break;
        case 9:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_03", 32 );
        break;
        case 10:
        StrCopy( ref cVar12, "MED_DEAD_POSE_RIGHT_04", 32 );
        break;
        case 11:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_01", 32 );
        break;
        case 12:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_02", 32 );
        break;
        case 13:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_03", 32 );
        break;
        case 14:
        StrCopy( ref cVar12, "MED_DEAD_POSE_LEFT_04", 32 );
        break;
        case 15:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_01", 32 );
        break;
        case 16:
        StrCopy( ref cVar12, "MED_DEAD_POSE_SIT_02", 32 );
        break;
        default:
        StrCopy( ref cVar12, "MED_DEAD_POSE_FRONT_01", 32 );
        break;
    }
    REQUEST_ANIM_DICT( ref cVar4, 0 );
    "[doubled result, dropped if not asigned]";
    while (NOT (HAS_ANIM_DICT_LOADED( ref cVar4, 0 )))
    {
        WAIT( 0 );
        sub_10190( "Waiting for anim dict to load..." );
    }
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        ENABLE_PED_PAIN( uParam0, 0 );
        OVERRIDE_MOVER_PHYSICS_ON_RAGDOLL_SLEEP( uParam0, 1 );
        SET_PED_CORPSE_FROM_ANIM( uParam0, ref cVar4, ref cVar12, 1.00000000, 1 );
    }
    return;
}

void sub_32150()
{
    sub_507( "GA", "P_PE_CREATE_DEAD_COP start", 0 );
    l_U479 = sub_28612( ref l_U466 );
    if (NOT (IS_PED_DEAD( l_U479 )))
    {
        SET_ROOM_FOR_PED_BY_NAME( l_U479, ref g_U3245 );
        SET_PED_NAME_DEBUG( l_U479, "pi_PE_DeadCop" );
    }
    sub_31047( l_U479, 0 );
    sub_507( "GA", "P_PE_CREATE_DEAD_COP end", 0 );
    return;
}

void sub_32564()
{
    sub_507( "GA", "P_PE_CREATE_EXIT_DOORS_AND_BUTTONS start", 0 );
    l_U494 = sub_32668( -1185104559, 54.45000000, -43.91000000, -3.91000000, 0.00000000, 0.00000000, 0.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U494 ))
    {
        FREEZE_OBJECT_POSITION( l_U494, 1 );
        SET_OBJECT_AS_PATH_OBSTACLE( l_U494 );
    }
    l_U487 = sub_32668( l_U486, 58.11400000, -42.57600000, -2.02600000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U487 ))
    {
        FREEZE_OBJECT_POSITION( l_U487, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U487, ref g_U3245 );
    }
    l_U489 = sub_32668( l_U488, 58.11400000, -42.57600000, -2.02600000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U489 ))
    {
        FREEZE_OBJECT_POSITION( l_U489, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U489, ref g_U3245 );
        SET_OBJECT_VISIBLE( l_U489, 0 );
    }
    l_U493 = sub_32668( l_U492, 58.11400000, -42.57000000, -1.85000000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
    if (DOES_OBJECT_EXIST( l_U493 ))
    {
        FREEZE_OBJECT_POSITION( l_U493, 1 );
        ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U493, ref g_U3245 );
    }
    sub_507( "GA", "P_PE_CREATE_EXIT_DOORS_AND_BUTTONS end", 0 );
    return;
}

void sub_32668(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, boolean bParam7, int iParam8, unknown uParam9)
{
    unknown Result;

    if ((HAS_MODEL_LOADED( uParam0 )) == 0)
    {
        SCRIPT_ASSERT( "The model you are trying to create a object with MUST BE PRELOADED!!!!", 0 );
        sub_28782( uParam0, 1 );
    }
    Result = CREATE_OBJECT_NO_OFFSET( uParam0, uParam1, NOT bParam7, uParam9 );
    if (iParam8 == 1)
    {
        while ((DOES_OBJECT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    if ((DOES_OBJECT_EXIST( Result )) == 1)
    {
        SET_OBJECT_ROTATION( Result, uParam4 );
    }
    return Result;
}

void sub_33419()
{
    sub_507( "CMT", "Removing pre-riot interiors...", 0 );
    SET_HELPER_ENABLED( "cs_13_01_B", 0, 0 );
    SET_HELPER_ENABLED( "cs_13_01_A", 0, 0 );
    SET_HELPER_ENABLED( "cs_13_01_C", 0, 0 );
    SET_HELPER_ENABLED( "MILO_cell_preriot_interior", 0, 1 );
    SET_HELPER_ENABLED( "exchange_pre_interior", 0, 1 );
    return;
}

int sub_33726()
{
    return 1;
}

void sub_33745()
{
    unknown uVar2;
    unknown uVar3;

    sub_507( "GA", "P_PE_MID_02_PP_CutsceneRegistration start", 0 );
    if (DOES_OBJECT_EXIST( DOOR_FIND_CLOSEST( g_U3680._fU0, g_U3680._fU4 ) ))
    {
        REGISTER_OBJECT_PRE_SEAMLESS_CUTSCENE( DOOR_FIND_CLOSEST( g_U3680._fU0, g_U3680._fU4 ), "p_pex_door_H", 0 );
    }
    if (NOT (IS_PED_DEAD( sub_897() )))
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_897(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            if (sub_33939( uVar2 ))
            {
                REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_PI_Clt1911_Aa_H", 0 );
            }
            else
            {
                uVar3 = sub_34168();
                if (GET_DOES_WEAPON_EXIST( uVar3 ))
                {
                    REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar3, "W_PI_Clt1911_Aa_H", 0 );
                }
            }
        }
        CUTSCENE_REGISTER_PED_TELEPORT( sub_897(), g_U2953[3], g_U3083[3] );
        CUTSCENE_REGISTER_SET_PLAYER_IN_COVER( "GenCover", "2C3CBEE5_673F1030_Corner1", 1, 1 );
        CUTSCENE_SET_COVER_CAMERA_DIRECTION( g_U3127[3], g_U3171[3] );
    }
    if (NOT (IS_PED_DEAD( l_U343[0] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U343[0], "P_UFE_Sold_B", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U343[0], "/Global/PLGE/NpcCover_LOGIC/COVER_EDGE/COVER_IDLE/COVER_IDLE_LEFT/COVER_EDGE_IDLE_LEFT" );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[0], 1 );
        CUTSCENE_REGISTER_SET_PED_IN_COVER( l_U343[0], "GenCover", "2C3CBEE5_5649BCD5_Popover1", 0, 1 );
        uVar2 = GET_WEAPON_FROM_HAND( l_U343[0], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_SG_BenM3_Aa_H", 0 );
        }
    }
    if (NOT (IS_PED_DEAD( l_U343[1] )))
    {
        REGISTER_PED_PRE_SEAMLESS_CUTSCENE( l_U343[1], "P_UFE_Sold_B^1", 0 );
        CUTSCENE_REGISTER_ACTION_TREE_PLAY_NODE( l_U343[1], "/Global/PLGE/PLGE_Root/PLGE_INITIALIZE_IDLE" );
        CUTSCENE_REGISTER_PED_TELEPORT( l_U343[1], l_U264[1]._fU0, l_U264[1]._fU12 );
        uVar2 = GET_WEAPON_FROM_HAND( l_U343[1], 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar2 ))
        {
            REGISTER_WEAPON_PRE_SEAMLESS_CUTSCENE( uVar2, "W_SG_BenM3_Aa_H^1", 0 );
        }
    }
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_PP_Riot_B", l_U411[0]._fU20 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_PP_Riot_B^1", l_U411[1]._fU20 );
    REGISTER_SCENE_PED_SEAMLESS_CUTSCENE( "G_PP_Riot_B^2", l_U411[2]._fU20 );
    CUTSCENE_ENABLE_SKIP( 0 );
    sub_507( "GA", "P_PE_MID_02_PP_CutsceneRegistration end", 0 );
    return;
}

int sub_33939(unknown uParam0)
{
    int iVar3;

    if ((GET_DOES_WEAPON_EXIST( uParam0 )) == 1)
    {
        iVar3 = GET_WEAPON_TYPE( uParam0 );
        if ((iVar3 == 1194438308) || ((iVar3 == -76667461) || ((iVar3 == -1404433099) || ((iVar3 == 1131969637) || ((iVar3 == -691403429) || ((iVar3 == 1845102363) || ((iVar3 == 150541352) || ((iVar3 == -820634585) || ((iVar3 == -612753081) || ((iVar3 == 811797242) || ((iVar3 == 68019059) || ((iVar3 == -1464892298) || ((iVar3 == 456708483) || ((iVar3 == -862236369) || (iVar3 == 406496141)))))))))))))))
        {
            return 1;
        }
    }
    return 0;
}

int sub_34168()
{
    unknown Result;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_897() )) == 0)
    {
        Result = GET_WEAPON_FROM_HAND( sub_897(), 0, 0 );
        if ((GET_DOES_WEAPON_EXIST( Result )) == 1)
        {
            if ((sub_33939( Result )) == 1)
            {
                return Result;
            }
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_897(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            return uVar3;
        }
        uVar4 = GET_WEAPON_FROM_HOLSTER( sub_897(), 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar4 )) == 1)
        {
            return uVar4;
        }
        uVar5 = GET_WEAPON_FROM_HOLSTER( sub_897(), 1 );
        if ((GET_DOES_WEAPON_EXIST( uVar5 )) == 1)
        {
            return uVar5;
        }
    }
    return 0;
}

void sub_35182()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;

    if (l_U162._fU52)
    {
        if (IS_SCREEN_FADED_OUT())
        {
            DO_SCREEN_FADE_IN( 0 );
        }
        if ((NOT (IS_PLAYER_DEAD( sub_919() ))) AND (NOT (IS_PED_DEAD( sub_897() ))))
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_919(), 1 );
            SET_PED_FORCED_TO_WALK( sub_897(), 0 );
        }
        if (NOT (IS_PED_DEAD( sub_897() )))
        {
            uVar2 = GET_WEAPON_FROM_HAND( sub_897(), 0, 0 );
            if (GET_DOES_WEAPON_EXIST( uVar2 ))
            {
                if (sub_33939( uVar2 ))
                {
                    uVar3 = GET_WEAPON_FROM_HAND( sub_897(), 1, 0 );
                    if (GET_DOES_WEAPON_EXIST( uVar3 ))
                    {
                        SET_WEAPON_VISIBLE( uVar3, 0 );
                    }
                    uVar4 = GET_WEAPON_FROM_HOLSTER( sub_897(), 2 );
                    if (GET_DOES_WEAPON_EXIST( uVar4 ))
                    {
                        SET_WEAPON_VISIBLE( uVar4, 0 );
                    }
                }
                else
                {
                    SET_WEAPON_VISIBLE( uVar2, 0 );
                }
            }
        }
        sub_507( "GA", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_2_3 fade in over 6 seconds", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2_3", "", 0, 6000, -1, -1082130432, 0 );
        AUDIO_MUSIC_STOP_ONESHOT();
        sub_507( "AT", "Playing music one shot PRECINCT_ONESHOT_2", 0 );
        AUDIO_MUSIC_PLAY_ONESHOT();
        ENABLE_WALLA_ZONE( "S_POLICE_WZ_TRANSFER", 0 );
        ENABLE_AMBIENT_ZONE( "S_POLICE_ZONE_TRANSFER_GUNFIGHT", 0 );
        sub_35773( ref l_U189, 29.11601000, -37.59030000, -1.44745100, -3.74997000, -0.00000000, -90.00000000, 45, 300 );
        sub_35984( ref l_U189 );
    }
    if ((NOT l_U850) AND (GET_CUTSCENE_TIME_MS() > 11743))
    {
        sub_507( "AT", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_2_3_4", 0 );
        AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2_3_4", "", 0, 3000, -1, -1082130432, 0 );
        l_U850 = 1;
    }
    return;
}

void sub_35773(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8)
{
    iParam0->_fU4 = {uParam4};
    iParam0->_fU16 = {uParam1};
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = 0;
    iParam0->_fU36 = 0;
    iParam0->_fU84 = uParam8;
    iParam0->_fU88 = 0;
    iParam0->_fU92 = 0;
    iParam0->_fU40 = 0;
    iParam0->_fU44 = 0;
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    iParam0->_fU96 = 0;
    sub_1591( iParam0 + 48, uParam8, 1, 0 );
    iParam0->_fU0 = CREATE_CAM_WITH_PARAMS( ref l_U39, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 1 );
    SET_CAM_PARAMS( iParam0->_fU0, iParam0->_fU16, iParam0->_fU4, iParam0->_fU28, 0, 1, 1 );
    return;
}

void sub_35984(int iParam0)
{
    RENDER_SCRIPT_CAMS( 0, 0, 3000, 0 );
    SET_CAM_ACTIVE( iParam0->_fU0, 1 );
    RENDER_SCRIPT_CAMS( 1, 0, 3000, 0 );
    sub_1727( iParam0 + 48 );
    iParam0->_fU32 = 1;
    iParam0->_fU40 = 1;
    return;
}

int sub_36233()
{
    return 1;
}

void sub_36252()
{
    int I;

    SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[3], 1065353216, 0 );
    SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[3], 1065353216, 0 );
    sub_35773( ref l_U189, 29.11601000, -37.59030000, -1.44745100, -3.74997000, -0.00000000, -90.00000000, 45, 300 );
    sub_35984( ref l_U189 );
    if (NOT l_U160)
    {
        sub_7992( sub_897(), g_U2953[3], g_U3083[3] );
        if (NOT (IS_PLAYER_DEAD( sub_919() )))
        {
            SNAP_PLAYER_TO_COVERPOINT( sub_919(), "GenCover", "2C3CBEE5_673F1030_Corner1", 1 );
        }
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( g_U3127[3], 1065353216, 0 );
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( g_U3171[3], 1065353216, 0 );
    }
    sub_507( "GA", "F_PE_START_GAMEPLAY start", 0 );
    sub_36559( ref g_U3694, 1 );
    sub_16021( ref g_U3694, 1 );
    sub_36699( ref g_U3694, 0 );
    sub_36559( ref g_U3680, 1 );
    sub_16021( ref g_U3680, 1 );
    sub_36789( ref g_U3701, 0, 1, 1.00000000 );
    sub_36699( ref g_U3701, 1 );
    sub_36559( ref g_U3715, 1 );
    sub_16021( ref g_U3715, 1 );
    sub_36969( ref l_U343 );
    for ( I = 0; I < l_U451; I++ )
    {
        SET_PED_VISIBLE( l_U451[I], 1 );
    }
    sub_37160();
    sub_37475();
    sub_37845();
    sub_38215();
    sub_38385();
    sub_38677();
    sub_16021( ref g_U3694, 0 );
    sub_36789( ref g_U3694, 0, 0, 1065353216 );
    sub_36699( ref g_U3694, 1 );
    sub_1591( ref l_U457, GET_RANDOM_INT_IN_RANGE( l_U455, l_U456 ), 1, 0 );
    sub_1727( ref l_U457 );
    sub_507( "AT", "Preloading PRECINCT_ONESHOT_1.", 0 );
    AUDIO_MUSIC_REQUEST_ONESHOT( "PRECINCT_ONESHOT_1", 0 );
    sub_507( "AT", "Forcing music PRECINCT_FINAL mood PRECINCT_01_1_2_3_4", 0 );
    AUDIO_MUSIC_FORCE_TRACK( "PRECINCT_FINAL", "PRECINCT_01_1_2_3_4", "", 0, 3000, -1, -1082130432, 0 );
    CUTSCENE_ENABLE_SKIP( 1 );
    return;
}

void sub_36559(int iParam0, int iParam1)
{
    if ((sub_16033( iParam0 )) == 0)
    {
        sub_16099( iParam0 );
    }
    if (iParam1 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, 0.00000000 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, 0.00000000 );
    }
    return;
}

void sub_36699(int iParam0, unknown uParam1)
{
    if ((sub_16033( iParam0 )) == 0)
    {
        sub_16099( iParam0 );
    }
    DOOR_FIND_CLOSEST_SET_LATCH( iParam0->_fU0, iParam0->_fU4, uParam1 );
    return;
}

void sub_36789(int iParam0, int iParam1, int iParam2, unknown uParam3)
{
    float fVar6;

    if ((sub_16033( iParam0 )) == 0)
    {
        sub_16099( iParam0 );
    }
    fVar6 = 0.00000000;
    if (iParam1 == 1)
    {
        fVar6 = uParam3;
    }
    else
    {
        fVar6 = -uParam3;
    }
    if (iParam2 == 1)
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 1, fVar6 );
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    else
    {
        SET_STATE_OF_CLOSEST_DOOR_OF_TYPE( iParam0->_fU0, iParam0->_fU4, 0, fVar6 );
    }
    return;
}

void sub_36969(unknown uParam0)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_37000( (uParam0^)[I] );
    }
    return;
}

void sub_37000(unknown uParam0)
{
    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        SET_PED_FREEZE_PROCESSING( uParam0, 0 );
        SET_PED_VISIBLE( uParam0, 1 );
        SET_PED_VISIBLE_DURING_SEQUENCE( uParam0, 1 );
        FREEZE_PED_POSITION( uParam0, 0 );
        SET_PED_COLLISION( uParam0, 1 );
        SET_PED_PROOFS( uParam0, 0, 0, 0, 0, 0 );
    }
    return;
}

void sub_37160()
{
    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[0] ))))
    {
        sub_507( "AT", "P_SETUP_ENEMY_0.", 0 );
        if (NOT (IS_PED_USING_MP3_COVER_TASK( l_U343[0] )))
        {
            TASK_COMBAT_SNAP_TO_COVER( l_U343[0], "GenCover", "2C3CBEE5_5649BCD5_Popover1", 0 );
        }
        sub_37325( ref l_U360, l_U343[0], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[0], 1 );
        SET_PED_SUGGESTED_COVER_POINT( l_U343[0], "GenCover", "2C3CBEE5_5649BCD5_Popover1" );
    }
    return;
}

void sub_37325(int iParam0, unknown uParam1, unknown uParam2)
{
    if (((IS_PED_DEAD( uParam1 )) == 0) AND ((DOES_PED_EXIST( uParam1 )) == 1))
    {
        SET_PED_TETHERING_ADD_BOX( uParam1, iParam0->_fU0 );
        SET_PED_TETHERING_OPTION( uParam1, uParam2 );
    }
    return;
}

void sub_37475()
{
    unknown uVar2;

    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[1] ))))
    {
        sub_507( "AT", "P_SETUP_ENEMY_1.", 0 );
        sub_37325( ref l_U359, l_U343[1], 1 );
        SET_PED_SUGGESTED_COVER_POINT( l_U343[1], "GenCover", "2C3CBEE5_7760F35B_Corner2" );
        REGISTER_TARGET( l_U343[1], sub_897() );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( l_U451[0] )))
        {
            TASK_SHOOT_AT_PED( 0, l_U451[0], 500, -256437761, 0, 0, 0 );
        }
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 43.81000000, -40.19000000, -3.40000000, 3, 20000, 0.25000000, 256, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "2C3CBEE5_7760F35B_Corner2", 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U343[1], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

void sub_37845()
{
    unknown uVar2;

    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[2] ))))
    {
        sub_507( "AT", "P_SETUP_ENEMY_2.", 0 );
        sub_37325( ref l_U359, l_U343[2], 1 );
        SET_PED_SUGGESTED_COVER_POINT( l_U343[2], "GenCover", "2C3CBEE5_6D8EDFB7_Corner1" );
        REGISTER_TARGET( l_U343[2], sub_897() );
        OPEN_SEQUENCE_TASK( ref uVar2 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 1 );
        if (NOT (IS_PED_DEAD( l_U451[1] )))
        {
            TASK_SHOOT_AT_PED( 0, l_U451[1], 500, -256437761, 0, 0, 0 );
        }
        TASK_FOLLOW_NAV_MESH_TO_COORD( 0, 41.90000000, -35.09000000, -3.40000000, 3, 20000, 0.25000000, 256, 0 );
        TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( 0, 0 );
        TASK_COMBAT_MOVE_TO_COVER( 0, "GenCover", "2C3CBEE5_6D8EDFB7_Corner1", 0 );
        CLOSE_SEQUENCE_TASK( uVar2 );
        TASK_PERFORM_SEQUENCE( l_U343[2], uVar2 );
        CLEAR_SEQUENCE_TASK( uVar2 );
    }
    return;
}

void sub_38215()
{
    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[3] ))))
    {
        sub_507( "AT", "P_SETUP_ENEMY_3.", 0 );
        sub_37325( ref l_U358, l_U343[3], 1 );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[3], 1 );
        REGISTER_TARGET( l_U343[3], sub_897() );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( l_U343[3], 60.11000000, -34.80000000, -3.40000000, 0 );
    }
    return;
}

void sub_38385()
{
    if ((NOT (IS_PED_DEAD( l_U343[4] ))) AND (NOT (IS_PED_DEAD( l_U343[4] ))))
    {
        sub_507( "AT", "P_SETUP_ENEMY_4.", 0 );
        sub_37325( ref l_U357, l_U343[4], 1 );
        SET_PED_SUGGESTED_COVER_POINT( l_U343[4], "GenCover", "2C3CBEE5_C8589875_Popover2" );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[4], 1 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U343[4], 1 );
        SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( l_U343[4], 1 );
        SET_PED_FLAG_BLOCK_LEANFIRE_IN_COVER( l_U343[4], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U343[4], 0 );
        REGISTER_TARGET( l_U343[4], sub_897() );
        TASK_COMBAT_MOVE_TO_COVER_COORDS( l_U343[4], 60.12000000, -42.36000000, -3.40000000, 0 );
    }
    return;
}

void sub_38677()
{
    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[5] ))))
    {
        sub_507( "AT", "P_SETUP_ENEMY_5.", 0 );
        sub_37325( ref l_U357, l_U343[5], 1 );
        SET_PED_SUGGESTED_COVER_POINT( l_U343[5], "GenCover", "2C3CBEE5_98205D89_Corner2" );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[5], 1 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U343[5], 1 );
        SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( l_U343[5], 1 );
        SET_PED_FLAG_BLOCK_LEANFIRE_IN_COVER( l_U343[5], 1 );
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS( l_U343[5], 0 );
        REGISTER_TARGET( l_U343[5], sub_897() );
        TASK_COMBAT_SNAP_TO_COVER( l_U343[5], "GenCover", "2C3CBEE5_98205D89_Corner2", 0 );
    }
    return;
}

int sub_39278()
{
    if ((IS_SCREEN_FADED_OUT()) || (IS_DEATH_PANEL_WIPE_ALLOWED()))
    {
        DO_SCREEN_FADE_IN( 0 );
    }
    if (sub_39321( ref l_U189, 1 ))
    {
        sub_39475( 500, 1, 0, -859915232, -859915232, 0 );
        return 1;
    }
    return 0;
}

int sub_39321(int iParam0, boolean bParam1)
{
    if (bParam1 == 1)
    {
        if (NOT iParam0->_fU44)
        {
            if ((ref iParam0->_fU48->_fU16) || (sub_2046( iParam0 + 48 )))
            {
                iParam0->_fU44 = 1;
                iParam0->_fU36 = 1;
                return 1;
            }
        }
    }
    if (NOT bParam1)
    {
        if ((ref iParam0->_fU48->_fU16) || (sub_2046( iParam0 + 48 )))
        {
            iParam0->_fU36 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_39475(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, float fParam4, unknown uParam5)
{
    SET_CAM_SIDE_LEFT( uParam2 );
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_HEADING( uParam3, 1065353216, 0 );
    }
    if (fParam4 != -1E8)
    {
        SET_GAMEPLAY_CAM_RELATIVE_PITCH( fParam4, 1065353216, 0 );
    }
    RENDER_SCRIPT_CAMS( 0, uParam1, uParam0, uParam5 );
    return;
}

void sub_39589(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9)
{
    sub_507( "MSWW", "CutSys_CreateCutsceneWithBlendOut", "###" );
    return sub_39714( uParam0, uParam1, uParam2, uParam3, uParam4, uParam5, uParam9, 1, uParam6, uParam7, 0, 39674, 39692, uParam8 );
}

void sub_39674()
{
    return;
}

int sub_39692()
{
    return 1;
}

void sub_39714(int iParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13)
{
    iParam0->_fU0 = uParam1;
    iParam0->_fU8 = uParam2;
    iParam0->_fU12 = uParam3;
    iParam0->_fU16 = uParam4;
    iParam0->_fU20 = uParam5;
    iParam0->_fU24 = uParam6;
    iParam0->_fU28 = uParam7;
    iParam0->_fU32 = uParam8;
    iParam0->_fU36 = uParam9;
    iParam0->_fU40 = uParam10;
    iParam0->_fU44 = uParam11;
    iParam0->_fU48 = uParam12;
    iParam0->_fU52 = 1;
    iParam0->_fU56 = uParam13;
    iParam0->_fU60 = 1;
    iParam0->_fU64 = 1;
    iParam0->_fU68 = 0;
    iParam0->_fU72 = 0;
    iParam0->_fU76 = "Pants";
    iParam0->_fU80 = "Pants";
    iParam0->_fU84 = {0, 0, 0};
    iParam0->_fU100 = 1;
    iParam0->_fU104 = 1;
    return (iParam0^);
}

void sub_40008(int iParam0, unknown uParam1, unknown uParam2)
{
    iParam0->_fU68 = 1;
    iParam0->_fU72 = 1;
    iParam0->_fU76 = uParam1;
    iParam0->_fU80 = uParam2;
    iParam0->_fU24 = 1;
    return;
}

void sub_40111(int iParam0)
{
    int iVar3;
    int Result;
    unknown uVar5;

    iVar3 = iParam0->_fU4;
    Result = 0;
    switch (iParam0->_fU4)
    {
        case 0: break;
        case 1:
        if (IS_ARCADE_MODE_ACTIVE())
        {
            sub_507( "AT", "ARCADE MODE ACTIVE. SKIPPING BINK STATE.", "###" );
            iParam0->_fU4 = 2;
        }
        else if (iParam0->_fU52)
        {
            sub_507( "AT", "Setting CUTSCENE_SET_WAIT_FOR_MOVIE.", "###" );
            CUTSCENE_SET_WAIT_FOR_MOVIE( 9 );
            SET_TRANSITION_MOVIE_SKIPPABLE( 0 );
            iParam0->_fU96 = 0;
        }
        if (NOT iParam0->_fU96)
        {
            if (GET_NUMBER_OF_STREAMING_REQUESTS() == 0)
            {
                if (IS_SCREEN_FADED_OUT())
                {
                    DO_SCREEN_FADE_IN( 0 );
                }
                sub_507( "AT", "Streaming requests complete! Cutscene can be skipped!", "###" );
                SET_TRANSITION_MOVIE_SKIPPABLE( 1 );
                iParam0->_fU96 = 1;
                break;
                iParam0->_fU12;
                break;
            }
        }
        if ((NOT IS_TRANSITION_MOVIE_PLAYING()) || (NOT CUTSCENE_IS_WAITING_FOR_MOVIE()))
        {
            sub_507( "AT", "Bink is complete! Playing cutscene!", "###" );
            iParam0->_fU4 = 5;
        }
        break;
        case 2:
        if (NOT HAS_CUTSCENE_LOADED())
        {
            sub_507( "MSWW", "CutSys reports cutscene not already loaded.", "###" );
        }
        else if ((NOT (CUTSCENE_IS_LOADED( iParam0->_fU0 ))) AND (HAS_CUTSCENE_LOADED()))
        {
            sub_507( "MSWW", "CutSys reports wrong cutscene is loaded.", "###" );
            CLEAR_NAMED_CUTSCENE( "ThisStringDoesNothing" );
            break;
        }
        if (CUTSCENE_IS_LOADED( iParam0->_fU0 ))
        {
            iParam0->_fU4 = 4;
        }
        else if (NOT CUTSCENE_IS_LOADING())
        {
            sub_40889( iParam0->_fU0, 0 );
            sub_507( "MSWW", "CutSys trying to load cutscene.", "###" );
        }
        break;
        case 4:
        if (iParam0->_fU8)
        {
            sub_41221( iParam0->_fU60, 0, 0, iParam0->_fU104 );
            if (iParam0->_fU40)
            {
                iParam0->_fU4 = 3;
                break;
                iParam0->_fU44;
                break;
            }
            else
            {
                iParam0->_fU4 = 5;
                break;
                iParam0->_fU12;
                break;
            }
        }
        break;
        case 3:
        if (iParam0->_fU48)
        {
            iParam0->_fU4 = 5;
            break;
            iParam0->_fU12;
            break;
        }
        break;
        case 5:
        sub_41221( 1, 0, 0, iParam0->_fU104 );
        if (NOT iParam0->_fU100)
        {
            CUTSCENE_ENABLE_SKIP( 0 );
        }
        sub_507( "MSWW", "CUTSCENE SYSTEM STARTING CUTSCENE!", "###" );
        START_SEAMLESS_CUTSCENE();
        if (iParam0->_fU24)
        {
            CUTSCENE_DISABLE_FADE_IN_GAME_AT_END( 1 );
        }
        iParam0->_fU4 = 6;
        break;
        case 6:
        if (iParam0->_fU52)
        {
            DO_SCREEN_FADE_IN( iParam0->_fU56 );
        }
        if (HAS_CUTSCENE_FINISHED())
        {
            if (iParam0->_fU68)
            {
                if (WAS_CUTSCENE_SKIPPED())
                {
                    if (iParam0->_fU72)
                    {
                        uVar5 = GET_INTERIOR_FROM_NAME( iParam0->_fU76, 0 );
                        SET_INTERIOR_ACTIVE( uVar5, 1, 0 );
                        LOAD_SCENE_FOR_ROOM_BY_KEY( uVar5, GET_HASH_KEY( iParam0->_fU80 ) );
                    }
                    else
                    {
                        LOAD_SCENE( iParam0->_fU84 );
                    }
                }
            }
            if (iParam0->_fU64)
            {
                sub_41749( 1 );
            }
            if (iParam0->_fU28)
            {
                iParam0->_fU4 = 8;
                break;
                iParam0->_fU32;
                break;
            }
            else
            {
                iParam0->_fU4 = 9;
            }
        }
        break;
        break;
        iParam0->_fU16;
        break;
        case 7:
        sub_41221( 1, 0, 0, iParam0->_fU104 );
        iParam0->_fU4 = 8;
        break;
        break;
        iParam0->_fU32;
        break;
        case 8:
        if (iParam0->_fU36)
        {
            iParam0->_fU4 = 9;
        }
        break;
        case 9:
        if (iParam0->_fU20)
        {
            sub_42098( 1, 1 );
            iParam0->_fU4 = 0;
            Result = 1;
        }
        break;
        case 10:
        sub_42098( 1, 1 );
        iParam0->_fU4 = 0;
        Result = 1;
        break;
    }
    if (iParam0->_fU4 != iVar3)
    {
        iParam0->_fU52 = 1;
    }
    else
    {
        iParam0->_fU52 = 0;
    }
    return Result;
}

void sub_40889(unknown uParam0, int iParam1)
{
    if (HAS_CUTSCENE_LOADED())
    {
        if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
        {
            SCRIPT_ASSERT( "Another cutscene is already loaded.  You can only load one cutscene into memory.  Your current cutscene will not load into memory.", 0 );
        }
    }
    if (NOT (CUTSCENE_IS_LOADED( uParam0 )))
    {
        PRE_STREAM_SEAMLESS_CUTSCENE( uParam0 );
        if (iParam1 == 1)
        {
            while ((CUTSCENE_IS_LOADED( uParam0 )) == 0)
            {
                WAIT( 0 );
            }
        }
    }
    return;
}

void sub_41221(int iParam0, int iParam1, unknown uParam2, boolean bParam3)
{
    END_POSTFX_BLENDER( 12, 0 );
    if (bParam3)
    {
        STOP_ALL_IMAGEFX( 0 );
    }
    SET_WIDESCREEN_BORDERS( 1, 500 );
    DISPLAY_HUD( 0 );
    if (iParam0 == 1)
    {
        if (NOT (IS_PED_DEAD( sub_897() )))
        {
            SET_PLAYER_CONTROL( sub_919(), 0, uParam2 );
            SET_PED_DUCKING( sub_897(), 0 );
            if (iParam1 == 1)
            {
                CLEAR_PED_TASKS_IMMEDIATELY( sub_897() );
            }
            SET_PED_INVINCIBLE( sub_897(), 1 );
        }
    }
    DEACTIVATE_BULLET_TIME( 1, 0 );
    return;
}

void sub_41749(unknown uParam0)
{
    unknown uVar3;

    if (NOT (IS_PED_DEAD( sub_897() )))
    {
        uVar3 = GET_WEAPON_FROM_HAND( sub_897(), 0, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HAND( sub_897(), 1, 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_897(), 0 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_897(), 1 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
        uVar3 = GET_WEAPON_FROM_HOLSTER( sub_897(), 2 );
        if (GET_DOES_WEAPON_EXIST( uVar3 ))
        {
            SET_WEAPON_VISIBLE( uVar3, uParam0 );
        }
    }
    return;
}

void sub_42098(boolean bParam0, boolean bParam1)
{
    SET_WIDESCREEN_BORDERS( 0, 500 );
    DISPLAY_HUD( 1 );
    if (NOT (IS_PED_DEAD( sub_897() )))
    {
        SET_PLAYER_CONTROL( sub_919(), 1, 0 );
        SET_PED_INVINCIBLE( sub_897(), 0 );
        if (bParam0)
        {
            sub_42179();
        }
    }
    PULSE_CROSSHAIR( 1 );
    if (bParam1)
    {
        DESTROY_ALL_CAMS();
    }
    return;
}

void sub_42179()
{
    unknown uVar2;
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;

    if ((IS_PED_DEAD( sub_897() )) == 0)
    {
        uVar2 = GET_WEAPON_FROM_HAND( sub_897(), 0, 0 );
        uVar3 = GET_WEAPON_FROM_HAND( sub_897(), 1, 0 );
        if ((GET_DOES_WEAPON_EXIST( uVar2 )) == 1)
        {
            uVar4 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_897(), 0 );
            SET_WEAPON_AMMO_IN_CLIP( uVar2, uVar4 );
        }
        if ((GET_DOES_WEAPON_EXIST( uVar3 )) == 1)
        {
            uVar5 = GET_MAX_AMMO_IN_HAND_CLIP_MP( sub_897(), 1 );
            SET_WEAPON_AMMO_IN_CLIP( uVar3, uVar5 );
        }
    }
    return;
}

void sub_42627()
{
    sub_507( "GA", "P_PE_CREATE_PLACEMENTS start", 0 );
    l_U480[0] = sub_42718( -4072149, 29.47000000, -47.34000000, -1.75000000, 0, 0, 0.40000000, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U480[0], ref g_U3245 );
    l_U480[2] = sub_42718( -4072149, 61.14000000, -42.42000000, -2.49000000, 0, 0, 0.40000000, 0, 0, 0, 1119092736 );
    ADD_PLACEMENT_TO_INTERIOR_ROOM_BY_NAME( l_U480[2], ref g_U3245 );
    sub_507( "GA", "P_PE_CREATE_PLACEMENTS end", 0 );
    return;
}

void sub_42718(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, int iParam8, unknown uParam9, unknown uParam10)
{
    unknown Result;

    Result = CREATE_PLACEMENT_ROTATE( uParam0, uParam1, uParam4, uParam7, 0, uParam9, uParam10 );
    if (iParam8 == 1)
    {
        while ((DOES_PLACEMENT_EXIST( Result )) == 0)
        {
            WAIT( 0 );
        }
    }
    return Result;
}

void sub_42963(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3)
{
    int I;

    for ( I = 0; I < (uParam0^); I++ )
    {
        sub_43000( (uParam0^)[I], uParam1, uParam2, uParam3 );
    }
    return;
}

void sub_43000(unknown uParam0, float fParam1, int iParam2, boolean bParam3)
{
    unknown uVar6;
    unknown uVar7;
    unknown uVar8;

    if (NOT (IS_PED_DEAD( uParam0 )))
    {
        uVar6 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( uParam0 )};
        if (uVar6._fU8 < fParam1)
        {
            if (iParam2 == 1)
            {
                SET_PED_HEALTH( uParam0, 0, 0 );
            }
            if (bParam3)
            {
                sub_7501( uParam0 );
            }
        }
    }
    return;
}

void sub_43114(unknown uParam0)
{
    int I;

    if ((sub_43126( uParam0 )) == 1)
    {
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
            {
                if (NOT (GET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I] )))
                {
                    SET_PED_CAN_TRIGGER_BULLET_CAM( (uParam0^)[I], 1 );
                    return (uParam0^)[I];
                }
            }
        }
    }
    return nil;
}

void sub_43126(unknown uParam0)
{
    int Result;
    int I;
    int iVar5;

    Result = 0;
    iVar5 = (uParam0^) - 1;
    for ( I = 0; I <= iVar5; I++ )
    {
        if (NOT (IS_PED_DEAD( (uParam0^)[I] )))
        {
            Result++;
        }
    }
    return Result;
}

void sub_43316()
{
    if (sub_43330( ref l_U668 ))
    {
        sub_507( "GA", "Starting Prisoner Entry Log investigation.", 0 );
        sub_41221( 1, 0, 0, 1 );
        sub_35773( ref l_U767, 59.81000000, -46.57000000, -1.92000000, -7.76000000, 0.00000000, -179.31000000, 45, 4000 );
        sub_35984( ref l_U767 );
        SHAKE_CAM( l_U767._fU0, "HAND_SHAKE", 1.50000000 );
        if (NOT (IS_PED_DEAD( sub_897() )))
        {
            CLEAR_PED_TASKS_IMMEDIATELY( sub_897() );
            RESET_PLAYER_INPUT_GAIT( 0 );
            sub_45341();
            SET_PED_VISIBLE( sub_897(), 0 );
        }
        sub_7992( sub_897(), 59.94000000, -46.05000000, -3.40000000, 171.00000000 );
        SET_FORCED_AIM_INTENTION_DIRECTION( 0.06417900, -0.94074600, 0.33298400 );
        SET_PED_DEFAULT_AIM_AHEAD( sub_897() );
        if (NOT (HAS_EXPLORATION_ITEM_BEEN_FOUND( "spol_PrisonLog" )))
        {
            sub_45763( 0 );
            sub_2299( ref l_U757 );
            sub_45883( "SPOL_MXNSPKT", ref l_U757 );
            FOUND_EXPLORATION_ITEM( "spol_PrisonLog" );
        }
        l_U798 = 1;
    }
    if ((sub_45996( ref l_U668 )) == 1)
    {
        sub_2299( ref l_U920 );
        sub_2381( 0, sub_897(), "MAX", ref l_U920, 2, 0 );
        sub_2381( 1, sub_897(), "MAX", ref l_U920, 2, 0 );
        sub_2623( "EXPLORE_ITEM", ref l_U920, 8, 1 );
    }
    if (l_U798)
    {
        if ((NOT (sub_3753( l_U757 ))) AND (sub_39321( ref l_U767, 0 )))
        {
            sub_507( "GA", "Ending prisoner log exploration item.", 0 );
            sub_39475( 0, 0, 0, 10.00000000, -3.35000000, 0 );
            if (NOT (IS_PED_DEAD( sub_897() )))
            {
                SET_PED_VISIBLE( sub_897(), 1 );
            }
            sub_42098( 1, 1 );
            RESET_FORCED_AIM_INTENTION_DIRECTION();
            CLEAR_PED_DEFAULT_AIM( sub_897() );
            sub_6583( ref l_U668, 1 );
            l_U798 = 0;
        }
    }
    return;
}

int sub_43330(int iParam0)
{
    unknown uVar3;
    unknown uVar4;
    unknown uVar5;
    int iVar6;
    int iVar7;
    int iVar8;

    if ((IS_PED_DEAD( sub_897() )) == 0)
    {
        if (iParam0->_fU0 == 1)
        {
            uVar3 = {"[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( sub_897() )};
            iVar6 = 0;
            if (iParam0->_fU80 == 1)
            {
                if ((sub_43416( sub_897(), iParam0->_fU116 )) == 1)
                {
                    if (iParam0->_fU300 == 1)
                    {
                        if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                        {
                            iVar6 = 1;
                        }
                    }
                    else
                    {
                        iVar6 = 1;
                    }
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU84 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU112)
                    {
                        if (iParam0->_fU300 == 1)
                        {
                            if ((IS_PED_ON_SCREEN( iParam0->_fU316, 0 )) == 1)
                            {
                                iVar6 = 1;
                            }
                        }
                        else
                        {
                            iVar6 = 1;
                        }
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU100, 1 )) <= iParam0->_fU112)
            {
                if (iParam0->_fU300 == 1)
                {
                    if (((IS_OBJECT_ON_SCREEN( iParam0->_fU312 )) == 1) AND ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1))
                    {
                        iVar6 = 1;
                    }
                }
                else
                {
                    iVar6 = 1;
                }
            };;;;
            iVar7 = 0;
            if (iParam0->_fU88 == 1)
            {
                if ((sub_43416( sub_897(), iParam0->_fU216 )) == 1)
                {
                    iVar7 = 1;
                }
            }
            else if ((iParam0->_fU308 == 1) AND (iParam0->_fU92 == 1))
            {
                if ((DOES_OBJECT_EXIST( iParam0->_fU312 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_OBJECT_COORDS( iParam0->_fU312 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if (iParam0->_fU96 == 1)
            {
                if ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)
                {
                    if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, "[doubled result, dropped if not asigned]", "[doubled result, dropped if not asigned]", GET_PED_COORDS( iParam0->_fU316 ), 1 )) <= iParam0->_fU212)
                    {
                        iVar7 = 1;
                    }
                }
            }
            else if ((GET_DISTANCE_BETWEEN_COORDS( uVar3, iParam0->_fU200, 1 )) <= iParam0->_fU212)
            {
                iVar7 = 1;
            };;;;
            if (iVar6 == 1)
            {
                if ((iParam0->_fU4 != 3) AND (iParam0->_fU52 == 1))
                {
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_6978( iParam0 );
                    }
                    iVar8 = 0;
                    if ((IS_WEAPON_PICKUP_VISIBLE() == 0) AND ((iParam0->_fU60 == 0) AND ((sub_7039( iParam0 )) == 1)))
                    {
                        SET_ACTION_CONSUMED( 0, 1 );
                        if (sub_44257() == 1)
                        {
                            iVar8 = 1;
                        }
                    }
                    if (iVar8 == 1)
                    {
                        if (iParam0->_fU332 == 0)
                        {
                            sub_6583( iParam0, 0 );
                            iParam0->_fU64 = 1;
                        }
                        if (iParam0->_fU68 == 1)
                        {
                            iParam0->_fU72 = 0;
                        }
                        return 1;
                    }
                    else if (iParam0->_fU8 != 2)
                    {
                        if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                        {
                            sub_6627( iParam0, 0 );
                            sub_6827( iParam0, 1 );
                        }
                        else if (iParam0->_fU320 == 1)
                        {
                            sub_6627( iParam0, 1 );
                        }
                        iParam0->_fU8 = 2;
                    }
                    if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                    {
                        if ((IS_PED_DEAD( sub_897() )) == 0)
                        {
                            SET_PED_FORCED_TO_WALK( sub_897(), 1 );
                            iParam0->_fU328 = 1;
                        }
                    }
                }
            }
            else if (iVar7 == 1)
            {
                if (iParam0->_fU8 != 1)
                {
                    if ((iParam0->_fU4 != 3) AND (iParam0->_fU320 == 1))
                    {
                        sub_6627( iParam0, 1 );
                    }
                    if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                    {
                        sub_6827( iParam0, 0 );
                    }
                    if (iParam0->_fU96 == 1)
                    {
                        if (((IS_PED_DEAD( sub_897() )) == 0) AND ((((IS_PED_DEAD( iParam0->_fU316 )) == 1) || ((IS_PED_DEAD( iParam0->_fU316 )) == 0)) AND ((DOES_PED_EXIST( iParam0->_fU316 )) == 1)))
                        {
                            TASK_LOOK_AT_PED( sub_897(), iParam0->_fU316, -1, 0 );
                        }
                    }
                    else if ((IS_PED_DEAD( sub_897() )) == 0)
                    {
                        TASK_LOOK_AT_COORD( sub_897(), iParam0->_fU100, -1, 0 );
                    }
                    iParam0->_fU340 = 1;
                    if ((iParam0->_fU72 == 0) AND ((iParam0->_fU68 == 1) AND ((iParam0->_fU64 == 1) AND (iParam0->_fU8 == 2))))
                    {
                        iParam0->_fU72 = 1;
                    }
                    iParam0->_fU8 = 1;
                }
                if ((iParam0->_fU328 == 0) AND (iParam0->_fU324 == 1))
                {
                    if ((IS_PED_DEAD( sub_897() )) == 0)
                    {
                        SET_PED_FORCED_TO_WALK( sub_897(), 1 );
                        iParam0->_fU328 = 1;
                    }
                }
            }
            else if ((iParam0->_fU4 == 1) || (iParam0->_fU4 == 3))
            {
                ;
            }
            else if (iParam0->_fU8 != 0)
            {
                if (iParam0->_fU320 == 1)
                {
                    sub_6627( iParam0, 0 );
                }
            }
            if (iParam0->_fU8 == 2)
            {
                if ((iParam0->_fU4 == 2) || (iParam0->_fU4 == 1))
                {
                    sub_6827( iParam0, 0 );
                }
            }
            if (iParam0->_fU340)
            {
                if ((IS_PED_DEAD( sub_897() )) == 0)
                {
                    TASK_CLEAR_LOOK_AT( sub_897() );
                    iParam0->_fU340 = 0;
                }
            }
            if ((iParam0->_fU328 == 1) AND (iParam0->_fU324 == 1))
            {
                if ((IS_PED_DEAD( sub_897() )) == 0)
                {
                    SET_PED_FORCED_TO_WALK( sub_897(), 0 );
                    iParam0->_fU328 = 0;
                }
            }
            if (iParam0->_fU332 == 1)
            {
                sub_6827( iParam0, 0 );
            }
            iParam0->_fU8 = 0;;;
        }
    }
    return 0;
}

int sub_43416(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20, unknown uParam21)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        return IS_PED_IN_GAMEPLAY_HELPER_BOX( uParam0, ref uParam1._fU0 );
    }
    return 0;
}

int sub_44257()
{
    if ((IS_CONTROL_JUST_PRESSED( 0, 30 )) == 1)
    {
        return 1;
    }
    return 0;
}

void sub_45341()
{
    sub_507( "GA", "P_RESET_MAX_ACTION_TREE start", 0 );
    if (NOT (IS_PED_DEAD( sub_897() )))
    {
        if (IS_PLAYER_SHOOTDODGING())
        {
            SCRIPT_ASSERT( "Do not try to reset Max's action tree when he is shoot dodging.", 0 );
            sub_507( "GA", "You cannot reset Max's action tree during a shoot dodge.", 0 );
        }
        else
        {
            PED_ACTION_TREE_PLAY_NODE( sub_897(), "/Global/Player" );
        }
    }
    sub_507( "GA", "P_RESET_MAX_ACTION_TREE end", 0 );
    return;
}

void sub_45763(unknown uParam0)
{
    int I;

    for ( I = 0; I <= 3; I++ )
    {
        if (IS_SCRIPTED_CONVERSATION_ONGOING( I ))
        {
            if ((g_U1[I] <= 8) AND (g_U1[I] >= 4))
            {
                STOP_SCRIPTED_CONVERSATION( I, uParam0, 0 );
            }
        }
    }
    return;
}

void sub_45883(unknown uParam0, unknown uParam1)
{
    sub_2299( uParam1 );
    sub_2381( 0, sub_897(), "MAX", uParam1, 2, 0 );
    sub_2381( 1, sub_897(), "MAX", uParam1, 2, 0 );
    sub_2623( uParam0, uParam1, 8, 1 );
    return;
}

int sub_45996(int iParam0)
{
    if ((iParam0->_fU8 == 2) AND ((iParam0->_fU76 == 0) AND ((sub_46008( iParam0 )) == 0)))
    {
        if ((sub_44257() == 1) AND (((IS_PED_RELOADING( sub_897() )) == 0) AND (((IS_PED_GETTING_UP( sub_897() )) == 0) AND (((IS_PED_PICKING_UP_PICKUP( sub_897() )) == 0) AND (((IS_PED_IN_COVER( sub_897() )) == 0) AND (((IS_PED_DUCKING( sub_897() )) == 0) AND ((IS_PLAYER_SHOOTDODGING() == 0) AND ((IS_MONOLOGUE_PLAYING() == 0) AND ((IS_INTERACTIONTEXT_AVAILABLE() == 0) AND (IS_INTERACTIONTEXT_ONSCREEN() == 1))))))))))
        {
            iParam0->_fU76 = 1;
            return 1;
        }
    }
    return 0;
}

void sub_46008(int iParam0)
{
    return iParam0->_fU56;
}

void sub_46501()
{
    int I;

    if (sub_2046( ref l_U457 ))
    {
        for ( I = 0; I <= 2; I++ )
        {
            if (NOT (IS_PED_DEAD( l_U451[I] )))
            {
                sub_27144( I );
                sub_46575( l_U451[I] );
                sub_1591( ref l_U457, GET_RANDOM_INT_IN_RANGE( l_U455, l_U456 ), 1, 0 );
                sub_1727( ref l_U457 );
                return;
            }
        }
    }
    return;
}

void sub_46575(unknown uParam0)
{
    if ((IS_PED_DEAD( uParam0 )) == 0)
    {
        STOP_PED_SPEAKING( uParam0, 1 );
        SET_PED_HEALTH( uParam0, 0, 0 );
        SET_PED_CORPSE( uParam0, 0 );
    }
    return;
}

void sub_46924()
{
    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[1] ))))
    {
        sub_507( "AT", "P_RELEASE_ENEMY_1.", 0 );
        sub_47009( l_U343[1] );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[1], 0 );
        REGISTER_TARGET( l_U343[1], sub_897() );
        TASK_COMBAT_PED( l_U343[1], sub_897() );
    }
    return;
}

void sub_47009(unknown uParam0)
{
    if (((IS_PED_DEAD( uParam0 )) == 0) AND ((DOES_PED_EXIST( uParam0 )) == 1))
    {
        RESET_PED_TETHERING( uParam0 );
    }
    return;
}

void sub_47181()
{
    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[2] ))))
    {
        sub_507( "AT", "P_RELEASE_ENEMY_2.", 0 );
        sub_47009( l_U343[2] );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[2], 0 );
        REGISTER_TARGET( l_U343[2], sub_897() );
        TASK_COMBAT_PED( l_U343[2], sub_897() );
    }
    return;
}

void sub_47389(unknown uParam0, unknown uParam1, unknown uParam2, unknown uParam3, unknown uParam4, unknown uParam5, unknown uParam6, unknown uParam7, unknown uParam8, unknown uParam9, unknown uParam10, unknown uParam11, unknown uParam12, unknown uParam13, unknown uParam14, unknown uParam15, unknown uParam16, unknown uParam17, unknown uParam18, unknown uParam19, unknown uParam20)
{
    return sub_43416( sub_897(), uParam0 );
}

void sub_47426()
{
    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[0] ))))
    {
        sub_507( "AT", "P_RELEASE_ENEMY_0.", 0 );
        sub_47009( l_U343[0] );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[0], 0 );
        if (NOT (IS_PED_DEAD( l_U451[2] )))
        {
            REGISTER_TARGET( l_U343[0], l_U451[2] );
            TASK_COMBAT_PED( l_U343[0], l_U451[2] );
        }
        else
        {
            REGISTER_TARGET( l_U343[0], sub_897() );
            TASK_COMBAT_PED( l_U343[0], sub_897() );
        }
    }
    return;
}

void sub_47701()
{
    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[4] ))))
    {
        sub_507( "AT", "P_RELEASE_ENEMY_4.", 0 );
        sub_47009( l_U343[4] );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[4], 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U343[4], 0 );
        SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( l_U343[4], 0 );
        SET_PED_FLAG_BLOCK_LEANFIRE_IN_COVER( l_U343[4], 0 );
        REGISTER_TARGET( l_U343[4], sub_897() );
        TASK_COMBAT_PED( l_U343[4], sub_897() );
    }
    return;
}

void sub_47952()
{
    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[5] ))))
    {
        sub_507( "AT", "P_RELEASE_ENEMY_5.", 0 );
        sub_47009( l_U343[5] );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[5], 0 );
        SET_PED_FLAG_ALWAYS_HIDE_WHEN_IN_COVER( l_U343[5], 0 );
        SET_PED_FLAG_BLOCK_BLINDFIRE_IN_COVER( l_U343[5], 0 );
        SET_PED_FLAG_BLOCK_LEANFIRE_IN_COVER( l_U343[5], 0 );
        REGISTER_TARGET( l_U343[5], sub_897() );
        TASK_COMBAT_PED( l_U343[5], sub_897() );
    }
    return;
}

void sub_48199()
{
    if ((NOT (IS_PED_DEAD( sub_897() ))) AND (NOT (IS_PED_DEAD( l_U343[3] ))))
    {
        sub_507( "AT", "P_RELEASE_ENEMY_3.", 0 );
        sub_47009( l_U343[3] );
        SET_PED_FLAG_LOCK_TO_COVER( l_U343[3], 0 );
        REGISTER_TARGET( l_U343[3], sub_897() );
        TASK_COMBAT_PED( l_U343[3], sub_897() );
    }
    return;
}

int sub_48564()
{
    if ((l_U89._fU16) || (sub_2046( ref l_U89 )))
    {
        return 1;
    }
    return 0;
}

void sub_49073(int iParam0, unknown uParam1)
{
    if (iParam0->_fU64 == 1)
    {
        return 0;
    }
    else
    {
        iParam0->_fU64 = sub_43416( sub_897(), (iParam0^) );
        if ((iParam0->_fU64) AND (uParam1))
        {
            GAMEPLAY_HELPER_BOX_SET_ENABLED( iParam0 + 0, 0 );
        }
    }
    return iParam0->_fU64;
}

void sub_49384()
{
    sub_49398( ref l_U937 );
    l_U937[0]._fU4 = "KILL_FLASH_TEST_MIDDLE";
    l_U937[0]._fU8 = 3;
    l_U937[0]._fU12 = 200;
    l_U937[0]._fU16 = 500;
    l_U937[0]._fU20 = 2;
    l_U937[0]._fU32 = 0;
    l_U937[1]._fU4 = "TRIPLE_INTERLACE_COLOR_MED";
    l_U937[1]._fU8 = 4;
    l_U937[1]._fU16 = 500;
    l_U937[1]._fU32 = 0;
    l_U937[2]._fU4 = "DOUBLE_TINT_BLUE_FLASH";
    l_U937[2]._fU8 = 4;
    l_U937[2]._fU32 = 0;
    l_U937[3]._fU4 = "FLASH_WHITE";
    l_U937[3]._fU8 = 4;
    l_U937[3]._fU12 = 1000;
    l_U937[3]._fU32 = 0;
    l_U86 = 0;
    return;
}

void sub_49398(unknown uParam0)
{
    int I;

    sub_507( "CO", "P_INIT_IMAGEFX", 0 );
    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        (uParam0^)[I]._fU4 = "";
        (uParam0^)[I]._fU12 = 0;
        (uParam0^)[I]._fU16 = 0;
        (uParam0^)[I]._fU20 = 0;
        (uParam0^)[I]._fU24 = 0;
        (uParam0^)[I]._fU28 = 0;
        (uParam0^)[I]._fU32 = 1;
    }
    return;
}

void sub_49922(unknown uParam0)
{
    int I;
    int J;

    switch (l_U86)
    {
        case 0:
        sub_507( "CO", "P_HANDLE_IMAGEFX", 0 );
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (NOT (uParam0^)[I]._fU32)
            {
                sub_1591( ref (uParam0^)[I]._fU36, (uParam0^)[I]._fU12, 1, 0 );
                sub_1727( ref (uParam0^)[I]._fU36 );
                if ((uParam0^)[I]._fU20 > 0)
                {
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        l_U86 = 1;
        break;
        case 1:
        for ( I = 0; I <= ((uParam0^) - 1); I++ )
        {
            if (sub_2046( ref (uParam0^)[I]._fU36 ))
            {
                (uParam0^)[I]._fU0 = PLAY_IMAGEFX( (uParam0^)[I]._fU4, (uParam0^)[I]._fU8, (uParam0^)[I]._fU28 );
                if ((uParam0^)[I]._fU16 > 0)
                {
                    sub_1591( ref (uParam0^)[I]._fU72, (uParam0^)[I]._fU16, 1, 0 );
                    sub_1727( ref (uParam0^)[I]._fU72 );
                }
                if ((uParam0^)[I]._fU20 > 0)
                {
                    for ( J = I + 1; J <= (I + (uParam0^)[I]._fU20); J++ )
                    {
                        (uParam0^)[J]._fU0 = PLAY_IMAGEFX( (uParam0^)[J]._fU4, (uParam0^)[J]._fU8, (uParam0^)[I]._fU28 );
                        if ((uParam0^)[J]._fU16 > 0)
                        {
                            sub_1591( ref (uParam0^)[J]._fU72, (uParam0^)[J]._fU16, 1, 0 );
                            sub_1727( ref (uParam0^)[J]._fU72 );
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
            if (sub_2046( ref (uParam0^)[I]._fU72 ))
            {
                STOP_IMAGEFX( (uParam0^)[I]._fU0, (uParam0^)[I]._fU24 );
                (uParam0^)[I]._fU32 = 1;
                if ((uParam0^)[I]._fU20 > 0)
                {
                    if ((uParam0^)[I]._fU20 == 1)
                    {
                        STOP_IMAGEFX( (uParam0^)[I + 1]._fU0, (uParam0^)[I + 1]._fU24 );
                        (uParam0^)[I + 1]._fU32 = 1;
                    }
                    else
                    {
                        for ( J = I + 1; J <= (uParam0^)[I]._fU20; J++ )
                        {
                            STOP_IMAGEFX( (uParam0^)[J]._fU0, (uParam0^)[J]._fU24 );
                            (uParam0^)[J]._fU32 = 1;
                        }
                    }
                    I += (uParam0^)[I]._fU20;
                }
            }
        }
        break;
    }
    return;
}

void sub_50801()
{
    switch (l_U799)
    {
        case 1:
        sub_507( "GA", "e_PE_DoorOpenNISState = eNIS_STATE_SETUP", 0 );
        sub_35773( ref l_U800, 59.22487000, -40.12536000, -1.73588100, -4.38627900, 0.00000100, 143.44210000, 45.00000000, 3500 );
        sub_41221( 1, 0, 0, 0 );
        sub_35984( ref l_U800 );
        sub_1591( ref l_U840, 1800, 1, 0 );
        sub_1727( ref l_U840 );
        sub_1591( ref l_U831, 750, 1, 0 );
        sub_1727( ref l_U831 );
        CLEAR_PED_TASKS_IMMEDIATELY( sub_897() );
        RESET_PLAYER_INPUT_GAIT( 0 );
        sub_45341();
        sub_7992( sub_897(), 58.73000000, -41.75000000, -3.40000000, 144.02000000 );
        if (ISEQ_IS_LOADED( 1695938919 ))
        {
            ISEQ_REGISTER_ENTITY( 1695938919, "Max", sub_897(), 0 );
            ISEQ_START( 1695938919 );
        }
        else
        {
            SCRIPT_ASSERT( "S_POLICE_VIG_03_PP interactive sequence not loaded.", 0 );
        }
        l_U799 = 2;
        sub_507( "GA", "e_PE_DoorOpenNISState = eNIS_STATE_SETUP", 0 );
        break;
        case 2:
        if (sub_2046( ref l_U831 ))
        {
            sub_507( "GA", "Playing Button Sound", 0 );
            PLAY_SOUND_FROM_COORD( -1, "PRISONER_EXCHANGE_DOOR_BUTTON", l_U496._fU20 );
        }
        if (sub_2046( ref l_U840 ))
        {
            sub_51361( 1 );
            sub_39475( 3000, 1, 0, -859915232, -859915232, 0 );
        }
        if ((l_U840._fU16) AND (sub_39321( ref l_U800, 0 )))
        {
            sub_7992( sub_897(), 58.73000000, -41.68000000, -3.40000000, 144.02000000 );
            sub_42098( 1, 1 );
            sub_6210( 1695938919, ref g_U2662 );
            ISEQ_TERMINATE( 1695938919 );
            if (DOES_OBJECT_EXIST( l_U489 ))
            {
                SET_OBJECT_VISIBLE( l_U489, 0 );
            }
            l_U799 = 5;
            sub_507( "GA", "e_PE_DoorOpenNISState = eNIS_STATE_SETUP", 0 );
        }
        break;
    }
    return;
}

void sub_51361(boolean bParam0)
{
    sub_507( "GA", "P_PE_ANIMATE_EXIT_DOORS start", 0 );
    if (DOES_OBJECT_EXIST( l_U494 ))
    {
        sub_5848( l_U849, 0 );
        sub_6011( ref l_U849 );
        if (bParam0)
        {
            PLAY_OBJECT_ANIM( l_U494, "Dr_exch_slide", "po_anim2", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U494, "Dr_exch_slide", "po_anim2", 0.00000000 );
            SET_OBJECT_ANIM_SPEED( l_U494, "Dr_exch_slide", "po_anim2", l_U495 );
            l_U491 = sub_32668( l_U490, 58.11400000, -42.57000000, -1.85000000, 0.00000000, 0.00000000, -90.00000000, 0, 0, 0 );
            if (DOES_OBJECT_EXIST( l_U491 ))
            {
                FREEZE_OBJECT_POSITION( l_U491, 1 );
                ADD_OBJECT_TO_INTERIOR_ROOM_BY_NAME( l_U491, ref g_U3245 );
            }
            if (DOES_OBJECT_EXIST( l_U493 ))
            {
                SET_OBJECT_VISIBLE( l_U493, 0 );
            }
        }
        else
        {
            PLAY_OBJECT_ANIM( l_U494, "Dr_exch_slide", "po_anim2", 0.00000000, 0, 1 );
            SET_OBJECT_ANIM_CURRENT_TIME( l_U494, "Dr_exch_slide", "po_anim2", 1.00000000 );
            SET_OBJECT_ANIM_SPEED( l_U494, "Dr_exch_slide", "po_anim2", 0.00000000 - l_U495 );
            sub_7618( l_U491 );
            if (DOES_OBJECT_EXIST( l_U493 ))
            {
                SET_OBJECT_VISIBLE( l_U493, 1 );
            }
        }
        l_U849 = GET_SOUND_ID();
        PLAY_SOUND_FROM_OBJECT( l_U849, "PRISONER_EXCHANGE_DOOR_CLOSE", l_U494 );
    }
    sub_507( "GA", "P_PE_ANIMATE_EXIT_DOORS end", 0 );
    return;
}

int sub_52332(int iParam0, unknown uParam1, boolean bParam2, boolean bParam3)
{
    if ((sub_49073( iParam0, 0 )) == 1)
    {
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK( sub_897(), 1 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_919(), 0 );
        }
    }
    if ((NOT (sub_47389( (iParam0^) ))) AND (iParam0->_fU64))
    {
        iParam0->_fU64 = 0;
        if (NOT bParam3)
        {
            SET_PED_FORCED_TO_WALK( sub_897(), 0 );
        }
        if (NOT bParam2)
        {
            SET_PLAYER_CAN_USE_SHOOTDODGE( sub_919(), 1 );
        }
    }
    if (sub_49073( uParam1, 0 ))
    {
        return 1;
    }
    return 0;
}

void sub_52700()
{
    sub_507( "GA", "P_RELEASE_PE_ASSETS start", 0 );
    sub_52757( ref l_U145, ref g_U2468 );
    sub_53035( ref g_U3553, ref g_U2741 );
    sub_53212( ref g_U3489, ref g_U2889 );
    sub_53389( ref l_U153, ref g_U2613 );
    sub_507( "GA", "P_RELEASE_PE_ASSETS end", 0 );
    return;
}

void sub_52757(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_52792( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_52792(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    if (IS_MODEL_IN_CDIMAGE( iParam0 ))
    {
        for ( I = 0; I <= ((uParam1^) - 1); I++ )
        {
            if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
            {
                if ((uParam1^)[I]._fU0 == iParam0)
                {
                    iVar5 = sub_6322( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                    if (iVar5 == -1)
                    {
                        (uParam1^)[I]._fU4 = 4;
                        return;
                    }
                    else
                    {
                        return;
                    }
                }
            }
        }
    }
    else
    {
        SCRIPT_ASSERT( "The asset is NOT in the image!!!", 0 );
    }
    return;
}

void sub_53035(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU32 == 1) || (((uParam1^)[I]._fU32 == 2) || ((uParam1^)[I]._fU32 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_6322( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU36 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU32 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_53212(unknown uParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU64 == 1) || (((uParam1^)[I]._fU64 == 2) || ((uParam1^)[I]._fU64 == 3)))
        {
            if (ARE_STRINGS_EQUAL( ref (uParam1^)[I]._fU0, uParam0 ))
            {
                iVar5 = sub_6322( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU68 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU64 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}

void sub_53389(unknown uParam0, unknown uParam1)
{
    int I;

    for ( I = 0; I <= ((uParam0^) - 1); I++ )
    {
        sub_53424( (uParam0^)[I], uParam1 );
    }
    return;
}

void sub_53424(int iParam0, unknown uParam1)
{
    int I;
    int iVar5;

    for ( I = 0; I <= ((uParam1^) - 1); I++ )
    {
        if (((uParam1^)[I]._fU4 == 1) || (((uParam1^)[I]._fU4 == 2) || ((uParam1^)[I]._fU4 == 3)))
        {
            if ((uParam1^)[I]._fU0 == iParam0)
            {
                iVar5 = sub_6322( GET_ID_OF_THIS_THREAD(), ref (uParam1^)[I]._fU8 );
                if (iVar5 == -1)
                {
                    (uParam1^)[I]._fU4 = 4;
                    return;
                }
                else
                {
                    return;
                }
            }
        }
    }
    return;
}


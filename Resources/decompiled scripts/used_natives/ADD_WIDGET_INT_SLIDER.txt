ADD_WIDGET_INT_SLIDER( "NEW GAME DELAY", ref l_U166, 0, 60000, 500 ); // startup
ADD_WIDGET_INT_SLIDER( "RESTART FROM MENU DELAY", ref l_U165, 0, 60000, 500 ); // startup
ADD_WIDGET_INT_SLIDER( "Transition Time", ref l_U53, 0, 50000, 5 ); // startup
ADD_WIDGET_INT_SLIDER( "Transition Time", ref l_U53, 0, 50000, 5 ); // startup
ADD_WIDGET_INT_SLIDER( "Transition Time", ref l_U53, 0, 50000, 5 ); // startup
ADD_WIDGET_INT_SLIDER( "Transition Time", ref l_U53, 0, 50000, 5 ); // startup
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U178, 0, 6000, 1 ); // s_air_bagprocessing
ADD_WIDGET_INT_SLIDER( "Animated Camera Interp Time", ref l_U179, 0, 6000, 1 ); // s_air_bagprocessing
ADD_WIDGET_INT_SLIDER( "End Anim Cam time", ref l_U790, 0, 1000000, 50 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "G2 grenade delay", ref l_U180, 0, 1000000, 50 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "G3 grenade delay", ref l_U199, 0, 1000000, 50 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "Damage in cover", ref l_U325, 0, 100000, 1 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "Duration of MPM", ref l_U1146, 0, 1000000, 25 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "Second grenade delay", ref l_U1132, 0, 1000000, 50 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "Gate Open Delay", ref l_U237, 0, 10000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "End Cam Early", ref l_U79, 0, 1000000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "End Cam Blend", ref l_U80, 0, 1000000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Shot time", ref l_U167, 60536, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Shot time", ref l_U175, 60536, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Interp time", ref l_U168, 60536, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Return to Gameplay Cam Time", ref l_U176, 60536, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Wait Time", ref l_U391, 0, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Interp Time", ref l_U392, 0, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Glass 1 Delay", ref l_U400[0]._fU36, 0, 10000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Glass 2 Delay", ref l_U400[1]._fU36, 0, 10000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Glass 3 Delay", ref l_U400[2]._fU36, 0, 10000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Time to Becker Dies", ref l_U496, 0, 100000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Kill Shot Grenade", ref l_U684, 0, 100000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Becker firing delay", ref l_U675, 0, 60000, 100 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "fMID12_Blend", ref l_U1064, 60536, 5000, 100 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Bullet Time Dur", ref l_U1094, 0, 10000000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "NIS Button shot time", ref l_U341, 0, 15000, 1 ); // s_air_departures
ADD_WIDGET_INT_SLIDER( "NIS Start Run shot time", ref l_U379, 0, 15000, 1 ); // s_air_departures
ADD_WIDGET_INT_SLIDER( "NIS End Run shot time", ref l_U417, 0, 15000, 1 ); // s_air_departures
ADD_WIDGET_INT_SLIDER( "Interp time", ref l_U418, 0, 20000, 1 ); // s_air_departures
ADD_WIDGET_INT_SLIDER( "Tram brake time", ref l_U527, 0, 60000, 500 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Gameplay cam interp", ref l_U208, 0, 10000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Wait for gameplay cam", ref l_U227, 0, 10000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Bullet time delay", ref l_U237, 0, 10000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Bullet time length", ref l_U247, 0, 5000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Explosion Delay", ref l_U309, 0, 10000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Blendout cam duration", ref l_U322, 0, 10000000, 50 ); // s_air_killbecker
ADD_WIDGET_INT_SLIDER( "CAV Fight - Global Speedup Increment Delay", ref l_U1095, 0, 100000000, 100 ); // s_air_runway_1
ADD_WIDGET_INT_SLIDER( "CAV Fight - Global Speedup Duration", ref l_U1084, 0, 100000000, 100 ); // s_air_runway_1
ADD_WIDGET_INT_SLIDER( "CAV Fight - Player Veh Catchup Duration", ref l_U1107, 0, 100000000, 100 ); // s_air_runway_1
ADD_WIDGET_INT_SLIDER( "Time to Fail", ref l_U953, 0, 100000000, 50 ); // s_air_runway_1
ADD_WIDGET_INT_SLIDER( "Cam duration", ref l_U170, 0, 10000000, 50 ); // s_air_runway_1
ADD_WIDGET_INT_SLIDER( "Bullet time duration", ref l_U171, 0, 10000000, 10 ); // s_air_runway_1
ADD_WIDGET_INT_SLIDER( "Explosion delay", ref l_U230, 0, 100000, 1 ); // s_air_runway_1
ADD_WIDGET_INT_SLIDER( "Cam Duration", ref l_U219, 0, 100000, 1 ); // s_air_runway_1
ADD_WIDGET_INT_SLIDER( "Jet Path Acceleration Delay", ref l_U517, 0, 100000, 100 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Jet Path Increment Delay", ref l_U530, 0, 10000, 100 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Time to Fail", ref l_U450, 0, 100000000, 50 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Delay 747 Enable Effects - Far", ref l_U759, 0, 1000000, 1 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Controller Shake Frequency - Far", ref l_U749, 0, 10000, 10 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Delay 747 Enable Effects - Near", ref l_U769, 0, 1000000, 1 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Controller Shake Frequency - Near", ref l_U748, 0, 10000, 10 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Delay stopping the controller effects", ref l_U779, 0, 10000, 10 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Delay 747 animation", ref l_U739, 0, 10000, 100 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Camera 1 Duration", ref l_U820, 0, 10000, 100 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Camera Shake - Fuselage Delay", ref l_U831, 0, 10000, 100 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Camera Shake - Tail Delay", ref l_U841, 0, 10000, 100 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Camera Shake - Engine Delay", ref l_U851, 0, 10000, 100 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Plane slowdown duration", ref l_U877, 0, 10000, 100 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Camera 2 Duration", ref l_U858, 0, 10000, 100 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Start Particle FX 1 Delay", ref l_U909, 0, 100000, 10 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "End Particle FX 1 Delay", ref l_U919, 0, 100000, 10 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "End Particle FX 2 Delay", ref l_U945, 0, 100000, 10 ); // s_air_runway_2
ADD_WIDGET_INT_SLIDER( "Horizontal shake min frequency", ref l_U873, 0, 10000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Horizontal shake max frequency", ref l_U874, 0, 10000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake upwards min frequency", ref l_U876, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake upwards max frequency", ref l_U877, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake downwards min frequency", ref l_U878, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake downwards max frequency", ref l_U879, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake minimum delay", ref l_U880, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake maximum delay", ref l_U881, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( ref cVar3, ref l_U517[I], 0, 60000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Animated Cam Stop Time", ref l_U650, 0, 1000000, 50 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Animated Cam Blend Time", ref l_U651, 0, 1000000, 50 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( ref cVar31, ref l_U589[I], 0, 10000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Horizontal shake min frequency", ref l_U725, 0, 10000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Horizontal shake max frequency", ref l_U726, 0, 10000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake upwards min frequency", ref l_U728, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake upwards max frequency", ref l_U729, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake downwards min frequency", ref l_U730, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake downwards max frequency", ref l_U731, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake minimum delay", ref l_U732, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake maximum delay", ref l_U733, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Start tram arrival sound delay", ref l_U626, 0, 30000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Restore power delay", ref l_U607, 0, 30000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start UFE tram delay", ref l_U748, 0, 30000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start power restored speech", ref l_U680, 0, 30000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Power on delay", ref l_U606, 0, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Tram slow down time", ref g_U4960, 1000, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Tram speed up time", ref g_U4958, 1000, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Delay between trams", ref g_U4959, 0, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start departing delay", ref g_U4957, 100, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start player tram delay", ref l_U769, 0, 120000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start player tram sound delay", ref l_U759, 0, 120000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "iCP_05ImageFX_01", ref l_U903, 0, 20000, 1000 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "iCP_05ImageFX_02", ref l_U904, 0, 20000, 1000 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "End Anim Cam time", ref l_U790, 0, 1000000, 50 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "G2 grenade delay", ref l_U180, 0, 1000000, 50 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "G3 grenade delay", ref l_U199, 0, 1000000, 50 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "Damage in cover", ref l_U325, 0, 100000, 1 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "Duration of MPM", ref l_U1146, 0, 1000000, 25 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "Second grenade delay", ref l_U1132, 0, 1000000, 50 ); // s_air_becker
ADD_WIDGET_INT_SLIDER( "Gate Open Delay", ref l_U237, 0, 10000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "End Cam Early", ref l_U79, 0, 1000000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "End Cam Blend", ref l_U80, 0, 1000000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Shot time", ref l_U167, 60536, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Shot time", ref l_U175, 60536, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Interp time", ref l_U168, 60536, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Return to Gameplay Cam Time", ref l_U176, 60536, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Wait Time", ref l_U391, 0, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Interp Time", ref l_U392, 0, 5000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Glass 1 Delay", ref l_U400[0]._fU36, 0, 10000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Glass 2 Delay", ref l_U400[1]._fU36, 0, 10000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Glass 3 Delay", ref l_U400[2]._fU36, 0, 10000, 1 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Time to Becker Dies", ref l_U496, 0, 100000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Kill Shot Grenade", ref l_U684, 0, 100000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Becker firing delay", ref l_U675, 0, 60000, 100 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "fMID12_Blend", ref l_U1064, 60536, 5000, 100 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "Bullet Time Dur", ref l_U1094, 0, 10000000, 50 ); // s_air_debug_iss
ADD_WIDGET_INT_SLIDER( "NIS Button shot time", ref l_U341, 0, 15000, 1 ); // s_air_departures
ADD_WIDGET_INT_SLIDER( "NIS Start Run shot time", ref l_U379, 0, 15000, 1 ); // s_air_departures
ADD_WIDGET_INT_SLIDER( "NIS End Run shot time", ref l_U417, 0, 15000, 1 ); // s_air_departures
ADD_WIDGET_INT_SLIDER( "Interp time", ref l_U418, 0, 20000, 1 ); // s_air_departures
ADD_WIDGET_INT_SLIDER( "Tram brake time", ref l_U527, 0, 60000, 500 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Gameplay cam interp", ref l_U208, 0, 10000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Wait for gameplay cam", ref l_U227, 0, 10000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Bullet time delay", ref l_U237, 0, 10000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Bullet time length", ref l_U247, 0, 5000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Explosion Delay", ref l_U309, 0, 10000, 1 ); // s_air_finale_mpm
ADD_WIDGET_INT_SLIDER( "Horizontal shake min frequency", ref l_U873, 0, 10000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Horizontal shake max frequency", ref l_U874, 0, 10000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake upwards min frequency", ref l_U876, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake upwards max frequency", ref l_U877, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake downwards min frequency", ref l_U878, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake downwards max frequency", ref l_U879, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake minimum delay", ref l_U880, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( "Vertical shake maximum delay", ref l_U881, 0, 2000, 1 ); // s_air_tram_2_part1
ADD_WIDGET_INT_SLIDER( ref cVar3, ref l_U517[I], 0, 60000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Animated Cam Stop Time", ref l_U650, 0, 1000000, 50 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Animated Cam Blend Time", ref l_U651, 0, 1000000, 50 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( ref cVar31, ref l_U589[I], 0, 10000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Horizontal shake min frequency", ref l_U725, 0, 10000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Horizontal shake max frequency", ref l_U726, 0, 10000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake upwards min frequency", ref l_U728, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake upwards max frequency", ref l_U729, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake downwards min frequency", ref l_U730, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake downwards max frequency", ref l_U731, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake minimum delay", ref l_U732, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Vertical shake maximum delay", ref l_U733, 0, 2000, 1 ); // s_air_tram_2_part2
ADD_WIDGET_INT_SLIDER( "Start tram arrival sound delay", ref l_U626, 0, 30000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Restore power delay", ref l_U607, 0, 30000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start UFE tram delay", ref l_U748, 0, 30000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start power restored speech", ref l_U680, 0, 30000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Power on delay", ref l_U606, 0, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Tram slow down time", ref g_U4960, 1000, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Tram speed up time", ref g_U4958, 1000, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Delay between trams", ref g_U4959, 0, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start departing delay", ref g_U4957, 100, 60000, 500 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start player tram delay", ref l_U769, 0, 120000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Start player tram sound delay", ref l_U759, 0, 120000, 1 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "iCP_05ImageFX_01", ref l_U903, 0, 20000, 1000 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "iCP_05ImageFX_02", ref l_U904, 0, 20000, 1000 ); // s_air_tram_platform_part2
ADD_WIDGET_INT_SLIDER( "Boat Health damage interaval", ref l_U734, 0, 1000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Explosion Delay", ref l_U870, 0, 1000000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Percent Blanks", ref l_U2148, 0, 100, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "End camera", ref l_U2159, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Interp from camera", ref l_U2160, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Midscene_08D_Docks: Shack Explode Time", ref l_U2323, 0, 50000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U2340, 0, 100000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U2341, 0, 100000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Camera interp", ref l_U2974, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Camera cut-off", ref l_U2973, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Return player control", ref l_U2975, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Bullet time delay", ref l_U2972, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Molotov Throw Interval Min", ref l_U2875, 0, 1000000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Molotov Throw Interval Max", ref l_U2876, 0, 1000000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Molotov Damage duration", ref l_U2939, 0, 10000000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U2949, 0, 100000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U2950, 0, 100000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Grenade B track time", ref l_U4798, 0, 10000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Grenade Fail Delay", ref l_U4747, 0, 1000000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Start camera delay", ref l_U4718, 0, 100000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Interp into camera", ref l_U4751, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Interp from camera", ref l_U4752, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Return control delay", ref l_U4762, 0, 100000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Activation Delay", ref l_U3117[I]._fU104, 0, 50000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Activation Delay", ref l_U3298[I]._fU104, 0, 50000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Activation Delay", ref l_U3443[I]._fU104, 0, 50000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Activation Delay", ref l_U3650[I]._fU104, 0, 50000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Activation Delay", ref l_U3763[I]._fU104, 0, 50000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Start animated cam delay", ref l_U4856, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Restore Player Control Delay", ref l_U4811, 0, 5000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Interp from camera", ref l_U4857, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Camera cutoff", ref l_U4815, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Cam 1 Start Delay", ref l_U4929, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Cam 1 Duration", ref l_U4939, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Cam 2 Interp Time", ref l_U5028, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Shack Explosion Delay", ref l_U5029, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Cam 2 Duration", ref l_U5079, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Delay", ref l_U4941[J]._fU36, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Camera interp", ref l_U5124, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Delay", ref l_U4211, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Camera interp", ref l_U5406, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Timer for 'There's more of them", ref l_U5436, 0, 1100000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "First gunner kneels", ref l_U5416, 0, 60000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Gunners start firing", ref l_U5426, 0, 60000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Cam interp time", ref l_U5866, 0, 10000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Percent Blanks", ref l_U5845, 0, 100, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U5963, 0, 100000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U5964, 0, 100000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Green to Yellow Time", ref l_U940, 0, 10000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Yellow to Red Time", ref l_U941, 0, 10000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Red to Overheat Time", ref l_U942, 0, 10000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Yellow to Green Time", ref l_U944, 0, 10000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Red to Yellow Time", ref l_U943, 0, 10000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Overheat punish time", ref l_U945, 0, 10000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Bullet Time Intialize", ref l_U889, 0, 100000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Fail Screen Display Duration", ref l_U937, 0, 8000, 1 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Fade Out Duration", ref l_U910, 0, 10000, 50 ); // s_boat_boatraila
ADD_WIDGET_INT_SLIDER( "Boat Health damage interaval", ref l_U991, 0, 1000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Explosion Delay", ref l_U1127, 0, 1000000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Max enemy boats in mangrove", ref l_U4031, 1, 10, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Number of boats to destory to finish Mangrove", ref l_U4039, 1, 100, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "CS boat straight line distance", ref l_U4034, 0, 100, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "CS boat target reached distance", ref l_U4033, 0, 100, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Camera interp", ref l_U1689, 0, 10000, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Camera cut-off", ref l_U1688, 0, 10000, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U4876, 0, 100000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U4877, 0, 100000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Percent Blanks", ref l_U5575, 0, 100, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U5690, 0, 100000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U5691, 0, 100000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Cam interp", ref l_U5626, 0, 10000, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Percent Blanks", ref l_U6110, 0, 100, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Fail cam length", ref l_U6144, 0, 1000000000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Fail Cam interp time", ref l_U6145, 0, 100000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Explosion Delay length", ref l_U6146, 0, 100000000, 30 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Fail explosion Delay (ms)", ref l_U6146, 0, 100, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Green to Yellow Time", ref l_U1197, 0, 10000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Yellow to Red Time", ref l_U1198, 0, 10000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Red to Overheat Time", ref l_U1199, 0, 10000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Yellow to Green Time", ref l_U1201, 0, 10000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Red to Yellow Time", ref l_U1200, 0, 10000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Overheat punish time", ref l_U1202, 0, 10000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Bullet Time Intialize", ref l_U1146, 0, 100000, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Fail Screen Display Duration", ref l_U1194, 0, 8000, 1 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Fade Out Duration", ref l_U1167, 0, 10000, 50 ); // s_boat_boatrailb
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U2303, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U2304, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U2912, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U2913, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U5926, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U5927, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U4839, 0, 100000, 50 ); // s_boat_pano_b
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U4840, 0, 100000, 50 ); // s_boat_pano_b
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U5653, 0, 100000, 50 ); // s_boat_pano_b
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U5654, 0, 100000, 50 ); // s_boat_pano_b
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U44, 1, 4, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U45, 1, 4, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U46, 1, 4, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U47, 1, 4, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U48, 1, 3, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U49, 1, 10, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U2303, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U2304, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U2912, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U2913, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U5926, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U5927, 0, 100000, 50 ); // s_boat_pano_a
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U4839, 0, 100000, 50 ); // s_boat_pano_b
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U4840, 0, 100000, 50 ); // s_boat_pano_b
ADD_WIDGET_INT_SLIDER( "Wave Freq Min Time", ref l_U5653, 0, 100000, 50 ); // s_boat_pano_b
ADD_WIDGET_INT_SLIDER( "Wave Freq Max Time", ref l_U5654, 0, 100000, 50 ); // s_boat_pano_b
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U44, 1, 4, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U45, 1, 4, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U46, 1, 4, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U47, 1, 4, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U48, 1, 3, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U49, 1, 10, 1 ); // s_boat_vehicletest
ADD_WIDGET_INT_SLIDER( "Start 1 FX", ref l_U1633, 0, 20000, 1000 ); // busdepot_gar_catwalk
ADD_WIDGET_INT_SLIDER( "Start 2 FX", ref l_U1634, 0, 20000, 1000 ); // busdepot_gar_catwalk
ADD_WIDGET_INT_SLIDER( "Start 3 FX", ref l_U1635, 0, 20000, 1000 ); // busdepot_gar_catwalk
ADD_WIDGET_INT_SLIDER( "Catwalk 1 Start Time", ref l_U748, 0, 999999, 100 ); // busdepot_imgmetrics
ADD_WIDGET_INT_SLIDER( "Catwalk 2 Start Time", ref l_U749, 0, 999999, 100 ); // busdepot_imgmetrics
ADD_WIDGET_INT_SLIDER( "Catwalk 3 Start Time", ref l_U750, 0, 999999, 100 ); // busdepot_imgmetrics
ADD_WIDGET_INT_SLIDER( "Animated Cam Stop Time", ref l_U260, 0, 999999, 100 ); // busdepot_isequences
ADD_WIDGET_INT_SLIDER( "Return to Gameplay Time", ref l_U273, 0, 999999, 100 ); // busdepot_isequences
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U514, 0, 999999, 100 ); // busdepot_isequences
ADD_WIDGET_INT_SLIDER( "Return to Gameplay Cam Interp Time", ref l_U515, 0, 999999, 100 ); // busdepot_isequences
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U226, 0, 999999, 100 ); // busdepot_isequences3
ADD_WIDGET_INT_SLIDER( "Interp to Gameplay Cam Time", ref l_U227, 0, 999999, 100 ); // busdepot_isequences3
ADD_WIDGET_INT_SLIDER( "Bone Type", ref l_U322, 0, 9, 1 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Blood Type", ref l_U321, 0, 7, 1 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Turn on TV Delay", ref l_U367, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Set Player To Cover Delay", ref l_U634, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U664, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Interp to Gameplay Cam Time", ref l_U665, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Gait Duration", ref l_U677, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Gio Kill Bullet Start Time", ref l_U709, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Player Control Delay", ref l_U764, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U753, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Interp to Gameplay Cam Time", ref l_U754, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Set Player Control Delay", ref l_U783, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Set Gait Time", ref l_U795, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U791, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "Animated Camera to Gameplay Cam Interp Time", ref l_U792, 0, 999999, 100 ); // busdepot_isequences4
ADD_WIDGET_INT_SLIDER( "iRAILSMASHFXTIMER", ref l_U750, 0, 20000, 1000 ); // busdepot_railshooter
ADD_WIDGET_INT_SLIDER( "Start 3 FX", ref l_U2156, 0, 20000, 1000 ); // busdepot_railshooter
ADD_WIDGET_INT_SLIDER( "Task Duration", ref l_U249, 0, 999999, 250 ); // busdepot_testbcam
ADD_WIDGET_INT_SLIDER( "Start 1 FX", ref l_U1633, 0, 20000, 1000 ); // busdepot_gar_catwalk
ADD_WIDGET_INT_SLIDER( "Start 2 FX", ref l_U1634, 0, 20000, 1000 ); // busdepot_gar_catwalk
ADD_WIDGET_INT_SLIDER( "Start 3 FX", ref l_U1635, 0, 20000, 1000 ); // busdepot_gar_catwalk
ADD_WIDGET_INT_SLIDER( "iRAILSMASHFXTIMER", ref l_U750, 0, 20000, 1000 ); // busdepot_railshooter
ADD_WIDGET_INT_SLIDER( "Start 3 FX", ref l_U2156, 0, 20000, 1000 ); // busdepot_railshooter
ADD_WIDGET_INT_SLIDER( "Interp back time", ref l_U514, 0, 5000, 1 ); // s_cemet_isequences
ADD_WIDGET_INT_SLIDER( "Frames to end cam early", ref l_U513, 0, 5000, 1 ); // s_cemet_isequences
ADD_WIDGET_INT_SLIDER( "Time to kill Passos", ref l_U1540, 0, 10000, 10 ); // s_cemet_t_garden
ADD_WIDGET_INT_SLIDER( "Interp back time", ref l_U514, 0, 5000, 1 ); // s_cemet_isequences
ADD_WIDGET_INT_SLIDER( "Frames to end cam early", ref l_U513, 0, 5000, 1 ); // s_cemet_isequences
ADD_WIDGET_INT_SLIDER( "Time to kill Passos", ref l_U1540, 0, 10000, 10 ); // s_cemet_t_garden
ADD_WIDGET_INT_SLIDER( "Cleanup Simple Peds Lounge", ref l_U2647, 0, 20000, 100 ); // s_club_dancefloor
ADD_WIDGET_INT_SLIDER( "Cleanup Simple Peds Stairs", ref l_U2452, 0, 20000, 100 ); // s_club_dancefloor
ADD_WIDGET_INT_SLIDER( "Cleanup Simple Peds VIG_01_E", ref l_U1561, 0, 20000, 100 ); // s_club_dancefloor
ADD_WIDGET_INT_SLIDER( "Cleanup Simple Peds VIG 01 G -> P", ref l_U2112, 0, 20000, 100 ); // s_club_dancefloor
ADD_WIDGET_INT_SLIDER( "Animated Cam Interp Time", ref l_U1755, 0, 10000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "Input Start Time", ref l_U1776, 0, 3000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "Input Gait Length", ref l_U1777, 0, 2000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U1755, 0, 3000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "Camera Interp Duration", ref l_U1756, 0, 3000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "iFailTime", ref l_U349, 0, 3000, 10 ); // s_club_rocket_mpm
ADD_WIDGET_INT_SLIDER( "iHeliExplode2", ref l_U350, 0, 3000, 10 ); // s_club_rocket_mpm
ADD_WIDGET_INT_SLIDER( "iFailTime2", ref l_U371, 0, 3000, 10 ); // s_club_rocket_mpm
ADD_WIDGET_INT_SLIDER( "iHeliExplode2", ref l_U372, 0, 3000, 10 ); // s_club_rocket_mpm
ADD_WIDGET_INT_SLIDER( "Time Between Spawns", ref l_U2064, 1, 20000, 500 ); // s_club_roof
ADD_WIDGET_INT_SLIDER( "Shake Repeat Delay", ref l_U15, 0, 1000, 10 ); // s_club_rs1
ADD_WIDGET_INT_SLIDER( "Cleanup Simple Peds Lounge", ref l_U2647, 0, 20000, 100 ); // s_club_dancefloor
ADD_WIDGET_INT_SLIDER( "Cleanup Simple Peds Stairs", ref l_U2452, 0, 20000, 100 ); // s_club_dancefloor
ADD_WIDGET_INT_SLIDER( "Cleanup Simple Peds VIG_01_E", ref l_U1561, 0, 20000, 100 ); // s_club_dancefloor
ADD_WIDGET_INT_SLIDER( "Cleanup Simple Peds VIG 01 G -> P", ref l_U2112, 0, 20000, 100 ); // s_club_dancefloor
ADD_WIDGET_INT_SLIDER( "Animated Cam Interp Time", ref l_U1755, 0, 10000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "Input Start Time", ref l_U1776, 0, 3000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "Input Gait Length", ref l_U1777, 0, 2000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U1755, 0, 3000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "Camera Interp Duration", ref l_U1756, 0, 3000, 100 ); // s_club_lounge
ADD_WIDGET_INT_SLIDER( "iFailTime", ref l_U349, 0, 3000, 10 ); // s_club_rocket_mpm
ADD_WIDGET_INT_SLIDER( "iHeliExplode2", ref l_U350, 0, 3000, 10 ); // s_club_rocket_mpm
ADD_WIDGET_INT_SLIDER( "iFailTime2", ref l_U371, 0, 3000, 10 ); // s_club_rocket_mpm
ADD_WIDGET_INT_SLIDER( "iHeliExplode2", ref l_U372, 0, 3000, 10 ); // s_club_rocket_mpm
ADD_WIDGET_INT_SLIDER( "Time Between Spawns", ref l_U2064, 1, 20000, 500 ); // s_club_roof
ADD_WIDGET_INT_SLIDER( "Shake Repeat Delay", ref l_U15, 0, 1000, 10 ); // s_club_rs1
ADD_WIDGET_INT_SLIDER( "Time until raise arm in aim", ref l_U249, 0, 100000, 50 ); // s_fashion_hall
ADD_WIDGET_INT_SLIDER( "Time End Forced Bullet Time", ref l_U292, 0, 10000000, 50 ); // s_fashion_hall
ADD_WIDGET_INT_SLIDER( "Time Player Run", ref l_U302, 0, 10000000, 50 ); // s_fashion_hall
ADD_WIDGET_INT_SLIDER( "Delay shootdodge enemies", ref l_U322, 0, 10000000, 50 ); // s_fashion_hall
ADD_WIDGET_INT_SLIDER( "Time In Position for SD", ref l_U312, 0, 10000000, 50 ); // s_fashion_hall
ADD_WIDGET_INT_SLIDER( "Time to land", ref l_U332, 0, 100000, 50 ); // s_fashion_hall
ADD_WIDGET_INT_SLIDER( "Delay Piano monologue", ref l_U609, 0, 1000000, 50 ); // s_fashion_hall
ADD_WIDGET_INT_SLIDER( "CS start time", ref l_U373, 0, 100000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "Time before anim cam end", ref l_U400, 0, 1000000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "Time blend to gameplay", ref l_U401, 0, 1000000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "V5 Timer for kill Rodrigo", ref l_U473, 0, 10000000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "V5A Timer for kill Rodrigo", ref l_U474, 0, 10000000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "Time before anim cam ended", ref l_U870, 0, 100000, 50 ); // s_fashion_parkingexit
ADD_WIDGET_INT_SLIDER( "Anim cam interp time", ref l_U871, 0, 100000, 50 ); // s_fashion_parkingexit
ADD_WIDGET_INT_SLIDER( "Cam Interp time", ref l_U223, 0, 100000, 50 ); // s_fashion_parkingexit
ADD_WIDGET_INT_SLIDER( "Van crash contact", ref l_U171, 0, 1000000, 50 ); // s_fashion_parkingexit
ADD_WIDGET_INT_SLIDER( "Rear enemy timer", ref l_U319, 0, 1000000, 50 ); // s_fashion_parkingexit
ADD_WIDGET_INT_SLIDER( "V5 Shoot Rodrigo", ref l_U518, 0, 1000000, 50 ); // s_fashion_parkingexit
ADD_WIDGET_INT_SLIDER( "V5A Shoot Rodrigo", ref l_U772, 0, 1000000, 50 ); // s_fashion_parkingexit
ADD_WIDGET_INT_SLIDER( "Rock Van Timer Min", ref l_U394, 0, 1000000, 50 ); // s_fashion_parkingexit
ADD_WIDGET_INT_SLIDER( "Rock Van Timer Max", ref l_U395, 0, 1000000, 50 ); // s_fashion_parkingexit
ADD_WIDGET_INT_SLIDER( "Time until max lands on ramp", ref l_U385, 0, 100000, 50 ); // s_fashion_roofmpm
ADD_WIDGET_INT_SLIDER( "CS start time", ref l_U373, 0, 100000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "Time before anim cam end", ref l_U400, 0, 1000000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "Time blend to gameplay", ref l_U401, 0, 1000000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "V5 Timer for kill Rodrigo", ref l_U473, 0, 10000000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "V5A Timer for kill Rodrigo", ref l_U474, 0, 10000000, 50 ); // s_fashion_is_01
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U196, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U197, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U252, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U253, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U307, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U308, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Death Time", ref l_U617, 0, 25000, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Death timing", ref l_U638, 0, 7000, 1 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Light Fireworks Delay", ref l_U301, 0, 999999, 100 ); // s_fav0_isequence_2
ADD_WIDGET_INT_SLIDER( "Shoot Fireworks Delay", ref l_U311, 0, 999999, 100 ); // s_fav0_isequence_2
ADD_WIDGET_INT_SLIDER( "Throw Fireworks Delay", ref l_U327, 0, 999999, 100 ); // s_fav0_isequence_2
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U196, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U197, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U252, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U253, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U307, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U308, 0, 999999, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Death Time", ref l_U617, 0, 25000, 100 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Death timing", ref l_U638, 0, 7000, 1 ); // s_fav0_isequence
ADD_WIDGET_INT_SLIDER( "Light Fireworks Delay", ref l_U301, 0, 999999, 100 ); // s_fav0_isequence_2
ADD_WIDGET_INT_SLIDER( "Shoot Fireworks Delay", ref l_U311, 0, 999999, 100 ); // s_fav0_isequence_2
ADD_WIDGET_INT_SLIDER( "Throw Fireworks Delay", ref l_U327, 0, 999999, 100 ); // s_fav0_isequence_2
ADD_WIDGET_INT_SLIDER( "Enemy health value", ref l_U1253, 0, 2000, 10 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "Enemy count in CS group", ref l_U1250, 0, 8, 1 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "Number of projectiles", ref l_U1392, 1, 9, 1 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "Enemy count in CP group", ref l_U1251, 0, 8, 1 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "Enemy count in UFE group", ref l_U1252, 0, 8, 1 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "iMpmCrushTime", ref l_U214, 0, 20000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "iMpmCrushTimeFX", ref l_U224, 0, 20000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Cam Length(ms)", ref l_U162, 0, 90000, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U384, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U385, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U327, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U328, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U441, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U442, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U496, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U497, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Death Time", ref l_U806, 0, 25000, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Death timing", ref l_U827, 0, 7000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Delay before Max has gun", ref l_U1274, 0, 100000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Delay before Bartender grabs shotgun", ref l_U1275, 0, 100000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Delay before Bullet Time", ref l_U1272, 0, 100000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Duration of Bullet Time", ref l_U1273, 0, 100000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "iTimerParticleStart", ref l_U275, 0, 10000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Start", ref l_U298, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Start", ref l_U311, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Start", ref l_U324, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Start", ref l_U337, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Play time", ref l_U350, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "particle sound play time", ref l_U363, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Light Fireworks Delay", ref l_U109, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Shoot Fireworks Delay", ref l_U119, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Throw Fireworks Delay", ref l_U136, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Light Fireworks Delay", ref l_U167, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Shoot Fireworks Delay", ref l_U177, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Throw Fireworks Delay", ref l_U193, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "irndThrowWaitMin", ref l_U1311, 0, 90000, 100 ); // s_fav1_moltov
ADD_WIDGET_INT_SLIDER( "irndThrowWaitMax", ref l_U1312, 0, 90000, 100 ); // s_fav1_moltov
ADD_WIDGET_INT_SLIDER( "iThrowingTime", ref l_U1313, 0, 90000, 100 ); // s_fav1_moltov
ADD_WIDGET_INT_SLIDER( "Enemy health value", ref l_U1253, 0, 2000, 10 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "Enemy count in CS group", ref l_U1250, 0, 8, 1 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "Number of projectiles", ref l_U1392, 1, 9, 1 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "Enemy count in CP group", ref l_U1251, 0, 8, 1 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "Enemy count in UFE group", ref l_U1252, 0, 8, 1 ); // s_fav1_ai_test
ADD_WIDGET_INT_SLIDER( "iMpmCrushTime", ref l_U214, 0, 20000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "iMpmCrushTimeFX", ref l_U224, 0, 20000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Cam Length(ms)", ref l_U162, 0, 90000, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U384, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U385, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U327, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U328, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U441, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U442, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Activate Enemy Delay", ref l_U496, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Enemy Cover Task Duration", ref l_U497, 0, 999999, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Death Time", ref l_U806, 0, 25000, 100 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Death timing", ref l_U827, 0, 7000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Delay before Max has gun", ref l_U1274, 0, 100000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Delay before Bartender grabs shotgun", ref l_U1275, 0, 100000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Delay before Bullet Time", ref l_U1272, 0, 100000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "Duration of Bullet Time", ref l_U1273, 0, 100000, 1 ); // s_fav1_isequence
ADD_WIDGET_INT_SLIDER( "iTimerParticleStart", ref l_U275, 0, 10000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Start", ref l_U298, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Start", ref l_U311, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Start", ref l_U324, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Start", ref l_U337, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Particle Play time", ref l_U350, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "particle sound play time", ref l_U363, 0, 90000, 1 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Light Fireworks Delay", ref l_U109, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Shoot Fireworks Delay", ref l_U119, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Throw Fireworks Delay", ref l_U136, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Light Fireworks Delay", ref l_U167, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Shoot Fireworks Delay", ref l_U177, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "Throw Fireworks Delay", ref l_U193, 0, 999999, 100 ); // s_fav1_isequence_2
ADD_WIDGET_INT_SLIDER( "irndThrowWaitMin", ref l_U1311, 0, 90000, 100 ); // s_fav1_moltov
ADD_WIDGET_INT_SLIDER( "irndThrowWaitMax", ref l_U1312, 0, 90000, 100 ); // s_fav1_moltov
ADD_WIDGET_INT_SLIDER( "iThrowingTime", ref l_U1313, 0, 90000, 100 ); // s_fav1_moltov
ADD_WIDGET_INT_SLIDER( "Change Time", ref l_U185, 0, 20000, 1000 ); // fav2_favelampm
ADD_WIDGET_INT_SLIDER( "iFailWait", ref l_U479, 0, 10000, 1 ); // fav2_favelampm
ADD_WIDGET_INT_SLIDER( "Cutscene start time", ref l_U449, 0, 999999, 10 ); // fav2_imgmetrics
ADD_WIDGET_INT_SLIDER( "Cutscene start time", ref l_U457, 0, 999999, 10 ); // fav2_imgmetrics
ADD_WIDGET_INT_SLIDER( "Cutscene stop time", ref l_U465, 0, 999999, 10 ); // fav2_imgmetrics
ADD_WIDGET_INT_SLIDER( "Interp Time", ref l_U130, 0, 999999, 100 ); // fav2_isequences
ADD_WIDGET_INT_SLIDER( "Stop Time", ref l_U131, 0, 999999, 100 ); // fav2_isequences
ADD_WIDGET_INT_SLIDER( "Sound Wait", ref l_U155, 0, 15000, 100 ); // fav2_isequences
ADD_WIDGET_INT_SLIDER( "kill dragger timer", ref l_U413, 0, 10000, 1 ); // fav2_isequences4
ADD_WIDGET_INT_SLIDER( "Lock Door Delay", ref l_U314, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Animated Cam Stop Time", ref l_U297, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Gameplay Cam Interp Time", ref l_U298, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Animated Cam Stop Time", ref l_U273, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Gameplay Cam Interp Time", ref l_U274, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "iMid07CamBlendStart", ref l_U328, 0, 90000, 1 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Door Open Time", ref l_U272, 55536, 10000, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Cam Time03", ref l_U250, 55536, 10000, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Attach Civs Delay", ref l_U363, 0, 999999, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Van Move Delay", ref l_U373, 0, 999999, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Reaction Delay", ref l_U408, 0, 999999, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Slowmo Start 01", ref l_U243, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fail Time Out 01", ref l_U253, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Slowmo Start 02", ref l_U263, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fail Time Out 02", ref l_U273, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Slowmo Start 03", ref l_U283, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fail Time Out 03", ref l_U293, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Slowmo Start 04", ref l_U303, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fail Time Out 04", ref l_U313, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fire Pattern", ref l_U110, 0, 9, 1 ); // vehicleturrettest
ADD_WIDGET_INT_SLIDER( "bone for light", ref l_U106, 0, 200, 1 ); // vehicleturrettest
ADD_WIDGET_INT_SLIDER( "Change Time", ref l_U185, 0, 20000, 1000 ); // fav2_favelampm
ADD_WIDGET_INT_SLIDER( "iFailWait", ref l_U479, 0, 10000, 1 ); // fav2_favelampm
ADD_WIDGET_INT_SLIDER( "Cutscene start time", ref l_U449, 0, 999999, 10 ); // fav2_imgmetrics
ADD_WIDGET_INT_SLIDER( "Cutscene start time", ref l_U457, 0, 999999, 10 ); // fav2_imgmetrics
ADD_WIDGET_INT_SLIDER( "Cutscene stop time", ref l_U465, 0, 999999, 10 ); // fav2_imgmetrics
ADD_WIDGET_INT_SLIDER( "Interp Time", ref l_U130, 0, 999999, 100 ); // fav2_isequences
ADD_WIDGET_INT_SLIDER( "Stop Time", ref l_U131, 0, 999999, 100 ); // fav2_isequences
ADD_WIDGET_INT_SLIDER( "Sound Wait", ref l_U155, 0, 15000, 100 ); // fav2_isequences
ADD_WIDGET_INT_SLIDER( "kill dragger timer", ref l_U413, 0, 10000, 1 ); // fav2_isequences4
ADD_WIDGET_INT_SLIDER( "Lock Door Delay", ref l_U314, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Animated Cam Stop Time", ref l_U297, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Gameplay Cam Interp Time", ref l_U298, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Animated Cam Stop Time", ref l_U273, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Gameplay Cam Interp Time", ref l_U274, 0, 999999, 100 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "iMid07CamBlendStart", ref l_U328, 0, 90000, 1 ); // fav2_isequences5
ADD_WIDGET_INT_SLIDER( "Door Open Time", ref l_U272, 55536, 10000, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Cam Time03", ref l_U250, 55536, 10000, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Attach Civs Delay", ref l_U363, 0, 999999, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Van Move Delay", ref l_U373, 0, 999999, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Reaction Delay", ref l_U408, 0, 999999, 100 ); // fav2_isequences6
ADD_WIDGET_INT_SLIDER( "Slowmo Start 01", ref l_U243, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fail Time Out 01", ref l_U253, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Slowmo Start 02", ref l_U263, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fail Time Out 02", ref l_U273, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Slowmo Start 03", ref l_U283, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fail Time Out 03", ref l_U293, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Slowmo Start 04", ref l_U303, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fail Time Out 04", ref l_U313, 0, 50000, 1 ); // fav2_isequencesboss
ADD_WIDGET_INT_SLIDER( "Fire Pattern", ref l_U110, 0, 9, 1 ); // vehicleturrettest
ADD_WIDGET_INT_SLIDER( "bone for light", ref l_U106, 0, 200, 1 ); // vehicleturrettest
ADD_WIDGET_INT_SLIDER( "Stair climbing timer", ref l_U958, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Shimmy timer", ref l_U1248, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Delay before floor smoke", ref l_U1250, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Delay before floor flames", ref l_U1251, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Shimmy timer", ref l_U1248, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "iInterpduration ", ref l_U237, 0, 20000, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Decrement Time", ref l_U159, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Decrement Time", ref l_U164, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 1st collaspe", ref l_U611, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 2nd collaspe", ref l_U612, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 3rd collaspe", ref l_U613, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 1st dust fx", ref l_U614, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 2nd dust fx", ref l_U615, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 3rd dust fx", ref l_U616, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Vig start delay", ref l_U911, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U916, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated Camera to Gameplay Cam Interp Time", ref l_U917, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 00 - sprinkler on", ref l_U1008, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 01 - sprinkler off", ref l_U1009, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 02 - sprinkler on", ref l_U1010, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 03 - sprinkler off", ref l_U1011, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 04 - sprinkler on", ref l_U1012, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 05 - sprinkler off", ref l_U1013, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Player Control Delay", ref l_U1040, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U1026, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated Camera to Gameplay Cam Interp Time", ref l_U1028, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Vig17 Time out", ref l_U1162, 0, 90000, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Vig17 bullet time out", ref l_U1172, 0, 90000, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Enemy expiry", ref l_U1266, 0, 500000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Stair climbing timer", ref l_U958, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 ); // s_fire_fire_atr
ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 ); // s_fire_fire_cub
ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 ); // s_fire_fire_hall
ADD_WIDGET_INT_SLIDER( "Shimmy timer", ref l_U1248, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Delay before floor smoke", ref l_U1250, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Delay before floor flames", ref l_U1251, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Shimmy timer", ref l_U1248, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Max's starting health (in Fire Atrium)", ref g_U1594, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Max's dying health (triggers coughing death)", ref g_U1595, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Delay before idle state begins", ref g_U1599, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Time between coughs when idling", ref g_U1600, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "The length of each cycle where Max loose a bit of health", ref g_U1597, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "How much health Max loose each cycle", ref g_U1596, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Min Time for Max's cough", ref g_U1601, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "Max Time for Max's cough", ref g_U1602, 0, 1000000, 1 ); // s_fire_fire_off
ADD_WIDGET_INT_SLIDER( "iInterpduration ", ref l_U237, 0, 20000, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Decrement Time", ref l_U159, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Decrement Time", ref l_U164, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 1st collaspe", ref l_U611, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 2nd collaspe", ref l_U612, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 3rd collaspe", ref l_U613, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 1st dust fx", ref l_U614, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 2nd dust fx", ref l_U615, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timing for 3rd dust fx", ref l_U616, 0, 100000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Vig start delay", ref l_U911, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U916, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated Camera to Gameplay Cam Interp Time", ref l_U917, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 00 - sprinkler on", ref l_U1008, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 01 - sprinkler off", ref l_U1009, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 02 - sprinkler on", ref l_U1010, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 03 - sprinkler off", ref l_U1011, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 04 - sprinkler on", ref l_U1012, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Timer 05 - sprinkler off", ref l_U1013, 0, 1000000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Player Control Delay", ref l_U1040, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U1026, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated Camera to Gameplay Cam Interp Time", ref l_U1028, 0, 999999, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Vig17 Time out", ref l_U1162, 0, 90000, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Vig17 bullet time out", ref l_U1172, 0, 90000, 100 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Enemy expiry", ref l_U1266, 0, 500000, 1 ); // s_fire_isequences_3
ADD_WIDGET_INT_SLIDER( "Camera time", ref l_U1228, 0, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Camera pan time", ref l_U1228, 0, 50000, 500 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Floor 2 delay", ref l_U750._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Floor 3 delay", ref l_U767._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Floor 4 delay", ref l_U784._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Floor 5 delay", ref l_U801._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[0]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[1]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[2]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[3]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[4]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[5]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[6]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[7]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[0]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[1]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[2]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[3]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[4]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[5]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[6]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[7]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[8]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[9]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[10]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U1143[0]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U1143[1]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U1143[2]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U1143[3]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "FX delay", ref l_U205[I]._fU64, 0, 50000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Frames to end early", ref l_U424, 0, 5000, 1 ); // hotel_isequences
ADD_WIDGET_INT_SLIDER( "Time to interp", ref l_U425, 0, 5000, 1 ); // hotel_isequences
ADD_WIDGET_INT_SLIDER( "Set objects dynamic delay", ref l_U572, 0, 2000, 10 ); // hotel_isequences
ADD_WIDGET_INT_SLIDER( "Break the lock delay", ref l_U649, 0, 999999, 100 ); // hotel_isequences
ADD_WIDGET_INT_SLIDER( "Cam Shake duration", ref l_U1748, 0, 10000000, 50 ); // hotel_roof
ADD_WIDGET_INT_SLIDER( "Bullet Time Duration", ref l_U2663, 0, 100000, 25 ); // hotel_roof
ADD_WIDGET_INT_SLIDER( "Bullet Time Duration", ref l_U2635, 0, 100000, 25 ); // hotel_roof
ADD_WIDGET_INT_SLIDER( "Bullet Time Duration", ref l_U2692, 0, 100000, 25 ); // hotel_roof
ADD_WIDGET_INT_SLIDER( "Recover Time", ref g_U2129, 0, 5000, 1 ); // startup
ADD_WIDGET_INT_SLIDER( "Camera time", ref l_U1228, 0, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Camera pan time", ref l_U1228, 0, 50000, 500 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Floor 2 delay", ref l_U750._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Floor 3 delay", ref l_U767._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Floor 4 delay", ref l_U784._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Floor 5 delay", ref l_U801._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[0]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[1]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[2]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[3]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[4]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[5]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[6]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U818[7]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[0]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[1]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[2]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[3]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[4]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[5]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[6]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[7]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[8]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[9]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U955[10]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U1143[0]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U1143[1]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U1143[2]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( ref uVar2, ref l_U1143[3]._fU20, 35536, 30000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "FX delay", ref l_U205[I]._fU64, 0, 50000, 1 ); // hotel_collapse
ADD_WIDGET_INT_SLIDER( "Frames to end early", ref l_U412, 0, 5000, 1 ); // hotel_isequences
ADD_WIDGET_INT_SLIDER( "Time to interp", ref l_U413, 0, 5000, 1 ); // hotel_isequences
ADD_WIDGET_INT_SLIDER( "Set objects dynamic delay", ref l_U560, 0, 2000, 10 ); // hotel_isequences
ADD_WIDGET_INT_SLIDER( "Break the lock delay", ref l_U637, 0, 999999, 100 ); // hotel_isequences
ADD_WIDGET_INT_SLIDER( "Recover Time", ref g_U2129, 0, 5000, 1 ); // startup
ADD_WIDGET_INT_SLIDER( "Drop Crate timer", ref l_U1477, 0, 2000, 1 ); // s_marina_boatrepair
ADD_WIDGET_INT_SLIDER( "Time to start explosion", ref l_U187, 0, 50000, 50 ); // s_marina_cutscene
ADD_WIDGET_INT_SLIDER( "Time Until Gate Moves", ref l_U253, 0, 10000, 1 ); // s_marina_isequences
ADD_WIDGET_INT_SLIDER( "Walk input length", ref l_U479, 0, 10000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated cam cutoff", ref l_U480, 0, 10000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Return to gameplay time", ref l_U481, 0, 10000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Camera easeback delay", ref l_U482, 0, 10000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Anim Cam Cut off time", ref l_U511, 0, 5000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Blend to gameplay time", ref l_U514, 0, 5000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Time to Start Video Screen (ms) ", ref l_U1751, 0, 50000, 50 ); // s_marina_slipway
ADD_WIDGET_INT_SLIDER( "Time to Stop Video Screen (ms) ", ref l_U1752, 0, 38033 - l_U1751, 50 ); // s_marina_slipway
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U28, 1, 4, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U29, 1, 4, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U30, 1, 4, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U31, 1, 4, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U32, 1, 3, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U33, 1, 10, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Drop Crate timer", ref l_U1477, 0, 2000, 1 ); // s_marina_boatrepair
ADD_WIDGET_INT_SLIDER( "Time to start explosion", ref l_U187, 0, 50000, 50 ); // s_marina_cutscene
ADD_WIDGET_INT_SLIDER( "Time Until Gate Moves", ref l_U253, 0, 10000, 1 ); // s_marina_isequences
ADD_WIDGET_INT_SLIDER( "Walk input length", ref l_U479, 0, 10000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Animated cam cutoff", ref l_U480, 0, 10000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Return to gameplay time", ref l_U481, 0, 10000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Camera easeback delay", ref l_U482, 0, 10000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Anim Cam Cut off time", ref l_U511, 0, 5000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Blend to gameplay time", ref l_U514, 0, 5000, 1 ); // s_marina_isequences_3
ADD_WIDGET_INT_SLIDER( "Time to Start Video Screen (ms) ", ref l_U1751, 0, 50000, 50 ); // s_marina_slipway
ADD_WIDGET_INT_SLIDER( "Time to Stop Video Screen (ms) ", ref l_U1752, 0, 38033 - l_U1751, 50 ); // s_marina_slipway
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U28, 1, 4, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U29, 1, 4, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U30, 1, 4, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U31, 1, 4, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U32, 1, 3, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Select Number of Passengers", ref l_U33, 1, 10, 1 ); // s_marina_vehicletest
ADD_WIDGET_INT_SLIDER( "Blendout cam early cutoff", ref l_U168, 0, 2000, 1 ); // s_nyc_isequences2
ADD_WIDGET_INT_SLIDER( "Blendout cam speed", ref l_U169, 0, 2000, 1 ); // s_nyc_isequences2
ADD_WIDGET_INT_SLIDER( "Cam time (ms)", ref l_U296, 0, 50000, 1 ); // s_nyc2_bcam_debug
ADD_WIDGET_INT_SLIDER( "Cam time (ms)", ref l_U296, 0, 50000, 1 ); // s_nyc2_bcam_debug
ADD_WIDGET_INT_SLIDER( "GLASS break time", ref l_U872, 0, 50000, 1 ); // s_nyc2_cutscene
ADD_WIDGET_INT_SLIDER( "Time to start particle FX", ref l_U568, 0, 20000, 1 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Dust Timer", ref l_U165, 60536, 5000, 100 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to end MPM", ref l_U1374, 0, 10000, 1 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to start rayfire", ref l_U1373, 0, 10000, 1 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to shootdodge", ref l_U828, 1000, 10000, 500 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to start rayfire", ref l_U829, 1000, 10000, 500 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to unblock baddies", ref l_U830, 1000, 10000, 500 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "VO Timer", ref l_U1617, 0, 5000, 1 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Interp Length", ref (uParam1^)[I]._fU88, 0, 999999999, 100 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Length", ref (uParam1^)[I]._fU84, 0, 999999999, 50 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U1790, 0, 999999, 100 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U1800, 0, 999999, 100 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to start Rayfire after FX", ref l_U203, 0, 20000, 1 ); // s_nyc2_isequences2
ADD_WIDGET_INT_SLIDER( "Tower Fall Cam Time", ref l_U2107, 0, 2000, l_U2107 ); // s_nyc2_rooftops
ADD_WIDGET_INT_SLIDER( "Cam time (ms)", ref l_U296, 0, 50000, 1 ); // s_nyc2_bcam_debug
ADD_WIDGET_INT_SLIDER( "Cam time (ms)", ref l_U296, 0, 50000, 1 ); // s_nyc2_bcam_debug
ADD_WIDGET_INT_SLIDER( "GLASS break time", ref l_U872, 0, 50000, 1 ); // s_nyc2_cutscene
ADD_WIDGET_INT_SLIDER( "Time to start particle FX", ref l_U568, 0, 20000, 1 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Dust Timer", ref l_U165, 60536, 5000, 100 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to end MPM", ref l_U1374, 0, 10000, 1 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to start rayfire", ref l_U1373, 0, 10000, 1 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to shootdodge", ref l_U828, 1000, 10000, 500 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to start rayfire", ref l_U829, 1000, 10000, 500 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to unblock baddies", ref l_U830, 1000, 10000, 500 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "VO Timer", ref l_U1617, 0, 5000, 1 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Interp Length", ref (uParam1^)[I]._fU88, 0, 999999999, 100 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Length", ref (uParam1^)[I]._fU84, 0, 999999999, 50 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U1790, 0, 999999, 100 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U1800, 0, 999999, 100 ); // s_nyc2_isequences
ADD_WIDGET_INT_SLIDER( "Time to start Rayfire after FX", ref l_U203, 0, 20000, 1 ); // s_nyc2_isequences2
ADD_WIDGET_INT_SLIDER( "Tower Fall Cam Time", ref l_U2107, 0, 2000, l_U2107 ); // s_nyc2_rooftops
ADD_WIDGET_INT_SLIDER( "Blendout cam early cutoff", ref l_U168, 0, 2000, 1 ); // s_nyc_isequences2
ADD_WIDGET_INT_SLIDER( "Blendout cam speed", ref l_U169, 0, 2000, 1 ); // s_nyc_isequences2
ADD_WIDGET_INT_SLIDER( "iAdvancePedCount", ref l_U80, 0, 10, 1 ); // s_office_ai_test
ADD_WIDGET_INT_SLIDER( "Time of day: hour", ref l_U24, 0, 24, 1 ); // s_office_cutscene
ADD_WIDGET_INT_SLIDER( "Time of day: minute", ref l_U25, 0, 59, 1 ); // s_office_cutscene
ADD_WIDGET_INT_SLIDER( "Start Time", ref l_U1029[I]._fU24, 0, 999999, 30 ); // s_office_imgmetrics
ADD_WIDGET_INT_SLIDER( "Swap Delay", ref l_U244, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Open Delay", ref l_U294, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Door Swap Delay", ref l_U307, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U326, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Player Control Delay", ref l_U673, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Lock Doors Delay", ref l_U683, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Player Force Aim Duration", ref l_U693, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Delay", ref l_U660, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera to Gamecam Interp time", ref l_U661, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Player Control Delay", ref l_U720, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Player Gait Time", ref l_U721, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U706, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera to Gameplay Cam Interp Time", ref l_U707, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Player Control Delay", ref l_U749, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Player Gait Time", ref l_U751, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U735, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera to Gameplay Cam Interp Time", ref l_U736, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Player Control Delay", ref l_U771, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U773, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Gameplay Cam Interp Time", ref l_U774, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Player Control Delay", ref l_U794, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U796, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Gameplay Cam Interp Time", ref l_U797, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Bullet Start Time", ref l_U835, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U873, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Interp to Gameplay Time", ref l_U888, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Bullet Start Time", ref l_U919, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Camera Stop Time", ref l_U958, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Interp to Gameplay Time", ref l_U974, 0, 999999, 100 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Van Color", ref l_U1078, 0, 99, 1 ); // s_office_isequences
ADD_WIDGET_INT_SLIDER( "Movie Time", ref l_U41, 0, 999999, 1 ); // s_office_isequences_2
ADD_WIDGET_INT_SLIDER( "Prone to Cover Cam Start Time", ref l_U912, 0, 999999, 100 ); // s_office_lobbympm
ADD_WIDGET_INT_SLIDER( "Prone to Cover Cam Stop Time", ref l_U913, 0, 999999, 100 ); // s_office_lobbympm
ADD_WIDGET_INT_SLIDER( "Prone to Cover Cam To Game Interp Time", ref l_U914, 0, 999999, 100 ); // s_office_lobbympm
ADD_WIDGET_INT_SLIDER( "Prone to Cover Cam Start Time", ref l_U912, 0, 999999, 100 ); // s_office_lobbympm
ADD_WIDGET_INT_SLIDER( "Prone to Cover Cam Stop Time", ref l_U913, 0, 999999, 100 ); // s_office_lobbympm
ADD_WIDGET_INT_SLIDER( "Prone to Cover Cam To Game Interp Time", ref l_U914, 0, 999999, 100 ); // s_office_lobbympm
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE01_A", ref l_U1153, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE01_B", ref l_U1154, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE01_C", ref l_U1155, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE02_A", ref l_U1156, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE02_B", ref l_U1157, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_OPENDOORS", ref l_U1159, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "Set Time", ref l_U65, 0, 100, 1 ); // s_pana_imagemetrics
ADD_WIDGET_INT_SLIDER( "Stop Anim Cam Early", ref l_U116, 0, 100000, 50 ); // s_pana_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera blend time", ref l_U117, 0, 100000, 50 ); // s_pana_isequences
ADD_WIDGET_INT_SLIDER( "Passos Bed Cam Trim", ref l_U787, 0, 10000000, 100 ); // s_pana_ll
ADD_WIDGET_INT_SLIDER( "Note Cam Trim", ref l_U931, 0, 10000000, 100 ); // s_pana_ll
ADD_WIDGET_INT_SLIDER( "Blood Cam Trim", ref l_U1008, 0, 10000000, 100 ); // s_pana_md1
ADD_WIDGET_INT_SLIDER( "Newspaper Cam Trim", ref l_U904, 0, 10000000, 100 ); // s_pana_md2
ADD_WIDGET_INT_SLIDER( "Passport Cam Trim", ref l_U1054, 0, 10000000, 100 ); // s_pana_md2
ADD_WIDGET_INT_SLIDER( "Jewelry Box Cam Trim", ref l_U1204, 0, 10000000, 100 ); // s_pana_md2
ADD_WIDGET_INT_SLIDER( "Display Cam Trim", ref l_U1234, 0, 10000000, 100 ); // s_pana_vc
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE01_A", ref l_U1153, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE01_B", ref l_U1154, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE01_C", ref l_U1155, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE02_A", ref l_U1156, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_VALUE02_B", ref l_U1157, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "iImageFX_OPENDOORS", ref l_U1159, 0, 20000, 1000 ); // s_pana_ef
ADD_WIDGET_INT_SLIDER( "Set Time", ref l_U65, 0, 100, 1 ); // s_pana_imagemetrics
ADD_WIDGET_INT_SLIDER( "Stop Anim Cam Early", ref l_U116, 0, 100000, 50 ); // s_pana_isequences
ADD_WIDGET_INT_SLIDER( "Animated Camera blend time", ref l_U117, 0, 100000, 50 ); // s_pana_isequences
ADD_WIDGET_INT_SLIDER( "Door Open Timer", ref l_U650, 0, 100000, 1 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Door Open Timer", ref l_U608, 0, 100000, 1 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Timer", ref l_U630, 0, 10000, 1 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Timer", ref l_U640, 0, 10000, 1 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Grenade Thrower Delay Move", ref l_U651, 0, 100000, 50 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Non Grenade Thrower Delay Move", ref l_U652, 0, 100000, 50 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Elevator L Arrive Delay", ref l_U705, 0, 100000, 50 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Start filling delay", ref l_U221, 0, 100000, 50 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Start emptying delay", ref l_U232, 0, 100000, 50 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U211, 0, 6000, 1 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Animated Camera Interp Time", ref l_U212, 0, 6000, 1 ); // s_police_atrium
ADD_WIDGET_INT_SLIDER( "Shooting Duration Min", ref l_U901, 0, 100000, 50 ); // s_police_bossfight
ADD_WIDGET_INT_SLIDER( "Shooting Duration Max", ref l_U902, 0, 100000, 50 ); // s_police_bossfight
ADD_WIDGET_INT_SLIDER( "Hiding Duration Min", ref l_U912, 0, 100000, 50 ); // s_police_bossfight
ADD_WIDGET_INT_SLIDER( "Hiding Duration Max", ref l_U913, 0, 100000, 50 ); // s_police_bossfight
ADD_WIDGET_INT_SLIDER( "Pistol", ref l_U1046, 0, 10000, 1 ); // s_police_bossfight
ADD_WIDGET_INT_SLIDER( "Rifle/SMG", ref l_U1047, 0, 10000, 1 ); // s_police_bossfight
ADD_WIDGET_INT_SLIDER( "Shotgun", ref l_U1048, 0, 10000, 1 ); // s_police_bossfight
ADD_WIDGET_INT_SLIDER( "Animated Cam Start Interp", ref l_U261, 0, 10000, 1 ); // s_police_f2
ADD_WIDGET_INT_SLIDER( "Animated Cam Interp", ref l_U262, 0, 10000, 1 ); // s_police_f2
ADD_WIDGET_INT_SLIDER( "Trigger snitch", ref l_U423, 0, 10000, 1 ); // s_police_f2
ADD_WIDGET_INT_SLIDER( "Slide to show", ref l_U884, 0, 4, 1 ); // s_police_f2
ADD_WIDGET_INT_SLIDER( "Slide Advance time", ref l_U1050, 0, 5000, 1 ); // s_police_f2
ADD_WIDGET_INT_SLIDER( "Button fudge time", ref l_U1051, 0, 5000, 1 ); // s_police_f2
ADD_WIDGET_INT_SLIDER( "Stop anim camera time", ref l_U186, 0, 1000000, 50 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Anim camera interp time", ref l_U187, 0, 1000000, 50 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Start checking for flinches", ref l_U1396, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Dave is flinching", ref l_U1397, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Start checking for flinches after cutscene", ref l_U1399, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Dave is flinching after cutscene", ref l_U1400, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Dave say something", ref l_U1398, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Set Time", ref l_U41, 0, 100, 1 ); // s_police_imgmetrics
ADD_WIDGET_INT_SLIDER( "Length", ref l_U266, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Length", ref l_U267, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Gameplay Interp time", ref l_U269, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Scripted Camera Interp Time", ref l_U268, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Start Shootdodge", ref l_U281, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Start Bullet Time", ref l_U291, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Stop Bullet Time", ref l_U301, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Trigger UFE", ref l_U312, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Loop time (in miliseconds)", ref l_U399, 0, 12000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Spawn Delay", ref l_U395, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Spawn Delay", ref l_U396, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Spawn Delay", ref l_U397, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Spawn Delay", ref l_U398, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "VIG04A_UFE1 Shoot interval low", ref l_U998, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04A_UFE1 Shoot interval high", ref l_U999, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04A_UFE2 Shoot interval low", ref l_U1032, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04A_UFE2 Shoot interval high", ref l_U1033, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04B_UFE Shoot interval low", ref l_U1066, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04B_UFE Shoot interval high", ref l_U1067, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER1 Shoot interval low", ref l_U1146, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER1 Shoot interval high", ref l_U1147, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER2 Shoot interval low", ref l_U1158, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER2 Shoot interval high", ref l_U1159, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER3 Shoot interval low", ref l_U1172, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER3 Shoot interval high", ref l_U1173, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Camera interp time", ref l_U892, 0, 50000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Camera interp time", ref l_U891, 0, 50000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Variation Number: ", ref l_U802, 1, 6, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Plaform Variation Number: ", ref l_U803, 1, 3, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Plaform Variation Number: ", ref l_U804, 4, 6, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Time to drop weapon ", ref l_U805, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U332, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U350, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U368, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U386, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U404, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U422, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U440, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U458, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U476, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U494, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U512, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U530, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U548, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U566, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U584, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U602, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U620, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U638, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U656, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U674, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U692, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U710, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U728, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U746, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U764, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U782, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U800, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Stop time", ref l_U761, 0, 10000, 1 ); // s_police_itroom
ADD_WIDGET_INT_SLIDER( "Interp time", ref l_U760, 0, 10000, 1 ); // s_police_itroom
ADD_WIDGET_INT_SLIDER( "Time to play the building explosion", ref l_U348, 0, 10000000, 50 ); // s_police_parking
ADD_WIDGET_INT_SLIDER( "Start Shooting Prisoner", ref l_U358, 0, 100000, 50 ); // s_police_parking
ADD_WIDGET_INT_SLIDER( "Stop Shooting Prisoner", ref l_U368, 0, 100000, 50 ); // s_police_parking
ADD_WIDGET_INT_SLIDER( "Start Shooting Max", ref l_U378, 0, 100000, 50 ); // s_police_parking
ADD_WIDGET_INT_SLIDER( "Time between shots", ref l_U606, 0, 10000, 50 ); // s_police_parking
ADD_WIDGET_INT_SLIDER( "Animated Camera Stop Time", ref l_U245, 0, 6000, 1 ); // s_police_parking
ADD_WIDGET_INT_SLIDER( "Animated Camera Interp Time", ref l_U246, 0, 6000, 1 ); // s_police_parking
ADD_WIDGET_INT_SLIDER( "Interp time", ref l_U293, 0, 100000, 50 ); // s_police_stairwell
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U294, 0, 1000000, 50 ); // s_police_stairwell
ADD_WIDGET_INT_SLIDER( "Time to suffocate", ref l_U355, 0, 100000, 50 ); // s_police_stairwell
ADD_WIDGET_INT_SLIDER( "Stop anim camera time", ref l_U186, 0, 1000000, 50 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Anim camera interp time", ref l_U187, 0, 1000000, 50 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Start checking for flinches", ref l_U1396, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Dave is flinching", ref l_U1397, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Start checking for flinches after cutscene", ref l_U1399, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Dave is flinching after cutscene", ref l_U1400, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Dave say something", ref l_U1398, 0, 50000, 1 ); // s_police_holdingcells
ADD_WIDGET_INT_SLIDER( "Set Time", ref l_U41, 0, 100, 1 ); // s_police_imgmetrics
ADD_WIDGET_INT_SLIDER( "Length", ref l_U266, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Length", ref l_U267, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Gameplay Interp time", ref l_U269, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Scripted Camera Interp Time", ref l_U268, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Start Shootdodge", ref l_U281, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Start Bullet Time", ref l_U291, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Stop Bullet Time", ref l_U301, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Trigger UFE", ref l_U312, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Loop time (in miliseconds)", ref l_U399, 0, 12000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Spawn Delay", ref l_U395, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Spawn Delay", ref l_U396, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Spawn Delay", ref l_U397, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "Spawn Delay", ref l_U398, 0, 10000, 1 ); // s_police_isequences
ADD_WIDGET_INT_SLIDER( "VIG04A_UFE1 Shoot interval low", ref l_U998, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04A_UFE1 Shoot interval high", ref l_U999, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04A_UFE2 Shoot interval low", ref l_U1032, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04A_UFE2 Shoot interval high", ref l_U1033, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04B_UFE Shoot interval low", ref l_U1066, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04B_UFE Shoot interval high", ref l_U1067, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER1 Shoot interval low", ref l_U1146, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER1 Shoot interval high", ref l_U1147, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER2 Shoot interval low", ref l_U1158, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER2 Shoot interval high", ref l_U1159, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER3 Shoot interval low", ref l_U1172, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "VIG04C_RIOTER3 Shoot interval high", ref l_U1173, 0, 80000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Camera interp time", ref l_U892, 0, 50000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Camera interp time", ref l_U891, 0, 50000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Variation Number: ", ref l_U802, 1, 6, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Plaform Variation Number: ", ref l_U803, 1, 3, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Plaform Variation Number: ", ref l_U804, 4, 6, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Time to drop weapon ", ref l_U805, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U332, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U350, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U368, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U386, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U404, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U422, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U440, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U458, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U476, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U494, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U512, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U530, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U548, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U566, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U584, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U602, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U620, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U638, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U656, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U674, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U692, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U710, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U728, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U746, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U764, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U782, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U800, 0, 30000, 1 ); // s_police_isequences2
ADD_WIDGET_INT_SLIDER( "nAttDropRifle", ref l_U389, 0, 10000, 250 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "nAttGetPistol", ref l_U390, 0, 10000, 250 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "nCloseTrophyElevDoors", ref l_U451, 0, 60000, 500 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "nTrophyElevReturnToGameplayCam", ref l_U461, 0, 60000, 500 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "nTrophyElevatorEnterCamDuration", ref l_U428, 0, 60000, 500 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "Current Conversation", ref l_U648, 0, l_U650 - 1, 1 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "Return To GP Dur", ref l_U494, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "Shaker duration", ref l_U509, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "Return to GP Timer", ref l_U528, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolBack01Start", ref l_U642, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolBack01", ref l_U632, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolBack02Start", ref l_U680, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolBack02", ref l_U670, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolLeftStart", ref l_U718, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolLeft", ref l_U708, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolRightStart", ref l_U566, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolRight", ref l_U556, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nRifleRightStart", ref l_U604, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nRifleRight", ref l_U594, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nLeftPointerStart", ref l_U756, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nLeftPointer", ref l_U746, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "Camera Duration", uParam4, 0, 100000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nStartBB", ref l_U1267, 0, 10000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nStartTS", ref l_U1287, 0, 10000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nStart3rdTS", ref l_U1288, 0, 10000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "Passos 1st Speech Delay", ref l_U657, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Passos Move Delay", ref l_U667, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Passos 2nd Speech Delay", ref l_U677, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U597, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 01 Duration", ref l_U605, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U606, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 02 Duration", ref l_U614, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U615, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 03 Duration", ref l_U623, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U624, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 04 Duration", ref l_U632, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U633, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 05 Duration", ref l_U641, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Player into Cover Delay", ref l_U708, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U771, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation Duration 01", ref l_U779, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U780, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation Duration 02", ref l_U788, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "A speech", ref l_U688._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "B speech", ref l_U746._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "CL speech", ref l_U804._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "CR speech", ref l_U862._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "D speech", ref l_U920._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "E speech", ref l_U978._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "F speech", ref l_U1036._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "LAST speech", ref l_U1094._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "steps", ref l_U648, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( ref cVar2, ref l_U1152[I]._fU36, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "WAVE 3 shoot at passos", ref l_U630, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( ref cVar2, ref l_U1283[I]._fU36, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( ref cVar2, ref l_U1388[I]._fU36, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "Passos comes out cover delay", ref l_U500, 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U615[0], 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U615[1], 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U615[2], 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "nPassosDeathCamTimer_Restaurant", ref l_U494, 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "nPassosDeathCamTimer_Stairs", ref l_U495, 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "Return to Gameplay Interpolation Duration", ref l_U1276, 0, 999999, 100 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nMPMWindowSmash", ref l_U1279, 0, 15000, 1 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nMPMLightRigBreak", ref l_U1280, 0, 15000, 1 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nMPM_GrenadePull", ref l_U1413, 0, 10000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nMPM_Fail", ref l_U1375, 0, 30000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nFailMPM", ref l_U1423, 0, 30000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nExplosionDelay", ref l_U1443, 0, 10000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nWhiteFlash", ref l_U1601, 0, 10000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nFailExplosionOver", ref l_U1433, 0, 10000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1691, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1701, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1711, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1721, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1731, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1741, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Blood timer", ref g_U3990, 0, 10000, 250 ); // startup
ADD_WIDGET_INT_SLIDER( "nAttDropRifle", ref l_U389, 0, 10000, 250 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "nAttGetPistol", ref l_U390, 0, 10000, 250 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "nCloseTrophyElevDoors", ref l_U451, 0, 60000, 500 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "nTrophyElevReturnToGameplayCam", ref l_U461, 0, 60000, 500 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "nTrophyElevatorEnterCamDuration", ref l_U428, 0, 60000, 500 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "Current Conversation", ref l_U648, 0, l_U650 - 1, 1 ); // stad_isequences
ADD_WIDGET_INT_SLIDER( "Return To GP Dur", ref l_U494, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "Shaker duration", ref l_U509, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "Return to GP Timer", ref l_U528, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolBack01Start", ref l_U642, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolBack01", ref l_U632, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolBack02Start", ref l_U680, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolBack02", ref l_U670, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolLeftStart", ref l_U718, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolLeft", ref l_U708, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolRightStart", ref l_U566, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nPistolRight", ref l_U556, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nRifleRightStart", ref l_U604, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nRifleRight", ref l_U594, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nLeftPointerStart", ref l_U756, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nLeftPointer", ref l_U746, 0, 50000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "Camera Duration", uParam4, 0, 100000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nStartBB", ref l_U1267, 0, 10000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nStartTS", ref l_U1287, 0, 10000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "nStart3rdTS", ref l_U1288, 0, 10000, 1 ); // stad_isequences2
ADD_WIDGET_INT_SLIDER( "Passos 1st Speech Delay", ref l_U657, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Passos Move Delay", ref l_U667, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Passos 2nd Speech Delay", ref l_U677, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U597, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 01 Duration", ref l_U605, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U606, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 02 Duration", ref l_U614, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U615, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 03 Duration", ref l_U623, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U624, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 04 Duration", ref l_U632, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U633, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation 05 Duration", ref l_U641, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Player into Cover Delay", ref l_U708, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U771, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation Duration 01", ref l_U779, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U780, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "Interpolation Duration 02", ref l_U788, 0, 999999, 100 ); // stad_isequences3
ADD_WIDGET_INT_SLIDER( "A speech", ref l_U688._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "B speech", ref l_U746._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "CL speech", ref l_U804._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "CR speech", ref l_U862._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "D speech", ref l_U920._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "E speech", ref l_U978._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "F speech", ref l_U1036._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "LAST speech", ref l_U1094._fU228, 0, 10000, 250 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "steps", ref l_U648, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( ref cVar2, ref l_U1152[I]._fU36, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "WAVE 3 shoot at passos", ref l_U630, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( ref cVar2, ref l_U1283[I]._fU36, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( ref cVar2, ref l_U1388[I]._fU36, 0, 2000000, 10 ); // stad_maintenance
ADD_WIDGET_INT_SLIDER( "Passos comes out cover delay", ref l_U500, 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U615[0], 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U615[1], 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "Duration", ref l_U615[2], 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "nPassosDeathCamTimer_Restaurant", ref l_U494, 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "nPassosDeathCamTimer_Stairs", ref l_U495, 0, 10000, 1 ); // stad_storerestaurant
ADD_WIDGET_INT_SLIDER( "Return to Gameplay Interpolation Duration", ref l_U1276, 0, 999999, 100 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nMPMWindowSmash", ref l_U1279, 0, 15000, 1 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nMPMLightRigBreak", ref l_U1280, 0, 15000, 1 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nMPM_GrenadePull", ref l_U1413, 0, 10000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nMPM_Fail", ref l_U1375, 0, 30000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nFailMPM", ref l_U1423, 0, 30000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nExplosionDelay", ref l_U1443, 0, 10000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nWhiteFlash", ref l_U1601, 0, 10000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "nFailExplosionOver", ref l_U1433, 0, 10000, 250 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1691, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1701, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1711, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1721, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1731, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Start Timer Length", ref l_U1741, -100000, 100000, 10 ); // stad_tower
ADD_WIDGET_INT_SLIDER( "Blood timer", ref g_U3990, 0, 10000, 250 ); // startup
